FILE
  COMPILATION_UNIT
    COMPILER_ANNOTATIONS
      <empty list>
    DECLARATION
      ANNOTATIONS
        ANNOTATION
          ANNOTATION_NAME
            PsiElement(LIDENTIFIER)('abstract')
          ANNOTATION_ARGUMENTS
            LITERAL_ARGUMENTS
              <empty list>
      CLASS_DECLARATION
        PsiElement(class)('class')
        TYPE_NAME_DECLARATION
          TYPE_NAME
            PsiElement(UIDENTIFIER)('Algebraic')
        PARAMETERS
          PsiElement(()('(')
          PsiElement())(')')
        CASE_TYPES
          PsiElement(of)('of')
          CASE_TYPE
            MEMBER_NAME
              PsiElement(LIDENTIFIER)('concrete')
          PsiElement(|)('|')
          CASE_TYPE
            QUALIFIED_TYPE
              TYPE_NAME_WITH_ARGUMENTS
                TYPE_NAME
                  PsiElement(UIDENTIFIER)('Concrete')
        CLASS_BODY
          PsiElement({)('{')
          PsiElement(})('}')
    COMPILER_ANNOTATIONS
      <empty list>
    DECLARATION
      ANNOTATIONS
        <empty list>
      CLASS_DECLARATION
        PsiElement(class)('class')
        TYPE_NAME_DECLARATION
          TYPE_NAME
            PsiElement(UIDENTIFIER)('Concrete')
        PARAMETERS
          PsiElement(()('(')
          PsiElement())(')')
        EXTENDED_TYPE
          PsiElement(extends)('extends')
          QUALIFIED_TYPE
            TYPE_NAME_WITH_ARGUMENTS
              TYPE_NAME
                PsiElement(UIDENTIFIER)('Algebraic')
          POSITIONAL_ARGUMENTS
            PsiElement(()('(')
            PsiElement())(')')
        CLASS_BODY
          PsiElement({)('{')
          PsiElement(})('}')
    COMPILER_ANNOTATIONS
      <empty list>
    DECLARATION
      ANNOTATIONS
        <empty list>
      OBJECT_DECLARATION
        PsiElement(object)('object')
        MEMBER_NAME_DECLARATION
          MEMBER_NAME
            PsiElement(LIDENTIFIER)('concrete')
        EXTENDED_TYPE
          PsiElement(extends)('extends')
          QUALIFIED_TYPE
            TYPE_NAME_WITH_ARGUMENTS
              TYPE_NAME
                PsiElement(UIDENTIFIER)('Algebraic')
          POSITIONAL_ARGUMENTS
            PsiElement(()('(')
            PsiElement())(')')
        CLASS_BODY
          PsiElement({)('{')
          PsiElement(})('}')
    COMPILER_ANNOTATIONS
      <empty list>
    DECLARATION
      ANNOTATIONS
        <empty list>
      VOID_OR_INFERRED_METHOD_DECLARATION
        PsiElement(void)('void')
        MEMBER_NAME_DECLARATION
          MEMBER_NAME
            PsiElement(LIDENTIFIER)('algebraic')
        PARAMETERS
          PsiElement(()('(')
          PARAMETER_DECLARATION
            COMPILER_ANNOTATIONS
              <empty list>
            ANNOTATIONS
              <empty list>
            PARAMETER
              PARAMETER_TYPE
                TYPE
                  UNION_TYPE
                    INTERSECTION_TYPE
                      ENTRY_TYPE
                        ABBREVIATED_TYPE
                          QUALIFIED_TYPE
                            TYPE_NAME_WITH_ARGUMENTS
                              TYPE_NAME
                                PsiElement(UIDENTIFIER)('Algebraic')
              MEMBER_NAME
                PsiElement(LIDENTIFIER)('z')
          PsiElement())(')')
        BLOCK
          PsiElement({)('{')
          DECLARATION_OR_STATEMENT
            COMPILER_ANNOTATIONS
              <empty list>
            STATEMENT
              CONTROL_STATEMENT
                SWITCH_CASE_ELSE
                  SWITCH_HEADER
                    PsiElement(switch)('switch')
                    PsiElement(()('(')
                    EXPRESSION
                      ASSIGNMENT_EXPRESSION
                        THEN_ELSE_EXPRESSION
                          DISJUNCTION_EXPRESSION
                            CONJUNCTION_EXPRESSION
                              LOGICAL_NEGATION_EXPRESSION
                                EQUALITY_EXPRESSION
                                  COMPARISON_EXPRESSION
                                    EXISTENCE_EMPTINESS_EXPRESSION
                                      RANGE_INTERVAL_ENTRY_EXPRESSION
                                        ADDITIVE_EXPRESSION
                                          MULTIPLICATIVE_EXPRESSION
                                            DEFAULT_EXPRESSION
                                              NEGATION_COMPLEMENT_EXPRESSION
                                                EXPONENTIATION_EXPRESSION
                                                  INCREMENT_DECREMENT_EXPRESSION
                                                    POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                      PRIMARY
                                                        BASE
                                                          BASE_REFERENCE
                                                            MEMBER_REFERENCE
                                                              MEMBER_NAME
                                                                PsiElement(LIDENTIFIER)('z')
                    PsiElement())(')')
                  CASES
                    CASE_BLOCK
                      PsiElement(case)('case')
                      PsiElement(()('(')
                      CASE_ITEM
                        MATCH_CASE_CONDITION
                          EXPRESSIONS
                            EXPRESSION
                              ASSIGNMENT_EXPRESSION
                                THEN_ELSE_EXPRESSION
                                  DISJUNCTION_EXPRESSION
                                    CONJUNCTION_EXPRESSION
                                      LOGICAL_NEGATION_EXPRESSION
                                        EQUALITY_EXPRESSION
                                          COMPARISON_EXPRESSION
                                            EXISTENCE_EMPTINESS_EXPRESSION
                                              RANGE_INTERVAL_ENTRY_EXPRESSION
                                                ADDITIVE_EXPRESSION
                                                  MULTIPLICATIVE_EXPRESSION
                                                    DEFAULT_EXPRESSION
                                                      NEGATION_COMPLEMENT_EXPRESSION
                                                        EXPONENTIATION_EXPRESSION
                                                          INCREMENT_DECREMENT_EXPRESSION
                                                            POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                              PRIMARY
                                                                BASE
                                                                  BASE_REFERENCE
                                                                    MEMBER_REFERENCE
                                                                      MEMBER_NAME
                                                                        PsiElement(LIDENTIFIER)('concrete')
                      PsiElement())(')')
                      BLOCK
                        PsiElement({)('{')
                        PsiElement(})('}')
                    CASE_BLOCK
                      PsiElement(case)('case')
                      PsiElement(()('(')
                      CASE_ITEM
                        IS_CASE_CONDITION
                          PsiElement(is)('is')
                          TYPE
                            UNION_TYPE
                              INTERSECTION_TYPE
                                ENTRY_TYPE
                                  ABBREVIATED_TYPE
                                    QUALIFIED_TYPE
                                      TYPE_NAME_WITH_ARGUMENTS
                                        TYPE_NAME
                                          PsiElement(UIDENTIFIER)('Concrete')
                      PsiElement())(')')
                      BLOCK
                        PsiElement({)('{')
                        PsiElement(})('}')
          PsiElement(})('}')
    COMPILER_ANNOTATIONS
      <empty list>
    DECLARATION
      ANNOTATIONS
        <empty list>
      VOID_OR_INFERRED_METHOD_DECLARATION
        PsiElement(void)('void')
        MEMBER_NAME_DECLARATION
          MEMBER_NAME
            PsiElement(LIDENTIFIER)('enumConstraint')
        TYPE_PARAMETERS
          PsiElement(<)('<')
          TYPE_PARAMETER
            TYPE_NAME_DECLARATION
              TYPE_NAME
                PsiElement(UIDENTIFIER)('T')
          PsiElement(>)('>')
        PARAMETERS
          PsiElement(()('(')
          PARAMETER_DECLARATION
            COMPILER_ANNOTATIONS
              <empty list>
            ANNOTATIONS
              <empty list>
            PARAMETER
              PARAMETER_TYPE
                TYPE
                  UNION_TYPE
                    INTERSECTION_TYPE
                      ENTRY_TYPE
                        ABBREVIATED_TYPE
                          QUALIFIED_TYPE
                            TYPE_NAME_WITH_ARGUMENTS
                              TYPE_NAME
                                PsiElement(UIDENTIFIER)('T')
              MEMBER_NAME
                PsiElement(LIDENTIFIER)('t')
          PsiElement())(')')
        TYPE_CONSTRAINTS
          TYPE_CONSTRAINT
            COMPILER_ANNOTATIONS
              <empty list>
            PsiElement(given)('given')
            TYPE_NAME_DECLARATION
              TYPE_NAME
                PsiElement(UIDENTIFIER)('T')
            CASE_TYPES
              PsiElement(of)('of')
              CASE_TYPE
                QUALIFIED_TYPE
                  TYPE_NAME_WITH_ARGUMENTS
                    TYPE_NAME
                      PsiElement(UIDENTIFIER)('String')
              PsiElement(|)('|')
              CASE_TYPE
                QUALIFIED_TYPE
                  TYPE_NAME_WITH_ARGUMENTS
                    TYPE_NAME
                      PsiElement(UIDENTIFIER)('Integer')
        BLOCK
          PsiElement({)('{')
          DECLARATION_OR_STATEMENT
            COMPILER_ANNOTATIONS
              <empty list>
            STATEMENT
              CONTROL_STATEMENT
                SWITCH_CASE_ELSE
                  SWITCH_HEADER
                    PsiElement(switch)('switch')
                    PsiElement(()('(')
                    EXPRESSION
                      ASSIGNMENT_EXPRESSION
                        THEN_ELSE_EXPRESSION
                          DISJUNCTION_EXPRESSION
                            CONJUNCTION_EXPRESSION
                              LOGICAL_NEGATION_EXPRESSION
                                EQUALITY_EXPRESSION
                                  COMPARISON_EXPRESSION
                                    EXISTENCE_EMPTINESS_EXPRESSION
                                      RANGE_INTERVAL_ENTRY_EXPRESSION
                                        ADDITIVE_EXPRESSION
                                          MULTIPLICATIVE_EXPRESSION
                                            DEFAULT_EXPRESSION
                                              NEGATION_COMPLEMENT_EXPRESSION
                                                EXPONENTIATION_EXPRESSION
                                                  INCREMENT_DECREMENT_EXPRESSION
                                                    POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                      PRIMARY
                                                        BASE
                                                          BASE_REFERENCE
                                                            MEMBER_REFERENCE
                                                              MEMBER_NAME
                                                                PsiElement(LIDENTIFIER)('t')
                    PsiElement())(')')
                  CASES
                    CASE_BLOCK
                      PsiElement(case)('case')
                      PsiElement(()('(')
                      CASE_ITEM
                        IS_CASE_CONDITION
                          PsiElement(is)('is')
                          TYPE
                            UNION_TYPE
                              INTERSECTION_TYPE
                                ENTRY_TYPE
                                  ABBREVIATED_TYPE
                                    QUALIFIED_TYPE
                                      TYPE_NAME_WITH_ARGUMENTS
                                        TYPE_NAME
                                          PsiElement(UIDENTIFIER)('String')
                      PsiElement())(')')
                      BLOCK
                        PsiElement({)('{')
                        DECLARATION_OR_STATEMENT
                          COMPILER_ANNOTATIONS
                            <empty list>
                          STATEMENT
                            EXPRESSION_OR_SPECIFICATION_STATEMENT
                              EXPRESSION
                                ASSIGNMENT_EXPRESSION
                                  THEN_ELSE_EXPRESSION
                                    DISJUNCTION_EXPRESSION
                                      CONJUNCTION_EXPRESSION
                                        LOGICAL_NEGATION_EXPRESSION
                                          EQUALITY_EXPRESSION
                                            COMPARISON_EXPRESSION
                                              EXISTENCE_EMPTINESS_EXPRESSION
                                                RANGE_INTERVAL_ENTRY_EXPRESSION
                                                  ADDITIVE_EXPRESSION
                                                    MULTIPLICATIVE_EXPRESSION
                                                      DEFAULT_EXPRESSION
                                                        NEGATION_COMPLEMENT_EXPRESSION
                                                          EXPONENTIATION_EXPRESSION
                                                            INCREMENT_DECREMENT_EXPRESSION
                                                              POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                                PRIMARY
                                                                  BASE
                                                                    BASE_REFERENCE
                                                                      MEMBER_REFERENCE
                                                                        MEMBER_NAME
                                                                          PsiElement(LIDENTIFIER)('print')
                                                                  ARGUMENTS
                                                                    POSITIONAL_ARGUMENTS
                                                                      PsiElement(()('(')
                                                                      POSITIONAL_ARGUMENT
                                                                        FUNCTION_OR_EXPRESSION
                                                                          EXPRESSION
                                                                            ASSIGNMENT_EXPRESSION
                                                                              THEN_ELSE_EXPRESSION
                                                                                DISJUNCTION_EXPRESSION
                                                                                  CONJUNCTION_EXPRESSION
                                                                                    LOGICAL_NEGATION_EXPRESSION
                                                                                      EQUALITY_EXPRESSION
                                                                                        COMPARISON_EXPRESSION
                                                                                          EXISTENCE_EMPTINESS_EXPRESSION
                                                                                            RANGE_INTERVAL_ENTRY_EXPRESSION
                                                                                              ADDITIVE_EXPRESSION
                                                                                                MULTIPLICATIVE_EXPRESSION
                                                                                                  DEFAULT_EXPRESSION
                                                                                                    NEGATION_COMPLEMENT_EXPRESSION
                                                                                                      EXPONENTIATION_EXPRESSION
                                                                                                        INCREMENT_DECREMENT_EXPRESSION
                                                                                                          POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                                                                            PRIMARY
                                                                                                              BASE
                                                                                                                BASE_REFERENCE
                                                                                                                  MEMBER_REFERENCE
                                                                                                                    MEMBER_NAME
                                                                                                                      PsiElement(LIDENTIFIER)('t')
                                                                      PsiElement())(')')
                              PsiElement(;)(';')
                        PsiElement(})('}')
                    CASE_BLOCK
                      PsiElement(case)('case')
                      PsiElement(()('(')
                      CASE_ITEM
                        IS_CASE_CONDITION
                          PsiElement(is)('is')
                          TYPE
                            UNION_TYPE
                              INTERSECTION_TYPE
                                ENTRY_TYPE
                                  ABBREVIATED_TYPE
                                    QUALIFIED_TYPE
                                      TYPE_NAME_WITH_ARGUMENTS
                                        TYPE_NAME
                                          PsiElement(UIDENTIFIER)('Integer')
                      PsiElement())(')')
                      BLOCK
                        PsiElement({)('{')
                        DECLARATION_OR_STATEMENT
                          COMPILER_ANNOTATIONS
                            <empty list>
                          STATEMENT
                            EXPRESSION_OR_SPECIFICATION_STATEMENT
                              EXPRESSION
                                ASSIGNMENT_EXPRESSION
                                  THEN_ELSE_EXPRESSION
                                    DISJUNCTION_EXPRESSION
                                      CONJUNCTION_EXPRESSION
                                        LOGICAL_NEGATION_EXPRESSION
                                          EQUALITY_EXPRESSION
                                            COMPARISON_EXPRESSION
                                              EXISTENCE_EMPTINESS_EXPRESSION
                                                RANGE_INTERVAL_ENTRY_EXPRESSION
                                                  ADDITIVE_EXPRESSION
                                                    MULTIPLICATIVE_EXPRESSION
                                                      DEFAULT_EXPRESSION
                                                        NEGATION_COMPLEMENT_EXPRESSION
                                                          EXPONENTIATION_EXPRESSION
                                                            INCREMENT_DECREMENT_EXPRESSION
                                                              POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                                PRIMARY
                                                                  BASE
                                                                    BASE_REFERENCE
                                                                      MEMBER_REFERENCE
                                                                        MEMBER_NAME
                                                                          PsiElement(LIDENTIFIER)('print')
                                                                  ARGUMENTS
                                                                    POSITIONAL_ARGUMENTS
                                                                      PsiElement(()('(')
                                                                      POSITIONAL_ARGUMENT
                                                                        FUNCTION_OR_EXPRESSION
                                                                          EXPRESSION
                                                                            ASSIGNMENT_EXPRESSION
                                                                              THEN_ELSE_EXPRESSION
                                                                                DISJUNCTION_EXPRESSION
                                                                                  CONJUNCTION_EXPRESSION
                                                                                    LOGICAL_NEGATION_EXPRESSION
                                                                                      EQUALITY_EXPRESSION
                                                                                        COMPARISON_EXPRESSION
                                                                                          EXISTENCE_EMPTINESS_EXPRESSION
                                                                                            RANGE_INTERVAL_ENTRY_EXPRESSION
                                                                                              ADDITIVE_EXPRESSION
                                                                                                MULTIPLICATIVE_EXPRESSION
                                                                                                  DEFAULT_EXPRESSION
                                                                                                    NEGATION_COMPLEMENT_EXPRESSION
                                                                                                      EXPONENTIATION_EXPRESSION
                                                                                                        INCREMENT_DECREMENT_EXPRESSION
                                                                                                          POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                                                                            PRIMARY
                                                                                                              BASE
                                                                                                                PAR_EXPRESSION
                                                                                                                  PsiElement(()('(')
                                                                                                                  ASSIGNMENT_EXPRESSION
                                                                                                                    THEN_ELSE_EXPRESSION
                                                                                                                      DISJUNCTION_EXPRESSION
                                                                                                                        CONJUNCTION_EXPRESSION
                                                                                                                          LOGICAL_NEGATION_EXPRESSION
                                                                                                                            EQUALITY_EXPRESSION
                                                                                                                              COMPARISON_EXPRESSION
                                                                                                                                EXISTENCE_EMPTINESS_EXPRESSION
                                                                                                                                  RANGE_INTERVAL_ENTRY_EXPRESSION
                                                                                                                                    ADDITIVE_EXPRESSION
                                                                                                                                      MULTIPLICATIVE_EXPRESSION
                                                                                                                                        DEFAULT_EXPRESSION
                                                                                                                                          NEGATION_COMPLEMENT_EXPRESSION
                                                                                                                                            EXPONENTIATION_EXPRESSION
                                                                                                                                              INCREMENT_DECREMENT_EXPRESSION
                                                                                                                                                POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                                                                                                                  PRIMARY
                                                                                                                                                    BASE
                                                                                                                                                      BASE_REFERENCE
                                                                                                                                                        MEMBER_REFERENCE
                                                                                                                                                          MEMBER_NAME
                                                                                                                                                            PsiElement(LIDENTIFIER)('t')
                                                                                                                                        MULTIPLICATIVE_OPERATOR
                                                                                                                                          PsiElement(/)('/')
                                                                                                                                        DEFAULT_EXPRESSION
                                                                                                                                          NEGATION_COMPLEMENT_EXPRESSION
                                                                                                                                            EXPONENTIATION_EXPRESSION
                                                                                                                                              INCREMENT_DECREMENT_EXPRESSION
                                                                                                                                                POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                                                                                                                  PRIMARY
                                                                                                                                                    BASE
                                                                                                                                                      NONSTRING_LITERAL
                                                                                                                                                        PsiElement(FLOAT_LITERAL)('100.0')
                                                                                                                  PsiElement())(')')
                                                                                                              QUALIFIED_REFERENCE
                                                                                                                MEMBER_SELECTION_OPERATOR
                                                                                                                  PsiElement(.)('.')
                                                                                                                MEMBER_REFERENCE
                                                                                                                  MEMBER_NAME
                                                                                                                    PsiElement(LIDENTIFIER)('string')
                                                                      PsiElement())(')')
                              PsiElement(;)(';')
                        PsiElement(})('}')
          PsiElement(})('}')
    COMPILER_ANNOTATIONS
      <empty list>
    DECLARATION
      ANNOTATIONS
        <empty list>
      CLASS_DECLARATION
        PsiElement(class)('class')
        TYPE_NAME_DECLARATION
          TYPE_NAME
            PsiElement(UIDENTIFIER)('EnumConstraint')
        TYPE_PARAMETERS
          PsiElement(<)('<')
          TYPE_PARAMETER
            TYPE_NAME_DECLARATION
              TYPE_NAME
                PsiElement(UIDENTIFIER)('T')
          PsiElement(>)('>')
        PARAMETERS
          PsiElement(()('(')
          PARAMETER_DECLARATION
            COMPILER_ANNOTATIONS
              <empty list>
            ANNOTATIONS
              <empty list>
            PARAMETER
              PARAMETER_TYPE
                TYPE
                  UNION_TYPE
                    INTERSECTION_TYPE
                      ENTRY_TYPE
                        ABBREVIATED_TYPE
                          QUALIFIED_TYPE
                            TYPE_NAME_WITH_ARGUMENTS
                              TYPE_NAME
                                PsiElement(UIDENTIFIER)('T')
                PsiElement(...)('...')
              MEMBER_NAME
                PsiElement(LIDENTIFIER)('ti')
          PsiElement())(')')
        TYPE_CONSTRAINTS
          TYPE_CONSTRAINT
            COMPILER_ANNOTATIONS
              <empty list>
            PsiElement(given)('given')
            TYPE_NAME_DECLARATION
              TYPE_NAME
                PsiElement(UIDENTIFIER)('T')
            CASE_TYPES
              PsiElement(of)('of')
              CASE_TYPE
                QUALIFIED_TYPE
                  TYPE_NAME_WITH_ARGUMENTS
                    TYPE_NAME
                      PsiElement(UIDENTIFIER)('Float')
              PsiElement(|)('|')
              CASE_TYPE
                QUALIFIED_TYPE
                  TYPE_NAME_WITH_ARGUMENTS
                    TYPE_NAME
                      PsiElement(UIDENTIFIER)('Integer')
        CLASS_BODY
          PsiElement({)('{')
          DECLARATION_OR_STATEMENT
            COMPILER_ANNOTATIONS
              <empty list>
            DECLARATION
              ANNOTATIONS
                <empty list>
              INFERRED_ATTRIBUTE_DECLARATION
                PsiElement(value)('value')
                MEMBER_NAME_DECLARATION
                  MEMBER_NAME
                    PsiElement(LIDENTIFIER)('ts')
                SPECIFIER
                  PsiElement(=)('=')
                  FUNCTION_OR_EXPRESSION
                    EXPRESSION
                      ASSIGNMENT_EXPRESSION
                        THEN_ELSE_EXPRESSION
                          DISJUNCTION_EXPRESSION
                            CONJUNCTION_EXPRESSION
                              LOGICAL_NEGATION_EXPRESSION
                                EQUALITY_EXPRESSION
                                  COMPARISON_EXPRESSION
                                    EXISTENCE_EMPTINESS_EXPRESSION
                                      RANGE_INTERVAL_ENTRY_EXPRESSION
                                        ADDITIVE_EXPRESSION
                                          MULTIPLICATIVE_EXPRESSION
                                            DEFAULT_EXPRESSION
                                              NEGATION_COMPLEMENT_EXPRESSION
                                                EXPONENTIATION_EXPRESSION
                                                  INCREMENT_DECREMENT_EXPRESSION
                                                    POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                      PRIMARY
                                                        BASE
                                                          BASE_REFERENCE
                                                            MEMBER_REFERENCE
                                                              MEMBER_NAME
                                                                PsiElement(LIDENTIFIER)('ti')
                                                        QUALIFIED_REFERENCE
                                                          MEMBER_SELECTION_OPERATOR
                                                            PsiElement(.)('.')
                                                          MEMBER_REFERENCE
                                                            MEMBER_NAME
                                                              PsiElement(LIDENTIFIER)('sequence')
                PsiElement(;)(';')
          DECLARATION_OR_STATEMENT
            COMPILER_ANNOTATIONS
              <empty list>
            ANNOTATION
              ANNOTATION_NAME
                PsiElement(LIDENTIFIER)('shared')
              ANNOTATION_ARGUMENTS
                LITERAL_ARGUMENTS
                  <empty list>
            ANNOTATION
              ANNOTATION_NAME
                PsiElement(LIDENTIFIER)('actual')
              ANNOTATION_ARGUMENTS
                LITERAL_ARGUMENTS
                  <empty list>
            DECLARATION
              ANNOTATIONS
                <empty list>
              TYPED_METHOD_OR_ATTRIBUTE_DECLARATION
                TYPE
                  UNION_TYPE
                    INTERSECTION_TYPE
                      ENTRY_TYPE
                        ABBREVIATED_TYPE
                          QUALIFIED_TYPE
                            TYPE_NAME_WITH_ARGUMENTS
                              TYPE_NAME
                                PsiElement(UIDENTIFIER)('String')
                MEMBER_NAME_DECLARATION
                  MEMBER_NAME
                    PsiElement(LIDENTIFIER)('string')
                BLOCK
                  PsiElement({)('{')
                  DECLARATION_OR_STATEMENT
                    COMPILER_ANNOTATIONS
                      <empty list>
                    STATEMENT
                      CONTROL_STATEMENT
                        SWITCH_CASE_ELSE
                          SWITCH_HEADER
                            PsiElement(switch)('switch')
                            PsiElement(()('(')
                            EXPRESSION
                              ASSIGNMENT_EXPRESSION
                                THEN_ELSE_EXPRESSION
                                  DISJUNCTION_EXPRESSION
                                    CONJUNCTION_EXPRESSION
                                      LOGICAL_NEGATION_EXPRESSION
                                        EQUALITY_EXPRESSION
                                          COMPARISON_EXPRESSION
                                            EXISTENCE_EMPTINESS_EXPRESSION
                                              RANGE_INTERVAL_ENTRY_EXPRESSION
                                                ADDITIVE_EXPRESSION
                                                  MULTIPLICATIVE_EXPRESSION
                                                    DEFAULT_EXPRESSION
                                                      NEGATION_COMPLEMENT_EXPRESSION
                                                        EXPONENTIATION_EXPRESSION
                                                          INCREMENT_DECREMENT_EXPRESSION
                                                            POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                              PRIMARY
                                                                BASE
                                                                  BASE_REFERENCE
                                                                    MEMBER_REFERENCE
                                                                      MEMBER_NAME
                                                                        PsiElement(LIDENTIFIER)('ts')
                            PsiElement())(')')
                          CASES
                            CASE_BLOCK
                              PsiElement(case)('case')
                              PsiElement(()('(')
                              CASE_ITEM
                                IS_CASE_CONDITION
                                  PsiElement(is)('is')
                                  TYPE
                                    UNION_TYPE
                                      INTERSECTION_TYPE
                                        ENTRY_TYPE
                                          ABBREVIATED_TYPE
                                            QUALIFIED_TYPE
                                              TYPE_NAME_WITH_ARGUMENTS
                                                TYPE_NAME
                                                  PsiElement(UIDENTIFIER)('Empty')
                              PsiElement())(')')
                              BLOCK
                                PsiElement({)('{')
                                DECLARATION_OR_STATEMENT
                                  COMPILER_ANNOTATIONS
                                    <empty list>
                                  STATEMENT
                                    EXPRESSION_OR_SPECIFICATION_STATEMENT
                                      EXPRESSION
                                        ASSIGNMENT_EXPRESSION
                                          THEN_ELSE_EXPRESSION
                                            DISJUNCTION_EXPRESSION
                                              CONJUNCTION_EXPRESSION
                                                LOGICAL_NEGATION_EXPRESSION
                                                  EQUALITY_EXPRESSION
                                                    COMPARISON_EXPRESSION
                                                      EXISTENCE_EMPTINESS_EXPRESSION
                                                        RANGE_INTERVAL_ENTRY_EXPRESSION
                                                          ADDITIVE_EXPRESSION
                                                            MULTIPLICATIVE_EXPRESSION
                                                              DEFAULT_EXPRESSION
                                                                NEGATION_COMPLEMENT_EXPRESSION
                                                                  EXPONENTIATION_EXPRESSION
                                                                    INCREMENT_DECREMENT_EXPRESSION
                                                                      POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                                        PRIMARY
                                                                          BASE
                                                                            BASE_REFERENCE
                                                                              MEMBER_REFERENCE
                                                                                MEMBER_NAME
                                                                                  PsiElement(LIDENTIFIER)('print')
                                                                          ARGUMENTS
                                                                            POSITIONAL_ARGUMENTS
                                                                              PsiElement(()('(')
                                                                              POSITIONAL_ARGUMENT
                                                                                FUNCTION_OR_EXPRESSION
                                                                                  EXPRESSION
                                                                                    ASSIGNMENT_EXPRESSION
                                                                                      THEN_ELSE_EXPRESSION
                                                                                        DISJUNCTION_EXPRESSION
                                                                                          CONJUNCTION_EXPRESSION
                                                                                            LOGICAL_NEGATION_EXPRESSION
                                                                                              EQUALITY_EXPRESSION
                                                                                                COMPARISON_EXPRESSION
                                                                                                  EXISTENCE_EMPTINESS_EXPRESSION
                                                                                                    RANGE_INTERVAL_ENTRY_EXPRESSION
                                                                                                      ADDITIVE_EXPRESSION
                                                                                                        MULTIPLICATIVE_EXPRESSION
                                                                                                          DEFAULT_EXPRESSION
                                                                                                            NEGATION_COMPLEMENT_EXPRESSION
                                                                                                              EXPONENTIATION_EXPRESSION
                                                                                                                INCREMENT_DECREMENT_EXPRESSION
                                                                                                                  POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                                                                                    PRIMARY
                                                                                                                      BASE
                                                                                                                        BASE_REFERENCE
                                                                                                                          MEMBER_REFERENCE
                                                                                                                            MEMBER_NAME
                                                                                                                              PsiElement(LIDENTIFIER)('ts')
                                                                              PsiElement())(')')
                                      PsiElement(;)(';')
                                DECLARATION_OR_STATEMENT
                                  COMPILER_ANNOTATIONS
                                    <empty list>
                                  STATEMENT
                                    DIRECTIVE_STATEMENT
                                      DIRECTIVE
                                        RETURN_DIRECTIVE
                                          PsiElement(return)('return')
                                          FUNCTION_OR_EXPRESSION
                                            EXPRESSION
                                              ASSIGNMENT_EXPRESSION
                                                THEN_ELSE_EXPRESSION
                                                  DISJUNCTION_EXPRESSION
                                                    CONJUNCTION_EXPRESSION
                                                      LOGICAL_NEGATION_EXPRESSION
                                                        EQUALITY_EXPRESSION
                                                          COMPARISON_EXPRESSION
                                                            EXISTENCE_EMPTINESS_EXPRESSION
                                                              RANGE_INTERVAL_ENTRY_EXPRESSION
                                                                ADDITIVE_EXPRESSION
                                                                  MULTIPLICATIVE_EXPRESSION
                                                                    DEFAULT_EXPRESSION
                                                                      NEGATION_COMPLEMENT_EXPRESSION
                                                                        EXPONENTIATION_EXPRESSION
                                                                          INCREMENT_DECREMENT_EXPRESSION
                                                                            POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                                              PRIMARY
                                                                                BASE
                                                                                  STRING_EXPRESSION
                                                                                    MY_STRING_LITERAL
                                                                                      PsiElement(STRING_LITERAL)('"empty"')
                                      PsiElement(;)(';')
                                PsiElement(})('}')
                            CASE_BLOCK
                              PsiElement(case)('case')
                              PsiElement(()('(')
                              CASE_ITEM
                                IS_CASE_CONDITION
                                  PsiElement(is)('is')
                                  TYPE
                                    UNION_TYPE
                                      INTERSECTION_TYPE
                                        ENTRY_TYPE
                                          ABBREVIATED_TYPE
                                            QUALIFIED_TYPE
                                              TYPE_NAME_WITH_ARGUMENTS
                                                TYPE_NAME
                                                  PsiElement(UIDENTIFIER)('Sequence')
                                                TYPE_ARGUMENTS
                                                  PsiElement(<)('<')
                                                  TYPE_ARGUMENT
                                                    TYPE
                                                      UNION_TYPE
                                                        INTERSECTION_TYPE
                                                          ENTRY_TYPE
                                                            ABBREVIATED_TYPE
                                                              QUALIFIED_TYPE
                                                                TYPE_NAME_WITH_ARGUMENTS
                                                                  TYPE_NAME
                                                                    PsiElement(UIDENTIFIER)('T')
                                                  PsiElement(>)('>')
                              PsiElement())(')')
                              BLOCK
                                PsiElement({)('{')
                                DECLARATION_OR_STATEMENT
                                  COMPILER_ANNOTATIONS
                                    <empty list>
                                  STATEMENT
                                    EXPRESSION_OR_SPECIFICATION_STATEMENT
                                      EXPRESSION
                                        ASSIGNMENT_EXPRESSION
                                          THEN_ELSE_EXPRESSION
                                            DISJUNCTION_EXPRESSION
                                              CONJUNCTION_EXPRESSION
                                                LOGICAL_NEGATION_EXPRESSION
                                                  EQUALITY_EXPRESSION
                                                    COMPARISON_EXPRESSION
                                                      EXISTENCE_EMPTINESS_EXPRESSION
                                                        RANGE_INTERVAL_ENTRY_EXPRESSION
                                                          ADDITIVE_EXPRESSION
                                                            MULTIPLICATIVE_EXPRESSION
                                                              DEFAULT_EXPRESSION
                                                                NEGATION_COMPLEMENT_EXPRESSION
                                                                  EXPONENTIATION_EXPRESSION
                                                                    INCREMENT_DECREMENT_EXPRESSION
                                                                      POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                                        PRIMARY
                                                                          BASE
                                                                            BASE_REFERENCE
                                                                              MEMBER_REFERENCE
                                                                                MEMBER_NAME
                                                                                  PsiElement(LIDENTIFIER)('print')
                                                                          ARGUMENTS
                                                                            POSITIONAL_ARGUMENTS
                                                                              PsiElement(()('(')
                                                                              POSITIONAL_ARGUMENT
                                                                                FUNCTION_OR_EXPRESSION
                                                                                  EXPRESSION
                                                                                    ASSIGNMENT_EXPRESSION
                                                                                      THEN_ELSE_EXPRESSION
                                                                                        DISJUNCTION_EXPRESSION
                                                                                          CONJUNCTION_EXPRESSION
                                                                                            LOGICAL_NEGATION_EXPRESSION
                                                                                              EQUALITY_EXPRESSION
                                                                                                COMPARISON_EXPRESSION
                                                                                                  EXISTENCE_EMPTINESS_EXPRESSION
                                                                                                    RANGE_INTERVAL_ENTRY_EXPRESSION
                                                                                                      ADDITIVE_EXPRESSION
                                                                                                        MULTIPLICATIVE_EXPRESSION
                                                                                                          DEFAULT_EXPRESSION
                                                                                                            NEGATION_COMPLEMENT_EXPRESSION
                                                                                                              EXPONENTIATION_EXPRESSION
                                                                                                                INCREMENT_DECREMENT_EXPRESSION
                                                                                                                  POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                                                                                    PRIMARY
                                                                                                                      BASE
                                                                                                                        BASE_REFERENCE
                                                                                                                          MEMBER_REFERENCE
                                                                                                                            MEMBER_NAME
                                                                                                                              PsiElement(LIDENTIFIER)('ts')
                                                                              PsiElement())(')')
                                      PsiElement(;)(';')
                                DECLARATION_OR_STATEMENT
                                  COMPILER_ANNOTATIONS
                                    <empty list>
                                  STATEMENT
                                    DIRECTIVE_STATEMENT
                                      DIRECTIVE
                                        RETURN_DIRECTIVE
                                          PsiElement(return)('return')
                                          FUNCTION_OR_EXPRESSION
                                            EXPRESSION
                                              ASSIGNMENT_EXPRESSION
                                                THEN_ELSE_EXPRESSION
                                                  DISJUNCTION_EXPRESSION
                                                    CONJUNCTION_EXPRESSION
                                                      LOGICAL_NEGATION_EXPRESSION
                                                        EQUALITY_EXPRESSION
                                                          COMPARISON_EXPRESSION
                                                            EXISTENCE_EMPTINESS_EXPRESSION
                                                              RANGE_INTERVAL_ENTRY_EXPRESSION
                                                                ADDITIVE_EXPRESSION
                                                                  MULTIPLICATIVE_EXPRESSION
                                                                    DEFAULT_EXPRESSION
                                                                      NEGATION_COMPLEMENT_EXPRESSION
                                                                        EXPONENTIATION_EXPRESSION
                                                                          INCREMENT_DECREMENT_EXPRESSION
                                                                            POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                                              PRIMARY
                                                                                BASE
                                                                                  STRING_EXPRESSION
                                                                                    MY_STRING_LITERAL
                                                                                      PsiElement(STRING_LITERAL)('"sequence"')
                                      PsiElement(;)(';')
                                PsiElement(})('}')
                  PsiElement(})('}')
          PsiElement(})('}')
    COMPILER_ANNOTATIONS
      <empty list>
    DECLARATION
      ANNOTATIONS
        <empty list>
      VOID_OR_INFERRED_METHOD_DECLARATION
        PsiElement(void)('void')
        MEMBER_NAME_DECLARATION
          MEMBER_NAME
            PsiElement(LIDENTIFIER)('testEnumConstraints')
        PARAMETERS
          PsiElement(()('(')
          PsiElement())(')')
        BLOCK
          PsiElement({)('{')
          DECLARATION_OR_STATEMENT
            COMPILER_ANNOTATIONS
              <empty list>
            STATEMENT
              EXPRESSION_OR_SPECIFICATION_STATEMENT
                EXPRESSION
                  ASSIGNMENT_EXPRESSION
                    THEN_ELSE_EXPRESSION
                      DISJUNCTION_EXPRESSION
                        CONJUNCTION_EXPRESSION
                          LOGICAL_NEGATION_EXPRESSION
                            EQUALITY_EXPRESSION
                              COMPARISON_EXPRESSION
                                EXISTENCE_EMPTINESS_EXPRESSION
                                  RANGE_INTERVAL_ENTRY_EXPRESSION
                                    ADDITIVE_EXPRESSION
                                      MULTIPLICATIVE_EXPRESSION
                                        DEFAULT_EXPRESSION
                                          NEGATION_COMPLEMENT_EXPRESSION
                                            EXPONENTIATION_EXPRESSION
                                              INCREMENT_DECREMENT_EXPRESSION
                                                POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                  PRIMARY
                                                    BASE
                                                      BASE_REFERENCE
                                                        MEMBER_REFERENCE
                                                          MEMBER_NAME
                                                            PsiElement(LIDENTIFIER)('enumConstraint')
                                                    ARGUMENTS
                                                      POSITIONAL_ARGUMENTS
                                                        PsiElement(()('(')
                                                        POSITIONAL_ARGUMENT
                                                          FUNCTION_OR_EXPRESSION
                                                            EXPRESSION
                                                              ASSIGNMENT_EXPRESSION
                                                                THEN_ELSE_EXPRESSION
                                                                  DISJUNCTION_EXPRESSION
                                                                    CONJUNCTION_EXPRESSION
                                                                      LOGICAL_NEGATION_EXPRESSION
                                                                        EQUALITY_EXPRESSION
                                                                          COMPARISON_EXPRESSION
                                                                            EXISTENCE_EMPTINESS_EXPRESSION
                                                                              RANGE_INTERVAL_ENTRY_EXPRESSION
                                                                                ADDITIVE_EXPRESSION
                                                                                  MULTIPLICATIVE_EXPRESSION
                                                                                    DEFAULT_EXPRESSION
                                                                                      NEGATION_COMPLEMENT_EXPRESSION
                                                                                        EXPONENTIATION_EXPRESSION
                                                                                          INCREMENT_DECREMENT_EXPRESSION
                                                                                            POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                                                              PRIMARY
                                                                                                BASE
                                                                                                  NONSTRING_LITERAL
                                                                                                    PsiElement(NATURAL_LITERAL)('20')
                                                        PsiElement())(')')
                PsiElement(;)(';')
          DECLARATION_OR_STATEMENT
            COMPILER_ANNOTATIONS
              <empty list>
            STATEMENT
              EXPRESSION_OR_SPECIFICATION_STATEMENT
                EXPRESSION
                  ASSIGNMENT_EXPRESSION
                    THEN_ELSE_EXPRESSION
                      DISJUNCTION_EXPRESSION
                        CONJUNCTION_EXPRESSION
                          LOGICAL_NEGATION_EXPRESSION
                            EQUALITY_EXPRESSION
                              COMPARISON_EXPRESSION
                                EXISTENCE_EMPTINESS_EXPRESSION
                                  RANGE_INTERVAL_ENTRY_EXPRESSION
                                    ADDITIVE_EXPRESSION
                                      MULTIPLICATIVE_EXPRESSION
                                        DEFAULT_EXPRESSION
                                          NEGATION_COMPLEMENT_EXPRESSION
                                            EXPONENTIATION_EXPRESSION
                                              INCREMENT_DECREMENT_EXPRESSION
                                                POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                  PRIMARY
                                                    BASE
                                                      BASE_REFERENCE
                                                        MEMBER_REFERENCE
                                                          MEMBER_NAME
                                                            PsiElement(LIDENTIFIER)('enumConstraint')
                                                    ARGUMENTS
                                                      POSITIONAL_ARGUMENTS
                                                        PsiElement(()('(')
                                                        POSITIONAL_ARGUMENT
                                                          FUNCTION_OR_EXPRESSION
                                                            EXPRESSION
                                                              ASSIGNMENT_EXPRESSION
                                                                THEN_ELSE_EXPRESSION
                                                                  DISJUNCTION_EXPRESSION
                                                                    CONJUNCTION_EXPRESSION
                                                                      LOGICAL_NEGATION_EXPRESSION
                                                                        EQUALITY_EXPRESSION
                                                                          COMPARISON_EXPRESSION
                                                                            EXISTENCE_EMPTINESS_EXPRESSION
                                                                              RANGE_INTERVAL_ENTRY_EXPRESSION
                                                                                ADDITIVE_EXPRESSION
                                                                                  MULTIPLICATIVE_EXPRESSION
                                                                                    DEFAULT_EXPRESSION
                                                                                      NEGATION_COMPLEMENT_EXPRESSION
                                                                                        EXPONENTIATION_EXPRESSION
                                                                                          INCREMENT_DECREMENT_EXPRESSION
                                                                                            POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                                                              PRIMARY
                                                                                                BASE
                                                                                                  STRING_EXPRESSION
                                                                                                    MY_STRING_LITERAL
                                                                                                      PsiElement(STRING_LITERAL)('"hello"')
                                                        PsiElement())(')')
                PsiElement(;)(';')
          DECLARATION_OR_STATEMENT
            COMPILER_ANNOTATIONS
              COMPILER_ANNOTATION
                PsiElement(@)('@')
                ANNOTATION_NAME
                  PsiElement(LIDENTIFIER)('error')
            STATEMENT
              EXPRESSION_OR_SPECIFICATION_STATEMENT
                EXPRESSION
                  ASSIGNMENT_EXPRESSION
                    THEN_ELSE_EXPRESSION
                      DISJUNCTION_EXPRESSION
                        CONJUNCTION_EXPRESSION
                          LOGICAL_NEGATION_EXPRESSION
                            EQUALITY_EXPRESSION
                              COMPARISON_EXPRESSION
                                EXISTENCE_EMPTINESS_EXPRESSION
                                  RANGE_INTERVAL_ENTRY_EXPRESSION
                                    ADDITIVE_EXPRESSION
                                      MULTIPLICATIVE_EXPRESSION
                                        DEFAULT_EXPRESSION
                                          NEGATION_COMPLEMENT_EXPRESSION
                                            EXPONENTIATION_EXPRESSION
                                              INCREMENT_DECREMENT_EXPRESSION
                                                POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                  PRIMARY
                                                    BASE
                                                      BASE_REFERENCE
                                                        MEMBER_REFERENCE
                                                          MEMBER_NAME
                                                            PsiElement(LIDENTIFIER)('enumConstraint')
                                                    ARGUMENTS
                                                      POSITIONAL_ARGUMENTS
                                                        PsiElement(()('(')
                                                        POSITIONAL_ARGUMENT
                                                          FUNCTION_OR_EXPRESSION
                                                            EXPRESSION
                                                              ASSIGNMENT_EXPRESSION
                                                                THEN_ELSE_EXPRESSION
                                                                  DISJUNCTION_EXPRESSION
                                                                    CONJUNCTION_EXPRESSION
                                                                      LOGICAL_NEGATION_EXPRESSION
                                                                        EQUALITY_EXPRESSION
                                                                          COMPARISON_EXPRESSION
                                                                            EXISTENCE_EMPTINESS_EXPRESSION
                                                                              RANGE_INTERVAL_ENTRY_EXPRESSION
                                                                                ADDITIVE_EXPRESSION
                                                                                  MULTIPLICATIVE_EXPRESSION
                                                                                    DEFAULT_EXPRESSION
                                                                                      NEGATION_COMPLEMENT_EXPRESSION
                                                                                        EXPONENTIATION_EXPRESSION
                                                                                          INCREMENT_DECREMENT_EXPRESSION
                                                                                            POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                                                              PRIMARY
                                                                                                BASE
                                                                                                  NONSTRING_LITERAL
                                                                                                    PsiElement(FLOAT_LITERAL)('1.0')
                                                        PsiElement())(')')
                PsiElement(;)(';')
          DECLARATION_OR_STATEMENT
            COMPILER_ANNOTATIONS
              <empty list>
            DECLARATION
              ANNOTATIONS
                <empty list>
              TYPED_METHOD_OR_ATTRIBUTE_DECLARATION
                TYPE
                  UNION_TYPE
                    INTERSECTION_TYPE
                      ENTRY_TYPE
                        ABBREVIATED_TYPE
                          QUALIFIED_TYPE
                            TYPE_NAME_WITH_ARGUMENTS
                              TYPE_NAME
                                PsiElement(UIDENTIFIER)('EnumConstraint')
                              TYPE_ARGUMENTS
                                PsiElement(<)('<')
                                TYPE_ARGUMENT
                                  TYPE
                                    UNION_TYPE
                                      INTERSECTION_TYPE
                                        ENTRY_TYPE
                                          ABBREVIATED_TYPE
                                            QUALIFIED_TYPE
                                              TYPE_NAME_WITH_ARGUMENTS
                                                TYPE_NAME
                                                  PsiElement(UIDENTIFIER)('Integer')
                                PsiElement(>)('>')
                MEMBER_NAME_DECLARATION
                  MEMBER_NAME
                    PsiElement(LIDENTIFIER)('emp')
                SPECIFIER
                  PsiElement(=)('=')
                  FUNCTION_OR_EXPRESSION
                    EXPRESSION
                      ASSIGNMENT_EXPRESSION
                        THEN_ELSE_EXPRESSION
                          DISJUNCTION_EXPRESSION
                            CONJUNCTION_EXPRESSION
                              LOGICAL_NEGATION_EXPRESSION
                                EQUALITY_EXPRESSION
                                  COMPARISON_EXPRESSION
                                    EXISTENCE_EMPTINESS_EXPRESSION
                                      RANGE_INTERVAL_ENTRY_EXPRESSION
                                        ADDITIVE_EXPRESSION
                                          MULTIPLICATIVE_EXPRESSION
                                            DEFAULT_EXPRESSION
                                              NEGATION_COMPLEMENT_EXPRESSION
                                                EXPONENTIATION_EXPRESSION
                                                  INCREMENT_DECREMENT_EXPRESSION
                                                    POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                      PRIMARY
                                                        BASE
                                                          BASE_REFERENCE
                                                            TYPE_REFERENCE
                                                              TYPE_NAME
                                                                PsiElement(UIDENTIFIER)('EnumConstraint')
                                                              TYPE_ARGUMENTS
                                                                PsiElement(<)('<')
                                                                TYPE_ARGUMENT
                                                                  TYPE
                                                                    UNION_TYPE
                                                                      INTERSECTION_TYPE
                                                                        ENTRY_TYPE
                                                                          ABBREVIATED_TYPE
                                                                            QUALIFIED_TYPE
                                                                              TYPE_NAME_WITH_ARGUMENTS
                                                                                TYPE_NAME
                                                                                  PsiElement(UIDENTIFIER)('Integer')
                                                                PsiElement(>)('>')
                                                        ARGUMENTS
                                                          POSITIONAL_ARGUMENTS
                                                            PsiElement(()('(')
                                                            PsiElement())(')')
                PsiElement(;)(';')
          DECLARATION_OR_STATEMENT
            COMPILER_ANNOTATIONS
              <empty list>
            DECLARATION
              ANNOTATIONS
                <empty list>
              TYPED_METHOD_OR_ATTRIBUTE_DECLARATION
                TYPE
                  UNION_TYPE
                    INTERSECTION_TYPE
                      ENTRY_TYPE
                        ABBREVIATED_TYPE
                          QUALIFIED_TYPE
                            TYPE_NAME_WITH_ARGUMENTS
                              TYPE_NAME
                                PsiElement(UIDENTIFIER)('EnumConstraint')
                              TYPE_ARGUMENTS
                                PsiElement(<)('<')
                                TYPE_ARGUMENT
                                  TYPE
                                    UNION_TYPE
                                      INTERSECTION_TYPE
                                        ENTRY_TYPE
                                          ABBREVIATED_TYPE
                                            QUALIFIED_TYPE
                                              TYPE_NAME_WITH_ARGUMENTS
                                                TYPE_NAME
                                                  PsiElement(UIDENTIFIER)('Float')
                                PsiElement(>)('>')
                MEMBER_NAME_DECLARATION
                  MEMBER_NAME
                    PsiElement(LIDENTIFIER)('foo')
                SPECIFIER
                  PsiElement(=)('=')
                  FUNCTION_OR_EXPRESSION
                    EXPRESSION
                      ASSIGNMENT_EXPRESSION
                        THEN_ELSE_EXPRESSION
                          DISJUNCTION_EXPRESSION
                            CONJUNCTION_EXPRESSION
                              LOGICAL_NEGATION_EXPRESSION
                                EQUALITY_EXPRESSION
                                  COMPARISON_EXPRESSION
                                    EXISTENCE_EMPTINESS_EXPRESSION
                                      RANGE_INTERVAL_ENTRY_EXPRESSION
                                        ADDITIVE_EXPRESSION
                                          MULTIPLICATIVE_EXPRESSION
                                            DEFAULT_EXPRESSION
                                              NEGATION_COMPLEMENT_EXPRESSION
                                                EXPONENTIATION_EXPRESSION
                                                  INCREMENT_DECREMENT_EXPRESSION
                                                    POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                      PRIMARY
                                                        BASE
                                                          BASE_REFERENCE
                                                            TYPE_REFERENCE
                                                              TYPE_NAME
                                                                PsiElement(UIDENTIFIER)('EnumConstraint')
                                                        ARGUMENTS
                                                          POSITIONAL_ARGUMENTS
                                                            PsiElement(()('(')
                                                            POSITIONAL_ARGUMENT
                                                              FUNCTION_OR_EXPRESSION
                                                                EXPRESSION
                                                                  ASSIGNMENT_EXPRESSION
                                                                    THEN_ELSE_EXPRESSION
                                                                      DISJUNCTION_EXPRESSION
                                                                        CONJUNCTION_EXPRESSION
                                                                          LOGICAL_NEGATION_EXPRESSION
                                                                            EQUALITY_EXPRESSION
                                                                              COMPARISON_EXPRESSION
                                                                                EXISTENCE_EMPTINESS_EXPRESSION
                                                                                  RANGE_INTERVAL_ENTRY_EXPRESSION
                                                                                    ADDITIVE_EXPRESSION
                                                                                      MULTIPLICATIVE_EXPRESSION
                                                                                        DEFAULT_EXPRESSION
                                                                                          NEGATION_COMPLEMENT_EXPRESSION
                                                                                            EXPONENTIATION_EXPRESSION
                                                                                              INCREMENT_DECREMENT_EXPRESSION
                                                                                                POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                                                                  PRIMARY
                                                                                                    BASE
                                                                                                      NONSTRING_LITERAL
                                                                                                        PsiElement(FLOAT_LITERAL)('1.0')
                                                            PsiElement(,)(',')
                                                            POSITIONAL_ARGUMENT
                                                              FUNCTION_OR_EXPRESSION
                                                                EXPRESSION
                                                                  ASSIGNMENT_EXPRESSION
                                                                    THEN_ELSE_EXPRESSION
                                                                      DISJUNCTION_EXPRESSION
                                                                        CONJUNCTION_EXPRESSION
                                                                          LOGICAL_NEGATION_EXPRESSION
                                                                            EQUALITY_EXPRESSION
                                                                              COMPARISON_EXPRESSION
                                                                                EXISTENCE_EMPTINESS_EXPRESSION
                                                                                  RANGE_INTERVAL_ENTRY_EXPRESSION
                                                                                    ADDITIVE_EXPRESSION
                                                                                      MULTIPLICATIVE_EXPRESSION
                                                                                        DEFAULT_EXPRESSION
                                                                                          NEGATION_COMPLEMENT_EXPRESSION
                                                                                            EXPONENTIATION_EXPRESSION
                                                                                              INCREMENT_DECREMENT_EXPRESSION
                                                                                                POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                                                                  PRIMARY
                                                                                                    BASE
                                                                                                      NONSTRING_LITERAL
                                                                                                        PsiElement(FLOAT_LITERAL)('2.0')
                                                            PsiElement())(')')
                PsiElement(;)(';')
          DECLARATION_OR_STATEMENT
            COMPILER_ANNOTATIONS
              COMPILER_ANNOTATION
                PsiElement(@)('@')
                ANNOTATION_NAME
                  PsiElement(LIDENTIFIER)('error')
            STATEMENT
              EXPRESSION_OR_SPECIFICATION_STATEMENT
                EXPRESSION
                  ASSIGNMENT_EXPRESSION
                    THEN_ELSE_EXPRESSION
                      DISJUNCTION_EXPRESSION
                        CONJUNCTION_EXPRESSION
                          LOGICAL_NEGATION_EXPRESSION
                            EQUALITY_EXPRESSION
                              COMPARISON_EXPRESSION
                                EXISTENCE_EMPTINESS_EXPRESSION
                                  RANGE_INTERVAL_ENTRY_EXPRESSION
                                    ADDITIVE_EXPRESSION
                                      MULTIPLICATIVE_EXPRESSION
                                        DEFAULT_EXPRESSION
                                          NEGATION_COMPLEMENT_EXPRESSION
                                            EXPONENTIATION_EXPRESSION
                                              INCREMENT_DECREMENT_EXPRESSION
                                                POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                  PRIMARY
                                                    BASE
                                                      BASE_REFERENCE
                                                        TYPE_REFERENCE
                                                          TYPE_NAME
                                                            PsiElement(UIDENTIFIER)('EnumConstraint')
                                                    ARGUMENTS
                                                      POSITIONAL_ARGUMENTS
                                                        PsiElement(()('(')
                                                        POSITIONAL_ARGUMENT
                                                          FUNCTION_OR_EXPRESSION
                                                            EXPRESSION
                                                              ASSIGNMENT_EXPRESSION
                                                                THEN_ELSE_EXPRESSION
                                                                  DISJUNCTION_EXPRESSION
                                                                    CONJUNCTION_EXPRESSION
                                                                      LOGICAL_NEGATION_EXPRESSION
                                                                        EQUALITY_EXPRESSION
                                                                          COMPARISON_EXPRESSION
                                                                            EXISTENCE_EMPTINESS_EXPRESSION
                                                                              RANGE_INTERVAL_ENTRY_EXPRESSION
                                                                                ADDITIVE_EXPRESSION
                                                                                  MULTIPLICATIVE_EXPRESSION
                                                                                    DEFAULT_EXPRESSION
                                                                                      NEGATION_COMPLEMENT_EXPRESSION
                                                                                        EXPONENTIATION_EXPRESSION
                                                                                          INCREMENT_DECREMENT_EXPRESSION
                                                                                            POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                                                              PRIMARY
                                                                                                BASE
                                                                                                  STRING_EXPRESSION
                                                                                                    MY_STRING_LITERAL
                                                                                                      PsiElement(STRING_LITERAL)('"hello"')
                                                        PsiElement(,)(',')
                                                        POSITIONAL_ARGUMENT
                                                          FUNCTION_OR_EXPRESSION
                                                            EXPRESSION
                                                              ASSIGNMENT_EXPRESSION
                                                                THEN_ELSE_EXPRESSION
                                                                  DISJUNCTION_EXPRESSION
                                                                    CONJUNCTION_EXPRESSION
                                                                      LOGICAL_NEGATION_EXPRESSION
                                                                        EQUALITY_EXPRESSION
                                                                          COMPARISON_EXPRESSION
                                                                            EXISTENCE_EMPTINESS_EXPRESSION
                                                                              RANGE_INTERVAL_ENTRY_EXPRESSION
                                                                                ADDITIVE_EXPRESSION
                                                                                  MULTIPLICATIVE_EXPRESSION
                                                                                    DEFAULT_EXPRESSION
                                                                                      NEGATION_COMPLEMENT_EXPRESSION
                                                                                        EXPONENTIATION_EXPRESSION
                                                                                          INCREMENT_DECREMENT_EXPRESSION
                                                                                            POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                                                              PRIMARY
                                                                                                BASE
                                                                                                  STRING_EXPRESSION
                                                                                                    MY_STRING_LITERAL
                                                                                                      PsiElement(STRING_LITERAL)('"world"')
                                                        PsiElement())(')')
                PsiElement(;)(';')
          PsiElement(})('}')
    COMPILER_ANNOTATIONS
      <empty list>
    DECLARATION
      ANNOTATIONS
        <empty list>
      INTERFACE_DECLARATION
        PsiElement(interface)('interface')
        TYPE_NAME_DECLARATION
          TYPE_NAME
            PsiElement(UIDENTIFIER)('I')
        INTERFACE_BODY
          PsiElement({)('{')
          PsiElement(})('}')
    COMPILER_ANNOTATIONS
      <empty list>
    DECLARATION
      ANNOTATIONS
        <empty list>
      INTERFACE_DECLARATION
        PsiElement(interface)('interface')
        TYPE_NAME_DECLARATION
          TYPE_NAME
            PsiElement(UIDENTIFIER)('J')
        INTERFACE_BODY
          PsiElement({)('{')
          PsiElement(})('}')
    COMPILER_ANNOTATIONS
      <empty list>
    DECLARATION
      ANNOTATIONS
        <empty list>
      VOID_OR_INFERRED_METHOD_DECLARATION
        PsiElement(void)('void')
        MEMBER_NAME_DECLARATION
          MEMBER_NAME
            PsiElement(LIDENTIFIER)('ij')
        TYPE_PARAMETERS
          PsiElement(<)('<')
          TYPE_PARAMETER
            TYPE_NAME_DECLARATION
              TYPE_NAME
                PsiElement(UIDENTIFIER)('T')
          PsiElement(>)('>')
        PARAMETERS
          PsiElement(()('(')
          PARAMETER_DECLARATION
            COMPILER_ANNOTATIONS
              <empty list>
            ANNOTATIONS
              <empty list>
            PARAMETER
              PARAMETER_TYPE
                TYPE
                  UNION_TYPE
                    INTERSECTION_TYPE
                      ENTRY_TYPE
                        ABBREVIATED_TYPE
                          QUALIFIED_TYPE
                            TYPE_NAME_WITH_ARGUMENTS
                              TYPE_NAME
                                PsiElement(UIDENTIFIER)('T')
              MEMBER_NAME
                PsiElement(LIDENTIFIER)('k')
          PsiElement())(')')
        TYPE_CONSTRAINTS
          TYPE_CONSTRAINT
            COMPILER_ANNOTATIONS
              <empty list>
            PsiElement(given)('given')
            TYPE_NAME_DECLARATION
              TYPE_NAME
                PsiElement(UIDENTIFIER)('T')
            CASE_TYPES
              PsiElement(of)('of')
              CASE_TYPE
                QUALIFIED_TYPE
                  TYPE_NAME_WITH_ARGUMENTS
                    TYPE_NAME
                      PsiElement(UIDENTIFIER)('I')
              PsiElement(|)('|')
              CASE_TYPE
                QUALIFIED_TYPE
                  TYPE_NAME_WITH_ARGUMENTS
                    TYPE_NAME
                      PsiElement(UIDENTIFIER)('J')
        BLOCK
          PsiElement({)('{')
          DECLARATION_OR_STATEMENT
            COMPILER_ANNOTATIONS
              COMPILER_ANNOTATION
                PsiElement(@)('@')
                ANNOTATION_NAME
                  PsiElement(LIDENTIFIER)('error')
            STATEMENT
              CONTROL_STATEMENT
                SWITCH_CASE_ELSE
                  SWITCH_HEADER
                    PsiElement(switch)('switch')
                    PsiElement(()('(')
                    EXPRESSION
                      ASSIGNMENT_EXPRESSION
                        THEN_ELSE_EXPRESSION
                          DISJUNCTION_EXPRESSION
                            CONJUNCTION_EXPRESSION
                              LOGICAL_NEGATION_EXPRESSION
                                EQUALITY_EXPRESSION
                                  COMPARISON_EXPRESSION
                                    EXISTENCE_EMPTINESS_EXPRESSION
                                      RANGE_INTERVAL_ENTRY_EXPRESSION
                                        ADDITIVE_EXPRESSION
                                          MULTIPLICATIVE_EXPRESSION
                                            DEFAULT_EXPRESSION
                                              NEGATION_COMPLEMENT_EXPRESSION
                                                EXPONENTIATION_EXPRESSION
                                                  INCREMENT_DECREMENT_EXPRESSION
                                                    POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                      PRIMARY
                                                        BASE
                                                          BASE_REFERENCE
                                                            MEMBER_REFERENCE
                                                              MEMBER_NAME
                                                                PsiElement(LIDENTIFIER)('k')
                    PsiElement())(')')
                  CASES
                    CASE_BLOCK
                      PsiElement(case)('case')
                      PsiElement(()('(')
                      CASE_ITEM
                        IS_CASE_CONDITION
                          PsiElement(is)('is')
                          TYPE
                            UNION_TYPE
                              INTERSECTION_TYPE
                                ENTRY_TYPE
                                  ABBREVIATED_TYPE
                                    QUALIFIED_TYPE
                                      TYPE_NAME_WITH_ARGUMENTS
                                        TYPE_NAME
                                          PsiElement(UIDENTIFIER)('I')
                      PsiElement())(')')
                      BLOCK
                        PsiElement({)('{')
                        PsiElement(})('}')
                    CASE_BLOCK
                      PsiElement(case)('case')
                      PsiElement(()('(')
                      CASE_ITEM
                        IS_CASE_CONDITION
                          PsiElement(is)('is')
                          TYPE
                            UNION_TYPE
                              INTERSECTION_TYPE
                                ENTRY_TYPE
                                  ABBREVIATED_TYPE
                                    QUALIFIED_TYPE
                                      TYPE_NAME_WITH_ARGUMENTS
                                        TYPE_NAME
                                          PsiElement(UIDENTIFIER)('J')
                      PsiElement())(')')
                      BLOCK
                        PsiElement({)('{')
                        PsiElement(})('}')
          DECLARATION_OR_STATEMENT
            COMPILER_ANNOTATIONS
              COMPILER_ANNOTATION
                PsiElement(@)('@')
                ANNOTATION_NAME
                  PsiElement(LIDENTIFIER)('error')
            STATEMENT
              CONTROL_STATEMENT
                SWITCH_CASE_ELSE
                  SWITCH_HEADER
                    PsiElement(switch)('switch')
                    PsiElement(()('(')
                    EXPRESSION
                      ASSIGNMENT_EXPRESSION
                        THEN_ELSE_EXPRESSION
                          DISJUNCTION_EXPRESSION
                            CONJUNCTION_EXPRESSION
                              LOGICAL_NEGATION_EXPRESSION
                                EQUALITY_EXPRESSION
                                  COMPARISON_EXPRESSION
                                    EXISTENCE_EMPTINESS_EXPRESSION
                                      RANGE_INTERVAL_ENTRY_EXPRESSION
                                        ADDITIVE_EXPRESSION
                                          MULTIPLICATIVE_EXPRESSION
                                            DEFAULT_EXPRESSION
                                              NEGATION_COMPLEMENT_EXPRESSION
                                                EXPONENTIATION_EXPRESSION
                                                  INCREMENT_DECREMENT_EXPRESSION
                                                    POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                      PRIMARY
                                                        BASE
                                                          BASE_REFERENCE
                                                            MEMBER_REFERENCE
                                                              MEMBER_NAME
                                                                PsiElement(LIDENTIFIER)('k')
                    PsiElement())(')')
                  CASES
                    CASE_BLOCK
                      PsiElement(case)('case')
                      PsiElement(()('(')
                      CASE_ITEM
                        IS_CASE_CONDITION
                          PsiElement(is)('is')
                          TYPE
                            UNION_TYPE
                              INTERSECTION_TYPE
                                ENTRY_TYPE
                                  ABBREVIATED_TYPE
                                    QUALIFIED_TYPE
                                      TYPE_NAME_WITH_ARGUMENTS
                                        TYPE_NAME
                                          PsiElement(UIDENTIFIER)('I')
                      PsiElement())(')')
                      BLOCK
                        PsiElement({)('{')
                        PsiElement(})('}')
          DECLARATION_OR_STATEMENT
            COMPILER_ANNOTATIONS
              <empty list>
            STATEMENT
              CONTROL_STATEMENT
                SWITCH_CASE_ELSE
                  SWITCH_HEADER
                    PsiElement(switch)('switch')
                    PsiElement(()('(')
                    EXPRESSION
                      ASSIGNMENT_EXPRESSION
                        THEN_ELSE_EXPRESSION
                          DISJUNCTION_EXPRESSION
                            CONJUNCTION_EXPRESSION
                              LOGICAL_NEGATION_EXPRESSION
                                EQUALITY_EXPRESSION
                                  COMPARISON_EXPRESSION
                                    EXISTENCE_EMPTINESS_EXPRESSION
                                      RANGE_INTERVAL_ENTRY_EXPRESSION
                                        ADDITIVE_EXPRESSION
                                          MULTIPLICATIVE_EXPRESSION
                                            DEFAULT_EXPRESSION
                                              NEGATION_COMPLEMENT_EXPRESSION
                                                EXPONENTIATION_EXPRESSION
                                                  INCREMENT_DECREMENT_EXPRESSION
                                                    POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                      PRIMARY
                                                        BASE
                                                          BASE_REFERENCE
                                                            MEMBER_REFERENCE
                                                              MEMBER_NAME
                                                                PsiElement(LIDENTIFIER)('k')
                    PsiElement())(')')
                  CASES
                    CASE_BLOCK
                      PsiElement(case)('case')
                      PsiElement(()('(')
                      CASE_ITEM
                        IS_CASE_CONDITION
                          PsiElement(is)('is')
                          TYPE
                            UNION_TYPE
                              INTERSECTION_TYPE
                                ENTRY_TYPE
                                  ABBREVIATED_TYPE
                                    QUALIFIED_TYPE
                                      TYPE_NAME_WITH_ARGUMENTS
                                        TYPE_NAME
                                          PsiElement(UIDENTIFIER)('I')
                      PsiElement())(')')
                      BLOCK
                        PsiElement({)('{')
                        PsiElement(})('}')
                    DEFAULT_CASE_BLOCK
                      PsiElement(else)('else')
                      BLOCK
                        PsiElement({)('{')
                        PsiElement(})('}')
          PsiElement(})('}')
    COMPILER_ANNOTATIONS
      <empty list>
    DECLARATION
      ANNOTATIONS
        <empty list>
      VOID_OR_INFERRED_METHOD_DECLARATION
        PsiElement(void)('void')
        MEMBER_NAME_DECLARATION
          MEMBER_NAME
            PsiElement(LIDENTIFIER)('testij')
        PARAMETERS
          PsiElement(()('(')
          PsiElement())(')')
        BLOCK
          PsiElement({)('{')
          DECLARATION_OR_STATEMENT
            COMPILER_ANNOTATIONS
              <empty list>
            DECLARATION
              ANNOTATIONS
                <empty list>
              OBJECT_DECLARATION
                PsiElement(object)('object')
                MEMBER_NAME_DECLARATION
                  MEMBER_NAME
                    PsiElement(LIDENTIFIER)('i')
                SATISFIED_TYPES
                  PsiElement(satisfies)('satisfies')
                  QUALIFIED_TYPE
                    TYPE_NAME_WITH_ARGUMENTS
                      TYPE_NAME
                        PsiElement(UIDENTIFIER)('I')
                CLASS_BODY
                  PsiElement({)('{')
                  PsiElement(})('}')
          DECLARATION_OR_STATEMENT
            COMPILER_ANNOTATIONS
              <empty list>
            DECLARATION
              ANNOTATIONS
                <empty list>
              OBJECT_DECLARATION
                PsiElement(object)('object')
                MEMBER_NAME_DECLARATION
                  MEMBER_NAME
                    PsiElement(LIDENTIFIER)('j')
                SATISFIED_TYPES
                  PsiElement(satisfies)('satisfies')
                  QUALIFIED_TYPE
                    TYPE_NAME_WITH_ARGUMENTS
                      TYPE_NAME
                        PsiElement(UIDENTIFIER)('J')
                CLASS_BODY
                  PsiElement({)('{')
                  PsiElement(})('}')
          DECLARATION_OR_STATEMENT
            COMPILER_ANNOTATIONS
              <empty list>
            DECLARATION
              ANNOTATIONS
                <empty list>
              OBJECT_DECLARATION
                PsiElement(object)('object')
                MEMBER_NAME_DECLARATION
                  MEMBER_NAME
                    PsiElement(LIDENTIFIER)('k')
                SATISFIED_TYPES
                  PsiElement(satisfies)('satisfies')
                  QUALIFIED_TYPE
                    TYPE_NAME_WITH_ARGUMENTS
                      TYPE_NAME
                        PsiElement(UIDENTIFIER)('I')
                  PsiElement(&)('&')
                  QUALIFIED_TYPE
                    TYPE_NAME_WITH_ARGUMENTS
                      TYPE_NAME
                        PsiElement(UIDENTIFIER)('J')
                CLASS_BODY
                  PsiElement({)('{')
                  PsiElement(})('}')
          DECLARATION_OR_STATEMENT
            COMPILER_ANNOTATIONS
              <empty list>
            STATEMENT
              EXPRESSION_OR_SPECIFICATION_STATEMENT
                EXPRESSION
                  ASSIGNMENT_EXPRESSION
                    THEN_ELSE_EXPRESSION
                      DISJUNCTION_EXPRESSION
                        CONJUNCTION_EXPRESSION
                          LOGICAL_NEGATION_EXPRESSION
                            EQUALITY_EXPRESSION
                              COMPARISON_EXPRESSION
                                EXISTENCE_EMPTINESS_EXPRESSION
                                  RANGE_INTERVAL_ENTRY_EXPRESSION
                                    ADDITIVE_EXPRESSION
                                      MULTIPLICATIVE_EXPRESSION
                                        DEFAULT_EXPRESSION
                                          NEGATION_COMPLEMENT_EXPRESSION
                                            EXPONENTIATION_EXPRESSION
                                              INCREMENT_DECREMENT_EXPRESSION
                                                POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                  PRIMARY
                                                    BASE
                                                      BASE_REFERENCE
                                                        MEMBER_REFERENCE
                                                          MEMBER_NAME
                                                            PsiElement(LIDENTIFIER)('ij')
                                                    ARGUMENTS
                                                      POSITIONAL_ARGUMENTS
                                                        PsiElement(()('(')
                                                        POSITIONAL_ARGUMENT
                                                          FUNCTION_OR_EXPRESSION
                                                            EXPRESSION
                                                              ASSIGNMENT_EXPRESSION
                                                                THEN_ELSE_EXPRESSION
                                                                  DISJUNCTION_EXPRESSION
                                                                    CONJUNCTION_EXPRESSION
                                                                      LOGICAL_NEGATION_EXPRESSION
                                                                        EQUALITY_EXPRESSION
                                                                          COMPARISON_EXPRESSION
                                                                            EXISTENCE_EMPTINESS_EXPRESSION
                                                                              RANGE_INTERVAL_ENTRY_EXPRESSION
                                                                                ADDITIVE_EXPRESSION
                                                                                  MULTIPLICATIVE_EXPRESSION
                                                                                    DEFAULT_EXPRESSION
                                                                                      NEGATION_COMPLEMENT_EXPRESSION
                                                                                        EXPONENTIATION_EXPRESSION
                                                                                          INCREMENT_DECREMENT_EXPRESSION
                                                                                            POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                                                              PRIMARY
                                                                                                BASE
                                                                                                  BASE_REFERENCE
                                                                                                    MEMBER_REFERENCE
                                                                                                      MEMBER_NAME
                                                                                                        PsiElement(LIDENTIFIER)('i')
                                                        PsiElement())(')')
                PsiElement(;)(';')
          DECLARATION_OR_STATEMENT
            COMPILER_ANNOTATIONS
              <empty list>
            STATEMENT
              EXPRESSION_OR_SPECIFICATION_STATEMENT
                EXPRESSION
                  ASSIGNMENT_EXPRESSION
                    THEN_ELSE_EXPRESSION
                      DISJUNCTION_EXPRESSION
                        CONJUNCTION_EXPRESSION
                          LOGICAL_NEGATION_EXPRESSION
                            EQUALITY_EXPRESSION
                              COMPARISON_EXPRESSION
                                EXISTENCE_EMPTINESS_EXPRESSION
                                  RANGE_INTERVAL_ENTRY_EXPRESSION
                                    ADDITIVE_EXPRESSION
                                      MULTIPLICATIVE_EXPRESSION
                                        DEFAULT_EXPRESSION
                                          NEGATION_COMPLEMENT_EXPRESSION
                                            EXPONENTIATION_EXPRESSION
                                              INCREMENT_DECREMENT_EXPRESSION
                                                POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                  PRIMARY
                                                    BASE
                                                      BASE_REFERENCE
                                                        MEMBER_REFERENCE
                                                          MEMBER_NAME
                                                            PsiElement(LIDENTIFIER)('ij')
                                                    ARGUMENTS
                                                      POSITIONAL_ARGUMENTS
                                                        PsiElement(()('(')
                                                        POSITIONAL_ARGUMENT
                                                          FUNCTION_OR_EXPRESSION
                                                            EXPRESSION
                                                              ASSIGNMENT_EXPRESSION
                                                                THEN_ELSE_EXPRESSION
                                                                  DISJUNCTION_EXPRESSION
                                                                    CONJUNCTION_EXPRESSION
                                                                      LOGICAL_NEGATION_EXPRESSION
                                                                        EQUALITY_EXPRESSION
                                                                          COMPARISON_EXPRESSION
                                                                            EXISTENCE_EMPTINESS_EXPRESSION
                                                                              RANGE_INTERVAL_ENTRY_EXPRESSION
                                                                                ADDITIVE_EXPRESSION
                                                                                  MULTIPLICATIVE_EXPRESSION
                                                                                    DEFAULT_EXPRESSION
                                                                                      NEGATION_COMPLEMENT_EXPRESSION
                                                                                        EXPONENTIATION_EXPRESSION
                                                                                          INCREMENT_DECREMENT_EXPRESSION
                                                                                            POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                                                              PRIMARY
                                                                                                BASE
                                                                                                  BASE_REFERENCE
                                                                                                    MEMBER_REFERENCE
                                                                                                      MEMBER_NAME
                                                                                                        PsiElement(LIDENTIFIER)('j')
                                                        PsiElement())(')')
                PsiElement(;)(';')
          DECLARATION_OR_STATEMENT
            COMPILER_ANNOTATIONS
              <empty list>
            STATEMENT
              EXPRESSION_OR_SPECIFICATION_STATEMENT
                EXPRESSION
                  ASSIGNMENT_EXPRESSION
                    THEN_ELSE_EXPRESSION
                      DISJUNCTION_EXPRESSION
                        CONJUNCTION_EXPRESSION
                          LOGICAL_NEGATION_EXPRESSION
                            EQUALITY_EXPRESSION
                              COMPARISON_EXPRESSION
                                EXISTENCE_EMPTINESS_EXPRESSION
                                  RANGE_INTERVAL_ENTRY_EXPRESSION
                                    ADDITIVE_EXPRESSION
                                      MULTIPLICATIVE_EXPRESSION
                                        DEFAULT_EXPRESSION
                                          NEGATION_COMPLEMENT_EXPRESSION
                                            EXPONENTIATION_EXPRESSION
                                              INCREMENT_DECREMENT_EXPRESSION
                                                POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                  PRIMARY
                                                    BASE
                                                      BASE_REFERENCE
                                                        MEMBER_REFERENCE
                                                          MEMBER_NAME
                                                            PsiElement(LIDENTIFIER)('ij')
                                                    ARGUMENTS
                                                      POSITIONAL_ARGUMENTS
                                                        PsiElement(()('(')
                                                        POSITIONAL_ARGUMENT
                                                          FUNCTION_OR_EXPRESSION
                                                            EXPRESSION
                                                              ASSIGNMENT_EXPRESSION
                                                                THEN_ELSE_EXPRESSION
                                                                  DISJUNCTION_EXPRESSION
                                                                    CONJUNCTION_EXPRESSION
                                                                      LOGICAL_NEGATION_EXPRESSION
                                                                        EQUALITY_EXPRESSION
                                                                          COMPARISON_EXPRESSION
                                                                            EXISTENCE_EMPTINESS_EXPRESSION
                                                                              RANGE_INTERVAL_ENTRY_EXPRESSION
                                                                                ADDITIVE_EXPRESSION
                                                                                  MULTIPLICATIVE_EXPRESSION
                                                                                    DEFAULT_EXPRESSION
                                                                                      NEGATION_COMPLEMENT_EXPRESSION
                                                                                        EXPONENTIATION_EXPRESSION
                                                                                          INCREMENT_DECREMENT_EXPRESSION
                                                                                            POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                                                              PRIMARY
                                                                                                BASE
                                                                                                  BASE_REFERENCE
                                                                                                    MEMBER_REFERENCE
                                                                                                      MEMBER_NAME
                                                                                                        PsiElement(LIDENTIFIER)('k')
                                                        PsiElement())(')')
                PsiElement(;)(';')
          DECLARATION_OR_STATEMENT
            COMPILER_ANNOTATIONS
              COMPILER_ANNOTATION
                PsiElement(@)('@')
                ANNOTATION_NAME
                  PsiElement(LIDENTIFIER)('error')
            STATEMENT
              EXPRESSION_OR_SPECIFICATION_STATEMENT
                EXPRESSION
                  ASSIGNMENT_EXPRESSION
                    THEN_ELSE_EXPRESSION
                      DISJUNCTION_EXPRESSION
                        CONJUNCTION_EXPRESSION
                          LOGICAL_NEGATION_EXPRESSION
                            EQUALITY_EXPRESSION
                              COMPARISON_EXPRESSION
                                EXISTENCE_EMPTINESS_EXPRESSION
                                  RANGE_INTERVAL_ENTRY_EXPRESSION
                                    ADDITIVE_EXPRESSION
                                      MULTIPLICATIVE_EXPRESSION
                                        DEFAULT_EXPRESSION
                                          NEGATION_COMPLEMENT_EXPRESSION
                                            EXPONENTIATION_EXPRESSION
                                              INCREMENT_DECREMENT_EXPRESSION
                                                POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                  PRIMARY
                                                    BASE
                                                      BASE_REFERENCE
                                                        MEMBER_REFERENCE
                                                          MEMBER_NAME
                                                            PsiElement(LIDENTIFIER)('ij')
                                                    ARGUMENTS
                                                      POSITIONAL_ARGUMENTS
                                                        PsiElement(()('(')
                                                        POSITIONAL_ARGUMENT
                                                          FUNCTION_OR_EXPRESSION
                                                            EXPRESSION
                                                              ASSIGNMENT_EXPRESSION
                                                                THEN_ELSE_EXPRESSION
                                                                  DISJUNCTION_EXPRESSION
                                                                    CONJUNCTION_EXPRESSION
                                                                      LOGICAL_NEGATION_EXPRESSION
                                                                        EQUALITY_EXPRESSION
                                                                          COMPARISON_EXPRESSION
                                                                            EXISTENCE_EMPTINESS_EXPRESSION
                                                                              RANGE_INTERVAL_ENTRY_EXPRESSION
                                                                                ADDITIVE_EXPRESSION
                                                                                  MULTIPLICATIVE_EXPRESSION
                                                                                    DEFAULT_EXPRESSION
                                                                                      NEGATION_COMPLEMENT_EXPRESSION
                                                                                        EXPONENTIATION_EXPRESSION
                                                                                          INCREMENT_DECREMENT_EXPRESSION
                                                                                            POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                                                              PRIMARY
                                                                                                BASE
                                                                                                  STRING_EXPRESSION
                                                                                                    MY_STRING_LITERAL
                                                                                                      PsiElement(STRING_LITERAL)('"hello"')
                                                        PsiElement())(')')
                PsiElement(;)(';')
          DECLARATION_OR_STATEMENT
            COMPILER_ANNOTATIONS
              COMPILER_ANNOTATION
                PsiElement(@)('@')
                ANNOTATION_NAME
                  PsiElement(LIDENTIFIER)('error')
            STATEMENT
              EXPRESSION_OR_SPECIFICATION_STATEMENT
                EXPRESSION
                  ASSIGNMENT_EXPRESSION
                    THEN_ELSE_EXPRESSION
                      DISJUNCTION_EXPRESSION
                        CONJUNCTION_EXPRESSION
                          LOGICAL_NEGATION_EXPRESSION
                            EQUALITY_EXPRESSION
                              COMPARISON_EXPRESSION
                                EXISTENCE_EMPTINESS_EXPRESSION
                                  RANGE_INTERVAL_ENTRY_EXPRESSION
                                    ADDITIVE_EXPRESSION
                                      MULTIPLICATIVE_EXPRESSION
                                        DEFAULT_EXPRESSION
                                          NEGATION_COMPLEMENT_EXPRESSION
                                            EXPONENTIATION_EXPRESSION
                                              INCREMENT_DECREMENT_EXPRESSION
                                                POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                  PRIMARY
                                                    BASE
                                                      BASE_REFERENCE
                                                        MEMBER_REFERENCE
                                                          MEMBER_NAME
                                                            PsiElement(LIDENTIFIER)('ij')
                                                    ARGUMENTS
                                                      POSITIONAL_ARGUMENTS
                                                        PsiElement(()('(')
                                                        POSITIONAL_ARGUMENT
                                                          FUNCTION_OR_EXPRESSION
                                                            EXPRESSION
                                                              ASSIGNMENT_EXPRESSION
                                                                THEN_ELSE_EXPRESSION
                                                                  DISJUNCTION_EXPRESSION
                                                                    CONJUNCTION_EXPRESSION
                                                                      LOGICAL_NEGATION_EXPRESSION
                                                                        EQUALITY_EXPRESSION
                                                                          COMPARISON_EXPRESSION
                                                                            EXISTENCE_EMPTINESS_EXPRESSION
                                                                              RANGE_INTERVAL_ENTRY_EXPRESSION
                                                                                ADDITIVE_EXPRESSION
                                                                                  MULTIPLICATIVE_EXPRESSION
                                                                                    DEFAULT_EXPRESSION
                                                                                      NEGATION_COMPLEMENT_EXPRESSION
                                                                                        EXPONENTIATION_EXPRESSION
                                                                                          INCREMENT_DECREMENT_EXPRESSION
                                                                                            POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                                                              PRIMARY
                                                                                                BASE
                                                                                                  NONSTRING_LITERAL
                                                                                                    PsiElement(NATURAL_LITERAL)('1')
                                                        PsiElement())(')')
                PsiElement(;)(';')
          PsiElement(})('}')
    COMPILER_ANNOTATIONS
      <empty list>
    DECLARATION
      ANNOTATIONS
        ANNOTATION
          ANNOTATION_NAME
            PsiElement(LIDENTIFIER)('abstract')
          ANNOTATION_ARGUMENTS
            LITERAL_ARGUMENTS
              <empty list>
      CLASS_DECLARATION
        PsiElement(class)('class')
        TYPE_NAME_DECLARATION
          TYPE_NAME
            PsiElement(UIDENTIFIER)('XXX')
        TYPE_PARAMETERS
          PsiElement(<)('<')
          TYPE_PARAMETER
            VARIANCE
              PsiElement(out)('out')
            TYPE_NAME_DECLARATION
              TYPE_NAME
                PsiElement(UIDENTIFIER)('T')
          PsiElement(>)('>')
        PARAMETERS
          PsiElement(()('(')
          PsiElement())(')')
        CASE_TYPES
          PsiElement(of)('of')
          CASE_TYPE
            QUALIFIED_TYPE
              TYPE_NAME_WITH_ARGUMENTS
                TYPE_NAME
                  PsiElement(UIDENTIFIER)('YYY')
                TYPE_ARGUMENTS
                  PsiElement(<)('<')
                  TYPE_ARGUMENT
                    TYPE
                      UNION_TYPE
                        INTERSECTION_TYPE
                          ENTRY_TYPE
                            ABBREVIATED_TYPE
                              QUALIFIED_TYPE
                                TYPE_NAME_WITH_ARGUMENTS
                                  TYPE_NAME
                                    PsiElement(UIDENTIFIER)('T')
                  PsiElement(>)('>')
          PsiElement(|)('|')
          CASE_TYPE
            QUALIFIED_TYPE
              TYPE_NAME_WITH_ARGUMENTS
                TYPE_NAME
                  PsiElement(UIDENTIFIER)('ZZZ')
                TYPE_ARGUMENTS
                  PsiElement(<)('<')
                  TYPE_ARGUMENT
                    TYPE
                      UNION_TYPE
                        INTERSECTION_TYPE
                          ENTRY_TYPE
                            ABBREVIATED_TYPE
                              QUALIFIED_TYPE
                                TYPE_NAME_WITH_ARGUMENTS
                                  TYPE_NAME
                                    PsiElement(UIDENTIFIER)('T')
                  PsiElement(>)('>')
          PsiElement(|)('|')
          CASE_TYPE
            QUALIFIED_TYPE
              TYPE_NAME_WITH_ARGUMENTS
                TYPE_NAME
                  PsiElement(UIDENTIFIER)('WWW')
        CLASS_BODY
          PsiElement({)('{')
          PsiElement(})('}')
    COMPILER_ANNOTATIONS
      <empty list>
    DECLARATION
      ANNOTATIONS
        <empty list>
      CLASS_DECLARATION
        PsiElement(class)('class')
        TYPE_NAME_DECLARATION
          TYPE_NAME
            PsiElement(UIDENTIFIER)('YYY')
        TYPE_PARAMETERS
          PsiElement(<)('<')
          TYPE_PARAMETER
            VARIANCE
              PsiElement(out)('out')
            TYPE_NAME_DECLARATION
              TYPE_NAME
                PsiElement(UIDENTIFIER)('T')
          PsiElement(>)('>')
        PARAMETERS
          PsiElement(()('(')
          PsiElement())(')')
        EXTENDED_TYPE
          PsiElement(extends)('extends')
          QUALIFIED_TYPE
            TYPE_NAME_WITH_ARGUMENTS
              TYPE_NAME
                PsiElement(UIDENTIFIER)('XXX')
              TYPE_ARGUMENTS
                PsiElement(<)('<')
                TYPE_ARGUMENT
                  TYPE
                    UNION_TYPE
                      INTERSECTION_TYPE
                        ENTRY_TYPE
                          ABBREVIATED_TYPE
                            QUALIFIED_TYPE
                              TYPE_NAME_WITH_ARGUMENTS
                                TYPE_NAME
                                  PsiElement(UIDENTIFIER)('T')
                PsiElement(>)('>')
          POSITIONAL_ARGUMENTS
            PsiElement(()('(')
            PsiElement())(')')
        CLASS_BODY
          PsiElement({)('{')
          PsiElement(})('}')
    COMPILER_ANNOTATIONS
      <empty list>
    DECLARATION
      ANNOTATIONS
        <empty list>
      CLASS_DECLARATION
        PsiElement(class)('class')
        TYPE_NAME_DECLARATION
          TYPE_NAME
            PsiElement(UIDENTIFIER)('ZZZ')
        TYPE_PARAMETERS
          PsiElement(<)('<')
          TYPE_PARAMETER
            VARIANCE
              PsiElement(out)('out')
            TYPE_NAME_DECLARATION
              TYPE_NAME
                PsiElement(UIDENTIFIER)('T')
          PsiElement(>)('>')
        PARAMETERS
          PsiElement(()('(')
          PsiElement())(')')
        EXTENDED_TYPE
          PsiElement(extends)('extends')
          QUALIFIED_TYPE
            TYPE_NAME_WITH_ARGUMENTS
              TYPE_NAME
                PsiElement(UIDENTIFIER)('XXX')
              TYPE_ARGUMENTS
                PsiElement(<)('<')
                TYPE_ARGUMENT
                  TYPE
                    UNION_TYPE
                      INTERSECTION_TYPE
                        ENTRY_TYPE
                          ABBREVIATED_TYPE
                            QUALIFIED_TYPE
                              TYPE_NAME_WITH_ARGUMENTS
                                TYPE_NAME
                                  PsiElement(UIDENTIFIER)('T')
                PsiElement(>)('>')
          POSITIONAL_ARGUMENTS
            PsiElement(()('(')
            PsiElement())(')')
        CLASS_BODY
          PsiElement({)('{')
          PsiElement(})('}')
    COMPILER_ANNOTATIONS
      <empty list>
    DECLARATION
      ANNOTATIONS
        <empty list>
      CLASS_DECLARATION
        PsiElement(class)('class')
        TYPE_NAME_DECLARATION
          TYPE_NAME
            PsiElement(UIDENTIFIER)('WWW')
        PARAMETERS
          PsiElement(()('(')
          PsiElement())(')')
        EXTENDED_TYPE
          PsiElement(extends)('extends')
          QUALIFIED_TYPE
            TYPE_NAME_WITH_ARGUMENTS
              TYPE_NAME
                PsiElement(UIDENTIFIER)('XXX')
              TYPE_ARGUMENTS
                PsiElement(<)('<')
                TYPE_ARGUMENT
                  TYPE
                    UNION_TYPE
                      INTERSECTION_TYPE
                        ENTRY_TYPE
                          ABBREVIATED_TYPE
                            QUALIFIED_TYPE
                              TYPE_NAME_WITH_ARGUMENTS
                                TYPE_NAME
                                  PsiElement(UIDENTIFIER)('Bottom')
                PsiElement(>)('>')
          POSITIONAL_ARGUMENTS
            PsiElement(()('(')
            PsiElement())(')')
        CLASS_BODY
          PsiElement({)('{')
          PsiElement(})('}')
    COMPILER_ANNOTATIONS
      <empty list>
    DECLARATION
      ANNOTATIONS
        <empty list>
      OBJECT_DECLARATION
        PsiElement(object)('object')
        MEMBER_NAME_DECLARATION
          MEMBER_NAME
            PsiElement(LIDENTIFIER)('yyy')
        EXTENDED_TYPE
          PsiElement(extends)('extends')
          QUALIFIED_TYPE
            TYPE_NAME_WITH_ARGUMENTS
              TYPE_NAME
                PsiElement(UIDENTIFIER)('YYY')
              TYPE_ARGUMENTS
                PsiElement(<)('<')
                TYPE_ARGUMENT
                  TYPE
                    UNION_TYPE
                      INTERSECTION_TYPE
                        ENTRY_TYPE
                          ABBREVIATED_TYPE
                            QUALIFIED_TYPE
                              TYPE_NAME_WITH_ARGUMENTS
                                TYPE_NAME
                                  PsiElement(UIDENTIFIER)('String')
                PsiElement(>)('>')
          POSITIONAL_ARGUMENTS
            PsiElement(()('(')
            PsiElement())(')')
        CLASS_BODY
          PsiElement({)('{')
          PsiElement(})('}')
    COMPILER_ANNOTATIONS
      <empty list>
    DECLARATION
      ANNOTATIONS
        <empty list>
      VOID_OR_INFERRED_METHOD_DECLARATION
        PsiElement(void)('void')
        MEMBER_NAME_DECLARATION
          MEMBER_NAME
            PsiElement(LIDENTIFIER)('switchit')
        PARAMETERS
          PsiElement(()('(')
          PARAMETER_DECLARATION
            COMPILER_ANNOTATIONS
              <empty list>
            ANNOTATIONS
              <empty list>
            PARAMETER
              PARAMETER_TYPE
                TYPE
                  UNION_TYPE
                    INTERSECTION_TYPE
                      ENTRY_TYPE
                        ABBREVIATED_TYPE
                          QUALIFIED_TYPE
                            TYPE_NAME_WITH_ARGUMENTS
                              TYPE_NAME
                                PsiElement(UIDENTIFIER)('XXX')
                              TYPE_ARGUMENTS
                                PsiElement(<)('<')
                                TYPE_ARGUMENT
                                  TYPE
                                    UNION_TYPE
                                      INTERSECTION_TYPE
                                        ENTRY_TYPE
                                          ABBREVIATED_TYPE
                                            QUALIFIED_TYPE
                                              TYPE_NAME_WITH_ARGUMENTS
                                                TYPE_NAME
                                                  PsiElement(UIDENTIFIER)('String')
                                PsiElement(>)('>')
              MEMBER_NAME
                PsiElement(LIDENTIFIER)('x')
          PsiElement())(')')
        BLOCK
          PsiElement({)('{')
          DECLARATION_OR_STATEMENT
            COMPILER_ANNOTATIONS
              <empty list>
            STATEMENT
              CONTROL_STATEMENT
                SWITCH_CASE_ELSE
                  SWITCH_HEADER
                    PsiElement(switch)('switch')
                    PsiElement(()('(')
                    EXPRESSION
                      ASSIGNMENT_EXPRESSION
                        THEN_ELSE_EXPRESSION
                          DISJUNCTION_EXPRESSION
                            CONJUNCTION_EXPRESSION
                              LOGICAL_NEGATION_EXPRESSION
                                EQUALITY_EXPRESSION
                                  COMPARISON_EXPRESSION
                                    EXISTENCE_EMPTINESS_EXPRESSION
                                      RANGE_INTERVAL_ENTRY_EXPRESSION
                                        ADDITIVE_EXPRESSION
                                          MULTIPLICATIVE_EXPRESSION
                                            DEFAULT_EXPRESSION
                                              NEGATION_COMPLEMENT_EXPRESSION
                                                EXPONENTIATION_EXPRESSION
                                                  INCREMENT_DECREMENT_EXPRESSION
                                                    POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                      PRIMARY
                                                        BASE
                                                          BASE_REFERENCE
                                                            MEMBER_REFERENCE
                                                              MEMBER_NAME
                                                                PsiElement(LIDENTIFIER)('x')
                    PsiElement())(')')
                  CASES
                    CASE_BLOCK
                      PsiElement(case)('case')
                      PsiElement(()('(')
                      CASE_ITEM
                        IS_CASE_CONDITION
                          PsiElement(is)('is')
                          TYPE
                            UNION_TYPE
                              INTERSECTION_TYPE
                                ENTRY_TYPE
                                  ABBREVIATED_TYPE
                                    QUALIFIED_TYPE
                                      TYPE_NAME_WITH_ARGUMENTS
                                        TYPE_NAME
                                          PsiElement(UIDENTIFIER)('YYY')
                                        TYPE_ARGUMENTS
                                          PsiElement(<)('<')
                                          TYPE_ARGUMENT
                                            TYPE
                                              UNION_TYPE
                                                INTERSECTION_TYPE
                                                  ENTRY_TYPE
                                                    ABBREVIATED_TYPE
                                                      QUALIFIED_TYPE
                                                        TYPE_NAME_WITH_ARGUMENTS
                                                          TYPE_NAME
                                                            PsiElement(UIDENTIFIER)('String')
                                          PsiElement(>)('>')
                      PsiElement())(')')
                      BLOCK
                        PsiElement({)('{')
                        DECLARATION_OR_STATEMENT
                          COMPILER_ANNOTATIONS
                            <empty list>
                          STATEMENT
                            EXPRESSION_OR_SPECIFICATION_STATEMENT
                              EXPRESSION
                                ASSIGNMENT_EXPRESSION
                                  THEN_ELSE_EXPRESSION
                                    DISJUNCTION_EXPRESSION
                                      CONJUNCTION_EXPRESSION
                                        LOGICAL_NEGATION_EXPRESSION
                                          EQUALITY_EXPRESSION
                                            COMPARISON_EXPRESSION
                                              EXISTENCE_EMPTINESS_EXPRESSION
                                                RANGE_INTERVAL_ENTRY_EXPRESSION
                                                  ADDITIVE_EXPRESSION
                                                    MULTIPLICATIVE_EXPRESSION
                                                      DEFAULT_EXPRESSION
                                                        NEGATION_COMPLEMENT_EXPRESSION
                                                          EXPONENTIATION_EXPRESSION
                                                            INCREMENT_DECREMENT_EXPRESSION
                                                              POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                                PRIMARY
                                                                  BASE
                                                                    BASE_REFERENCE
                                                                      MEMBER_REFERENCE
                                                                        MEMBER_NAME
                                                                          PsiElement(LIDENTIFIER)('print')
                                                                  ARGUMENTS
                                                                    POSITIONAL_ARGUMENTS
                                                                      PsiElement(()('(')
                                                                      POSITIONAL_ARGUMENT
                                                                        FUNCTION_OR_EXPRESSION
                                                                          EXPRESSION
                                                                            ASSIGNMENT_EXPRESSION
                                                                              THEN_ELSE_EXPRESSION
                                                                                DISJUNCTION_EXPRESSION
                                                                                  CONJUNCTION_EXPRESSION
                                                                                    LOGICAL_NEGATION_EXPRESSION
                                                                                      EQUALITY_EXPRESSION
                                                                                        COMPARISON_EXPRESSION
                                                                                          EXISTENCE_EMPTINESS_EXPRESSION
                                                                                            RANGE_INTERVAL_ENTRY_EXPRESSION
                                                                                              ADDITIVE_EXPRESSION
                                                                                                MULTIPLICATIVE_EXPRESSION
                                                                                                  DEFAULT_EXPRESSION
                                                                                                    NEGATION_COMPLEMENT_EXPRESSION
                                                                                                      EXPONENTIATION_EXPRESSION
                                                                                                        INCREMENT_DECREMENT_EXPRESSION
                                                                                                          POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                                                                            PRIMARY
                                                                                                              BASE
                                                                                                                STRING_EXPRESSION
                                                                                                                  MY_STRING_LITERAL
                                                                                                                    PsiElement(STRING_LITERAL)('"yyy"')
                                                                      PsiElement())(')')
                              PsiElement(;)(';')
                        PsiElement(})('}')
                    CASE_BLOCK
                      PsiElement(case)('case')
                      PsiElement(()('(')
                      CASE_ITEM
                        IS_CASE_CONDITION
                          PsiElement(is)('is')
                          TYPE
                            UNION_TYPE
                              INTERSECTION_TYPE
                                ENTRY_TYPE
                                  ABBREVIATED_TYPE
                                    QUALIFIED_TYPE
                                      TYPE_NAME_WITH_ARGUMENTS
                                        TYPE_NAME
                                          PsiElement(UIDENTIFIER)('ZZZ')
                                        TYPE_ARGUMENTS
                                          PsiElement(<)('<')
                                          TYPE_ARGUMENT
                                            TYPE
                                              UNION_TYPE
                                                INTERSECTION_TYPE
                                                  ENTRY_TYPE
                                                    ABBREVIATED_TYPE
                                                      QUALIFIED_TYPE
                                                        TYPE_NAME_WITH_ARGUMENTS
                                                          TYPE_NAME
                                                            PsiElement(UIDENTIFIER)('String')
                                          PsiElement(>)('>')
                      PsiElement())(')')
                      BLOCK
                        PsiElement({)('{')
                        DECLARATION_OR_STATEMENT
                          COMPILER_ANNOTATIONS
                            <empty list>
                          STATEMENT
                            EXPRESSION_OR_SPECIFICATION_STATEMENT
                              EXPRESSION
                                ASSIGNMENT_EXPRESSION
                                  THEN_ELSE_EXPRESSION
                                    DISJUNCTION_EXPRESSION
                                      CONJUNCTION_EXPRESSION
                                        LOGICAL_NEGATION_EXPRESSION
                                          EQUALITY_EXPRESSION
                                            COMPARISON_EXPRESSION
                                              EXISTENCE_EMPTINESS_EXPRESSION
                                                RANGE_INTERVAL_ENTRY_EXPRESSION
                                                  ADDITIVE_EXPRESSION
                                                    MULTIPLICATIVE_EXPRESSION
                                                      DEFAULT_EXPRESSION
                                                        NEGATION_COMPLEMENT_EXPRESSION
                                                          EXPONENTIATION_EXPRESSION
                                                            INCREMENT_DECREMENT_EXPRESSION
                                                              POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                                PRIMARY
                                                                  BASE
                                                                    BASE_REFERENCE
                                                                      MEMBER_REFERENCE
                                                                        MEMBER_NAME
                                                                          PsiElement(LIDENTIFIER)('print')
                                                                  ARGUMENTS
                                                                    POSITIONAL_ARGUMENTS
                                                                      PsiElement(()('(')
                                                                      POSITIONAL_ARGUMENT
                                                                        FUNCTION_OR_EXPRESSION
                                                                          EXPRESSION
                                                                            ASSIGNMENT_EXPRESSION
                                                                              THEN_ELSE_EXPRESSION
                                                                                DISJUNCTION_EXPRESSION
                                                                                  CONJUNCTION_EXPRESSION
                                                                                    LOGICAL_NEGATION_EXPRESSION
                                                                                      EQUALITY_EXPRESSION
                                                                                        COMPARISON_EXPRESSION
                                                                                          EXISTENCE_EMPTINESS_EXPRESSION
                                                                                            RANGE_INTERVAL_ENTRY_EXPRESSION
                                                                                              ADDITIVE_EXPRESSION
                                                                                                MULTIPLICATIVE_EXPRESSION
                                                                                                  DEFAULT_EXPRESSION
                                                                                                    NEGATION_COMPLEMENT_EXPRESSION
                                                                                                      EXPONENTIATION_EXPRESSION
                                                                                                        INCREMENT_DECREMENT_EXPRESSION
                                                                                                          POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                                                                            PRIMARY
                                                                                                              BASE
                                                                                                                STRING_EXPRESSION
                                                                                                                  MY_STRING_LITERAL
                                                                                                                    PsiElement(STRING_LITERAL)('"zzz"')
                                                                      PsiElement())(')')
                              PsiElement(;)(';')
                        PsiElement(})('}')
                    CASE_BLOCK
                      PsiElement(case)('case')
                      PsiElement(()('(')
                      CASE_ITEM
                        IS_CASE_CONDITION
                          PsiElement(is)('is')
                          TYPE
                            UNION_TYPE
                              INTERSECTION_TYPE
                                ENTRY_TYPE
                                  ABBREVIATED_TYPE
                                    QUALIFIED_TYPE
                                      TYPE_NAME_WITH_ARGUMENTS
                                        TYPE_NAME
                                          PsiElement(UIDENTIFIER)('WWW')
                      PsiElement())(')')
                      BLOCK
                        PsiElement({)('{')
                        DECLARATION_OR_STATEMENT
                          COMPILER_ANNOTATIONS
                            <empty list>
                          STATEMENT
                            EXPRESSION_OR_SPECIFICATION_STATEMENT
                              EXPRESSION
                                ASSIGNMENT_EXPRESSION
                                  THEN_ELSE_EXPRESSION
                                    DISJUNCTION_EXPRESSION
                                      CONJUNCTION_EXPRESSION
                                        LOGICAL_NEGATION_EXPRESSION
                                          EQUALITY_EXPRESSION
                                            COMPARISON_EXPRESSION
                                              EXISTENCE_EMPTINESS_EXPRESSION
                                                RANGE_INTERVAL_ENTRY_EXPRESSION
                                                  ADDITIVE_EXPRESSION
                                                    MULTIPLICATIVE_EXPRESSION
                                                      DEFAULT_EXPRESSION
                                                        NEGATION_COMPLEMENT_EXPRESSION
                                                          EXPONENTIATION_EXPRESSION
                                                            INCREMENT_DECREMENT_EXPRESSION
                                                              POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                                PRIMARY
                                                                  BASE
                                                                    BASE_REFERENCE
                                                                      MEMBER_REFERENCE
                                                                        MEMBER_NAME
                                                                          PsiElement(LIDENTIFIER)('print')
                                                                  ARGUMENTS
                                                                    POSITIONAL_ARGUMENTS
                                                                      PsiElement(()('(')
                                                                      POSITIONAL_ARGUMENT
                                                                        FUNCTION_OR_EXPRESSION
                                                                          EXPRESSION
                                                                            ASSIGNMENT_EXPRESSION
                                                                              THEN_ELSE_EXPRESSION
                                                                                DISJUNCTION_EXPRESSION
                                                                                  CONJUNCTION_EXPRESSION
                                                                                    LOGICAL_NEGATION_EXPRESSION
                                                                                      EQUALITY_EXPRESSION
                                                                                        COMPARISON_EXPRESSION
                                                                                          EXISTENCE_EMPTINESS_EXPRESSION
                                                                                            RANGE_INTERVAL_ENTRY_EXPRESSION
                                                                                              ADDITIVE_EXPRESSION
                                                                                                MULTIPLICATIVE_EXPRESSION
                                                                                                  DEFAULT_EXPRESSION
                                                                                                    NEGATION_COMPLEMENT_EXPRESSION
                                                                                                      EXPONENTIATION_EXPRESSION
                                                                                                        INCREMENT_DECREMENT_EXPRESSION
                                                                                                          POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                                                                            PRIMARY
                                                                                                              BASE
                                                                                                                STRING_EXPRESSION
                                                                                                                  MY_STRING_LITERAL
                                                                                                                    PsiElement(STRING_LITERAL)('"www"')
                                                                      PsiElement())(')')
                              PsiElement(;)(';')
                        PsiElement(})('}')
          DECLARATION_OR_STATEMENT
            COMPILER_ANNOTATIONS
              <empty list>
            STATEMENT
              CONTROL_STATEMENT
                SWITCH_CASE_ELSE
                  SWITCH_HEADER
                    PsiElement(switch)('switch')
                    PsiElement(()('(')
                    EXPRESSION
                      ASSIGNMENT_EXPRESSION
                        THEN_ELSE_EXPRESSION
                          DISJUNCTION_EXPRESSION
                            CONJUNCTION_EXPRESSION
                              LOGICAL_NEGATION_EXPRESSION
                                EQUALITY_EXPRESSION
                                  COMPARISON_EXPRESSION
                                    EXISTENCE_EMPTINESS_EXPRESSION
                                      RANGE_INTERVAL_ENTRY_EXPRESSION
                                        ADDITIVE_EXPRESSION
                                          MULTIPLICATIVE_EXPRESSION
                                            DEFAULT_EXPRESSION
                                              NEGATION_COMPLEMENT_EXPRESSION
                                                EXPONENTIATION_EXPRESSION
                                                  INCREMENT_DECREMENT_EXPRESSION
                                                    POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                      PRIMARY
                                                        BASE
                                                          BASE_REFERENCE
                                                            MEMBER_REFERENCE
                                                              MEMBER_NAME
                                                                PsiElement(LIDENTIFIER)('x')
                    PsiElement())(')')
                  CASES
                    CASE_BLOCK
                      PsiElement(case)('case')
                      PsiElement(()('(')
                      CASE_ITEM
                        IS_CASE_CONDITION
                          PsiElement(is)('is')
                          TYPE
                            UNION_TYPE
                              INTERSECTION_TYPE
                                ENTRY_TYPE
                                  ABBREVIATED_TYPE
                                    QUALIFIED_TYPE
                                      TYPE_NAME_WITH_ARGUMENTS
                                        TYPE_NAME
                                          PsiElement(UIDENTIFIER)('YYY')
                                        TYPE_ARGUMENTS
                                          PsiElement(<)('<')
                                          TYPE_ARGUMENT
                                            TYPE
                                              UNION_TYPE
                                                INTERSECTION_TYPE
                                                  ENTRY_TYPE
                                                    ABBREVIATED_TYPE
                                                      QUALIFIED_TYPE
                                                        TYPE_NAME_WITH_ARGUMENTS
                                                          TYPE_NAME
                                                            PsiElement(UIDENTIFIER)('String')
                                          PsiElement(>)('>')
                      PsiElement())(')')
                      BLOCK
                        PsiElement({)('{')
                        DECLARATION_OR_STATEMENT
                          COMPILER_ANNOTATIONS
                            <empty list>
                          STATEMENT
                            EXPRESSION_OR_SPECIFICATION_STATEMENT
                              EXPRESSION
                                ASSIGNMENT_EXPRESSION
                                  THEN_ELSE_EXPRESSION
                                    DISJUNCTION_EXPRESSION
                                      CONJUNCTION_EXPRESSION
                                        LOGICAL_NEGATION_EXPRESSION
                                          EQUALITY_EXPRESSION
                                            COMPARISON_EXPRESSION
                                              EXISTENCE_EMPTINESS_EXPRESSION
                                                RANGE_INTERVAL_ENTRY_EXPRESSION
                                                  ADDITIVE_EXPRESSION
                                                    MULTIPLICATIVE_EXPRESSION
                                                      DEFAULT_EXPRESSION
                                                        NEGATION_COMPLEMENT_EXPRESSION
                                                          EXPONENTIATION_EXPRESSION
                                                            INCREMENT_DECREMENT_EXPRESSION
                                                              POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                                PRIMARY
                                                                  BASE
                                                                    BASE_REFERENCE
                                                                      MEMBER_REFERENCE
                                                                        MEMBER_NAME
                                                                          PsiElement(LIDENTIFIER)('print')
                                                                  ARGUMENTS
                                                                    POSITIONAL_ARGUMENTS
                                                                      PsiElement(()('(')
                                                                      POSITIONAL_ARGUMENT
                                                                        FUNCTION_OR_EXPRESSION
                                                                          EXPRESSION
                                                                            ASSIGNMENT_EXPRESSION
                                                                              THEN_ELSE_EXPRESSION
                                                                                DISJUNCTION_EXPRESSION
                                                                                  CONJUNCTION_EXPRESSION
                                                                                    LOGICAL_NEGATION_EXPRESSION
                                                                                      EQUALITY_EXPRESSION
                                                                                        COMPARISON_EXPRESSION
                                                                                          EXISTENCE_EMPTINESS_EXPRESSION
                                                                                            RANGE_INTERVAL_ENTRY_EXPRESSION
                                                                                              ADDITIVE_EXPRESSION
                                                                                                MULTIPLICATIVE_EXPRESSION
                                                                                                  DEFAULT_EXPRESSION
                                                                                                    NEGATION_COMPLEMENT_EXPRESSION
                                                                                                      EXPONENTIATION_EXPRESSION
                                                                                                        INCREMENT_DECREMENT_EXPRESSION
                                                                                                          POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                                                                            PRIMARY
                                                                                                              BASE
                                                                                                                STRING_EXPRESSION
                                                                                                                  MY_STRING_LITERAL
                                                                                                                    PsiElement(STRING_LITERAL)('"yyy"')
                                                                      PsiElement())(')')
                              PsiElement(;)(';')
                        PsiElement(})('}')
                    DEFAULT_CASE_BLOCK
                      PsiElement(else)('else')
                      BLOCK
                        PsiElement({)('{')
                        PsiElement(})('}')
          DECLARATION_OR_STATEMENT
            COMPILER_ANNOTATIONS
              COMPILER_ANNOTATION
                PsiElement(@)('@')
                ANNOTATION_NAME
                  PsiElement(LIDENTIFIER)('error')
            STATEMENT
              CONTROL_STATEMENT
                SWITCH_CASE_ELSE
                  SWITCH_HEADER
                    PsiElement(switch)('switch')
                    PsiElement(()('(')
                    EXPRESSION
                      ASSIGNMENT_EXPRESSION
                        THEN_ELSE_EXPRESSION
                          DISJUNCTION_EXPRESSION
                            CONJUNCTION_EXPRESSION
                              LOGICAL_NEGATION_EXPRESSION
                                EQUALITY_EXPRESSION
                                  COMPARISON_EXPRESSION
                                    EXISTENCE_EMPTINESS_EXPRESSION
                                      RANGE_INTERVAL_ENTRY_EXPRESSION
                                        ADDITIVE_EXPRESSION
                                          MULTIPLICATIVE_EXPRESSION
                                            DEFAULT_EXPRESSION
                                              NEGATION_COMPLEMENT_EXPRESSION
                                                EXPONENTIATION_EXPRESSION
                                                  INCREMENT_DECREMENT_EXPRESSION
                                                    POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                      PRIMARY
                                                        BASE
                                                          BASE_REFERENCE
                                                            MEMBER_REFERENCE
                                                              MEMBER_NAME
                                                                PsiElement(LIDENTIFIER)('x')
                    PsiElement())(')')
                  CASES
                    CASE_BLOCK
                      PsiElement(case)('case')
                      PsiElement(()('(')
                      CASE_ITEM
                        IS_CASE_CONDITION
                          PsiElement(is)('is')
                          TYPE
                            UNION_TYPE
                              INTERSECTION_TYPE
                                ENTRY_TYPE
                                  ABBREVIATED_TYPE
                                    QUALIFIED_TYPE
                                      TYPE_NAME_WITH_ARGUMENTS
                                        TYPE_NAME
                                          PsiElement(UIDENTIFIER)('YYY')
                                        TYPE_ARGUMENTS
                                          PsiElement(<)('<')
                                          TYPE_ARGUMENT
                                            TYPE
                                              UNION_TYPE
                                                INTERSECTION_TYPE
                                                  ENTRY_TYPE
                                                    ABBREVIATED_TYPE
                                                      QUALIFIED_TYPE
                                                        TYPE_NAME_WITH_ARGUMENTS
                                                          TYPE_NAME
                                                            PsiElement(UIDENTIFIER)('String')
                                          PsiElement(>)('>')
                      PsiElement())(')')
                      BLOCK
                        PsiElement({)('{')
                        DECLARATION_OR_STATEMENT
                          COMPILER_ANNOTATIONS
                            <empty list>
                          STATEMENT
                            EXPRESSION_OR_SPECIFICATION_STATEMENT
                              EXPRESSION
                                ASSIGNMENT_EXPRESSION
                                  THEN_ELSE_EXPRESSION
                                    DISJUNCTION_EXPRESSION
                                      CONJUNCTION_EXPRESSION
                                        LOGICAL_NEGATION_EXPRESSION
                                          EQUALITY_EXPRESSION
                                            COMPARISON_EXPRESSION
                                              EXISTENCE_EMPTINESS_EXPRESSION
                                                RANGE_INTERVAL_ENTRY_EXPRESSION
                                                  ADDITIVE_EXPRESSION
                                                    MULTIPLICATIVE_EXPRESSION
                                                      DEFAULT_EXPRESSION
                                                        NEGATION_COMPLEMENT_EXPRESSION
                                                          EXPONENTIATION_EXPRESSION
                                                            INCREMENT_DECREMENT_EXPRESSION
                                                              POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                                PRIMARY
                                                                  BASE
                                                                    BASE_REFERENCE
                                                                      MEMBER_REFERENCE
                                                                        MEMBER_NAME
                                                                          PsiElement(LIDENTIFIER)('print')
                                                                  ARGUMENTS
                                                                    POSITIONAL_ARGUMENTS
                                                                      PsiElement(()('(')
                                                                      POSITIONAL_ARGUMENT
                                                                        FUNCTION_OR_EXPRESSION
                                                                          EXPRESSION
                                                                            ASSIGNMENT_EXPRESSION
                                                                              THEN_ELSE_EXPRESSION
                                                                                DISJUNCTION_EXPRESSION
                                                                                  CONJUNCTION_EXPRESSION
                                                                                    LOGICAL_NEGATION_EXPRESSION
                                                                                      EQUALITY_EXPRESSION
                                                                                        COMPARISON_EXPRESSION
                                                                                          EXISTENCE_EMPTINESS_EXPRESSION
                                                                                            RANGE_INTERVAL_ENTRY_EXPRESSION
                                                                                              ADDITIVE_EXPRESSION
                                                                                                MULTIPLICATIVE_EXPRESSION
                                                                                                  DEFAULT_EXPRESSION
                                                                                                    NEGATION_COMPLEMENT_EXPRESSION
                                                                                                      EXPONENTIATION_EXPRESSION
                                                                                                        INCREMENT_DECREMENT_EXPRESSION
                                                                                                          POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                                                                            PRIMARY
                                                                                                              BASE
                                                                                                                STRING_EXPRESSION
                                                                                                                  MY_STRING_LITERAL
                                                                                                                    PsiElement(STRING_LITERAL)('"yyy"')
                                                                      PsiElement())(')')
                              PsiElement(;)(';')
                        PsiElement(})('}')
                    CASE_BLOCK
                      PsiElement(case)('case')
                      PsiElement(()('(')
                      CASE_ITEM
                        IS_CASE_CONDITION
                          PsiElement(is)('is')
                          TYPE
                            UNION_TYPE
                              INTERSECTION_TYPE
                                ENTRY_TYPE
                                  ABBREVIATED_TYPE
                                    QUALIFIED_TYPE
                                      TYPE_NAME_WITH_ARGUMENTS
                                        TYPE_NAME
                                          PsiElement(UIDENTIFIER)('ZZZ')
                                        TYPE_ARGUMENTS
                                          PsiElement(<)('<')
                                          TYPE_ARGUMENT
                                            TYPE
                                              UNION_TYPE
                                                INTERSECTION_TYPE
                                                  ENTRY_TYPE
                                                    ABBREVIATED_TYPE
                                                      QUALIFIED_TYPE
                                                        TYPE_NAME_WITH_ARGUMENTS
                                                          TYPE_NAME
                                                            PsiElement(UIDENTIFIER)('String')
                                          PsiElement(>)('>')
                      PsiElement())(')')
                      BLOCK
                        PsiElement({)('{')
                        DECLARATION_OR_STATEMENT
                          COMPILER_ANNOTATIONS
                            <empty list>
                          STATEMENT
                            EXPRESSION_OR_SPECIFICATION_STATEMENT
                              EXPRESSION
                                ASSIGNMENT_EXPRESSION
                                  THEN_ELSE_EXPRESSION
                                    DISJUNCTION_EXPRESSION
                                      CONJUNCTION_EXPRESSION
                                        LOGICAL_NEGATION_EXPRESSION
                                          EQUALITY_EXPRESSION
                                            COMPARISON_EXPRESSION
                                              EXISTENCE_EMPTINESS_EXPRESSION
                                                RANGE_INTERVAL_ENTRY_EXPRESSION
                                                  ADDITIVE_EXPRESSION
                                                    MULTIPLICATIVE_EXPRESSION
                                                      DEFAULT_EXPRESSION
                                                        NEGATION_COMPLEMENT_EXPRESSION
                                                          EXPONENTIATION_EXPRESSION
                                                            INCREMENT_DECREMENT_EXPRESSION
                                                              POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                                PRIMARY
                                                                  BASE
                                                                    BASE_REFERENCE
                                                                      MEMBER_REFERENCE
                                                                        MEMBER_NAME
                                                                          PsiElement(LIDENTIFIER)('print')
                                                                  ARGUMENTS
                                                                    POSITIONAL_ARGUMENTS
                                                                      PsiElement(()('(')
                                                                      POSITIONAL_ARGUMENT
                                                                        FUNCTION_OR_EXPRESSION
                                                                          EXPRESSION
                                                                            ASSIGNMENT_EXPRESSION
                                                                              THEN_ELSE_EXPRESSION
                                                                                DISJUNCTION_EXPRESSION
                                                                                  CONJUNCTION_EXPRESSION
                                                                                    LOGICAL_NEGATION_EXPRESSION
                                                                                      EQUALITY_EXPRESSION
                                                                                        COMPARISON_EXPRESSION
                                                                                          EXISTENCE_EMPTINESS_EXPRESSION
                                                                                            RANGE_INTERVAL_ENTRY_EXPRESSION
                                                                                              ADDITIVE_EXPRESSION
                                                                                                MULTIPLICATIVE_EXPRESSION
                                                                                                  DEFAULT_EXPRESSION
                                                                                                    NEGATION_COMPLEMENT_EXPRESSION
                                                                                                      EXPONENTIATION_EXPRESSION
                                                                                                        INCREMENT_DECREMENT_EXPRESSION
                                                                                                          POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                                                                            PRIMARY
                                                                                                              BASE
                                                                                                                STRING_EXPRESSION
                                                                                                                  MY_STRING_LITERAL
                                                                                                                    PsiElement(STRING_LITERAL)('"zzz"')
                                                                      PsiElement())(')')
                              PsiElement(;)(';')
                        PsiElement(})('}')
          DECLARATION_OR_STATEMENT
            COMPILER_ANNOTATIONS
              <empty list>
            STATEMENT
              CONTROL_STATEMENT
                SWITCH_CASE_ELSE
                  SWITCH_HEADER
                    PsiElement(switch)('switch')
                    PsiElement(()('(')
                    EXPRESSION
                      ASSIGNMENT_EXPRESSION
                        THEN_ELSE_EXPRESSION
                          DISJUNCTION_EXPRESSION
                            CONJUNCTION_EXPRESSION
                              LOGICAL_NEGATION_EXPRESSION
                                EQUALITY_EXPRESSION
                                  COMPARISON_EXPRESSION
                                    EXISTENCE_EMPTINESS_EXPRESSION
                                      RANGE_INTERVAL_ENTRY_EXPRESSION
                                        ADDITIVE_EXPRESSION
                                          MULTIPLICATIVE_EXPRESSION
                                            DEFAULT_EXPRESSION
                                              NEGATION_COMPLEMENT_EXPRESSION
                                                EXPONENTIATION_EXPRESSION
                                                  INCREMENT_DECREMENT_EXPRESSION
                                                    POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                      PRIMARY
                                                        BASE
                                                          BASE_REFERENCE
                                                            MEMBER_REFERENCE
                                                              MEMBER_NAME
                                                                PsiElement(LIDENTIFIER)('x')
                    PsiElement())(')')
                  CASES
                    CASE_BLOCK
                      PsiElement(case)('case')
                      PsiElement(()('(')
                      CASE_ITEM
                        IS_CASE_CONDITION
                          PsiElement(is)('is')
                          TYPE
                            UNION_TYPE
                              INTERSECTION_TYPE
                                ENTRY_TYPE
                                  ABBREVIATED_TYPE
                                    QUALIFIED_TYPE
                                      TYPE_NAME_WITH_ARGUMENTS
                                        TYPE_NAME
                                          PsiElement(UIDENTIFIER)('YYY')
                                        TYPE_ARGUMENTS
                                          PsiElement(<)('<')
                                          TYPE_ARGUMENT
                                            TYPE
                                              UNION_TYPE
                                                INTERSECTION_TYPE
                                                  ENTRY_TYPE
                                                    ABBREVIATED_TYPE
                                                      QUALIFIED_TYPE
                                                        TYPE_NAME_WITH_ARGUMENTS
                                                          TYPE_NAME
                                                            PsiElement(UIDENTIFIER)('Object')
                                          PsiElement(>)('>')
                      PsiElement())(')')
                      BLOCK
                        PsiElement({)('{')
                        DECLARATION_OR_STATEMENT
                          COMPILER_ANNOTATIONS
                            <empty list>
                          STATEMENT
                            EXPRESSION_OR_SPECIFICATION_STATEMENT
                              EXPRESSION
                                ASSIGNMENT_EXPRESSION
                                  THEN_ELSE_EXPRESSION
                                    DISJUNCTION_EXPRESSION
                                      CONJUNCTION_EXPRESSION
                                        LOGICAL_NEGATION_EXPRESSION
                                          EQUALITY_EXPRESSION
                                            COMPARISON_EXPRESSION
                                              EXISTENCE_EMPTINESS_EXPRESSION
                                                RANGE_INTERVAL_ENTRY_EXPRESSION
                                                  ADDITIVE_EXPRESSION
                                                    MULTIPLICATIVE_EXPRESSION
                                                      DEFAULT_EXPRESSION
                                                        NEGATION_COMPLEMENT_EXPRESSION
                                                          EXPONENTIATION_EXPRESSION
                                                            INCREMENT_DECREMENT_EXPRESSION
                                                              POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                                PRIMARY
                                                                  BASE
                                                                    BASE_REFERENCE
                                                                      MEMBER_REFERENCE
                                                                        MEMBER_NAME
                                                                          PsiElement(LIDENTIFIER)('print')
                                                                  ARGUMENTS
                                                                    POSITIONAL_ARGUMENTS
                                                                      PsiElement(()('(')
                                                                      POSITIONAL_ARGUMENT
                                                                        FUNCTION_OR_EXPRESSION
                                                                          EXPRESSION
                                                                            ASSIGNMENT_EXPRESSION
                                                                              THEN_ELSE_EXPRESSION
                                                                                DISJUNCTION_EXPRESSION
                                                                                  CONJUNCTION_EXPRESSION
                                                                                    LOGICAL_NEGATION_EXPRESSION
                                                                                      EQUALITY_EXPRESSION
                                                                                        COMPARISON_EXPRESSION
                                                                                          EXISTENCE_EMPTINESS_EXPRESSION
                                                                                            RANGE_INTERVAL_ENTRY_EXPRESSION
                                                                                              ADDITIVE_EXPRESSION
                                                                                                MULTIPLICATIVE_EXPRESSION
                                                                                                  DEFAULT_EXPRESSION
                                                                                                    NEGATION_COMPLEMENT_EXPRESSION
                                                                                                      EXPONENTIATION_EXPRESSION
                                                                                                        INCREMENT_DECREMENT_EXPRESSION
                                                                                                          POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                                                                            PRIMARY
                                                                                                              BASE
                                                                                                                STRING_EXPRESSION
                                                                                                                  MY_STRING_LITERAL
                                                                                                                    PsiElement(STRING_LITERAL)('"yyy"')
                                                                      PsiElement())(')')
                              PsiElement(;)(';')
                        PsiElement(})('}')
                    CASE_BLOCK
                      PsiElement(case)('case')
                      PsiElement(()('(')
                      CASE_ITEM
                        IS_CASE_CONDITION
                          PsiElement(is)('is')
                          TYPE
                            UNION_TYPE
                              INTERSECTION_TYPE
                                ENTRY_TYPE
                                  ABBREVIATED_TYPE
                                    QUALIFIED_TYPE
                                      TYPE_NAME_WITH_ARGUMENTS
                                        TYPE_NAME
                                          PsiElement(UIDENTIFIER)('ZZZ')
                                        TYPE_ARGUMENTS
                                          PsiElement(<)('<')
                                          TYPE_ARGUMENT
                                            TYPE
                                              UNION_TYPE
                                                INTERSECTION_TYPE
                                                  ENTRY_TYPE
                                                    ABBREVIATED_TYPE
                                                      QUALIFIED_TYPE
                                                        TYPE_NAME_WITH_ARGUMENTS
                                                          TYPE_NAME
                                                            PsiElement(UIDENTIFIER)('String')
                                          PsiElement(>)('>')
                      PsiElement())(')')
                      BLOCK
                        PsiElement({)('{')
                        DECLARATION_OR_STATEMENT
                          COMPILER_ANNOTATIONS
                            <empty list>
                          STATEMENT
                            EXPRESSION_OR_SPECIFICATION_STATEMENT
                              EXPRESSION
                                ASSIGNMENT_EXPRESSION
                                  THEN_ELSE_EXPRESSION
                                    DISJUNCTION_EXPRESSION
                                      CONJUNCTION_EXPRESSION
                                        LOGICAL_NEGATION_EXPRESSION
                                          EQUALITY_EXPRESSION
                                            COMPARISON_EXPRESSION
                                              EXISTENCE_EMPTINESS_EXPRESSION
                                                RANGE_INTERVAL_ENTRY_EXPRESSION
                                                  ADDITIVE_EXPRESSION
                                                    MULTIPLICATIVE_EXPRESSION
                                                      DEFAULT_EXPRESSION
                                                        NEGATION_COMPLEMENT_EXPRESSION
                                                          EXPONENTIATION_EXPRESSION
                                                            INCREMENT_DECREMENT_EXPRESSION
                                                              POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                                PRIMARY
                                                                  BASE
                                                                    BASE_REFERENCE
                                                                      MEMBER_REFERENCE
                                                                        MEMBER_NAME
                                                                          PsiElement(LIDENTIFIER)('print')
                                                                  ARGUMENTS
                                                                    POSITIONAL_ARGUMENTS
                                                                      PsiElement(()('(')
                                                                      POSITIONAL_ARGUMENT
                                                                        FUNCTION_OR_EXPRESSION
                                                                          EXPRESSION
                                                                            ASSIGNMENT_EXPRESSION
                                                                              THEN_ELSE_EXPRESSION
                                                                                DISJUNCTION_EXPRESSION
                                                                                  CONJUNCTION_EXPRESSION
                                                                                    LOGICAL_NEGATION_EXPRESSION
                                                                                      EQUALITY_EXPRESSION
                                                                                        COMPARISON_EXPRESSION
                                                                                          EXISTENCE_EMPTINESS_EXPRESSION
                                                                                            RANGE_INTERVAL_ENTRY_EXPRESSION
                                                                                              ADDITIVE_EXPRESSION
                                                                                                MULTIPLICATIVE_EXPRESSION
                                                                                                  DEFAULT_EXPRESSION
                                                                                                    NEGATION_COMPLEMENT_EXPRESSION
                                                                                                      EXPONENTIATION_EXPRESSION
                                                                                                        INCREMENT_DECREMENT_EXPRESSION
                                                                                                          POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                                                                            PRIMARY
                                                                                                              BASE
                                                                                                                STRING_EXPRESSION
                                                                                                                  MY_STRING_LITERAL
                                                                                                                    PsiElement(STRING_LITERAL)('"zzz"')
                                                                      PsiElement())(')')
                              PsiElement(;)(';')
                        PsiElement(})('}')
                    CASE_BLOCK
                      PsiElement(case)('case')
                      PsiElement(()('(')
                      CASE_ITEM
                        IS_CASE_CONDITION
                          PsiElement(is)('is')
                          TYPE
                            UNION_TYPE
                              INTERSECTION_TYPE
                                ENTRY_TYPE
                                  ABBREVIATED_TYPE
                                    QUALIFIED_TYPE
                                      TYPE_NAME_WITH_ARGUMENTS
                                        TYPE_NAME
                                          PsiElement(UIDENTIFIER)('WWW')
                      PsiElement())(')')
                      BLOCK
                        PsiElement({)('{')
                        DECLARATION_OR_STATEMENT
                          COMPILER_ANNOTATIONS
                            <empty list>
                          STATEMENT
                            EXPRESSION_OR_SPECIFICATION_STATEMENT
                              EXPRESSION
                                ASSIGNMENT_EXPRESSION
                                  THEN_ELSE_EXPRESSION
                                    DISJUNCTION_EXPRESSION
                                      CONJUNCTION_EXPRESSION
                                        LOGICAL_NEGATION_EXPRESSION
                                          EQUALITY_EXPRESSION
                                            COMPARISON_EXPRESSION
                                              EXISTENCE_EMPTINESS_EXPRESSION
                                                RANGE_INTERVAL_ENTRY_EXPRESSION
                                                  ADDITIVE_EXPRESSION
                                                    MULTIPLICATIVE_EXPRESSION
                                                      DEFAULT_EXPRESSION
                                                        NEGATION_COMPLEMENT_EXPRESSION
                                                          EXPONENTIATION_EXPRESSION
                                                            INCREMENT_DECREMENT_EXPRESSION
                                                              POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                                PRIMARY
                                                                  BASE
                                                                    BASE_REFERENCE
                                                                      MEMBER_REFERENCE
                                                                        MEMBER_NAME
                                                                          PsiElement(LIDENTIFIER)('print')
                                                                  ARGUMENTS
                                                                    POSITIONAL_ARGUMENTS
                                                                      PsiElement(()('(')
                                                                      POSITIONAL_ARGUMENT
                                                                        FUNCTION_OR_EXPRESSION
                                                                          EXPRESSION
                                                                            ASSIGNMENT_EXPRESSION
                                                                              THEN_ELSE_EXPRESSION
                                                                                DISJUNCTION_EXPRESSION
                                                                                  CONJUNCTION_EXPRESSION
                                                                                    LOGICAL_NEGATION_EXPRESSION
                                                                                      EQUALITY_EXPRESSION
                                                                                        COMPARISON_EXPRESSION
                                                                                          EXISTENCE_EMPTINESS_EXPRESSION
                                                                                            RANGE_INTERVAL_ENTRY_EXPRESSION
                                                                                              ADDITIVE_EXPRESSION
                                                                                                MULTIPLICATIVE_EXPRESSION
                                                                                                  DEFAULT_EXPRESSION
                                                                                                    NEGATION_COMPLEMENT_EXPRESSION
                                                                                                      EXPONENTIATION_EXPRESSION
                                                                                                        INCREMENT_DECREMENT_EXPRESSION
                                                                                                          POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                                                                            PRIMARY
                                                                                                              BASE
                                                                                                                STRING_EXPRESSION
                                                                                                                  MY_STRING_LITERAL
                                                                                                                    PsiElement(STRING_LITERAL)('"www"')
                                                                      PsiElement())(')')
                              PsiElement(;)(';')
                        PsiElement(})('}')
          DECLARATION_OR_STATEMENT
            COMPILER_ANNOTATIONS
              COMPILER_ANNOTATION
                PsiElement(@)('@')
                ANNOTATION_NAME
                  PsiElement(LIDENTIFIER)('error')
            STATEMENT
              CONTROL_STATEMENT
                SWITCH_CASE_ELSE
                  SWITCH_HEADER
                    PsiElement(switch)('switch')
                    PsiElement(()('(')
                    EXPRESSION
                      ASSIGNMENT_EXPRESSION
                        THEN_ELSE_EXPRESSION
                          DISJUNCTION_EXPRESSION
                            CONJUNCTION_EXPRESSION
                              LOGICAL_NEGATION_EXPRESSION
                                EQUALITY_EXPRESSION
                                  COMPARISON_EXPRESSION
                                    EXISTENCE_EMPTINESS_EXPRESSION
                                      RANGE_INTERVAL_ENTRY_EXPRESSION
                                        ADDITIVE_EXPRESSION
                                          MULTIPLICATIVE_EXPRESSION
                                            DEFAULT_EXPRESSION
                                              NEGATION_COMPLEMENT_EXPRESSION
                                                EXPONENTIATION_EXPRESSION
                                                  INCREMENT_DECREMENT_EXPRESSION
                                                    POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                      PRIMARY
                                                        BASE
                                                          BASE_REFERENCE
                                                            MEMBER_REFERENCE
                                                              MEMBER_NAME
                                                                PsiElement(LIDENTIFIER)('x')
                    PsiElement())(')')
                  CASES
                    CASE_BLOCK
                      PsiElement(case)('case')
                      PsiElement(()('(')
                      CASE_ITEM
                        IS_CASE_CONDITION
                          PsiElement(is)('is')
                          TYPE
                            UNION_TYPE
                              INTERSECTION_TYPE
                                ENTRY_TYPE
                                  ABBREVIATED_TYPE
                                    QUALIFIED_TYPE
                                      TYPE_NAME_WITH_ARGUMENTS
                                        TYPE_NAME
                                          PsiElement(UIDENTIFIER)('YYY')
                                        TYPE_ARGUMENTS
                                          PsiElement(<)('<')
                                          TYPE_ARGUMENT
                                            TYPE
                                              UNION_TYPE
                                                INTERSECTION_TYPE
                                                  ENTRY_TYPE
                                                    ABBREVIATED_TYPE
                                                      QUALIFIED_TYPE
                                                        TYPE_NAME_WITH_ARGUMENTS
                                                          TYPE_NAME
                                                            PsiElement(UIDENTIFIER)('Bottom')
                                          PsiElement(>)('>')
                      PsiElement())(')')
                      BLOCK
                        PsiElement({)('{')
                        DECLARATION_OR_STATEMENT
                          COMPILER_ANNOTATIONS
                            <empty list>
                          STATEMENT
                            EXPRESSION_OR_SPECIFICATION_STATEMENT
                              EXPRESSION
                                ASSIGNMENT_EXPRESSION
                                  THEN_ELSE_EXPRESSION
                                    DISJUNCTION_EXPRESSION
                                      CONJUNCTION_EXPRESSION
                                        LOGICAL_NEGATION_EXPRESSION
                                          EQUALITY_EXPRESSION
                                            COMPARISON_EXPRESSION
                                              EXISTENCE_EMPTINESS_EXPRESSION
                                                RANGE_INTERVAL_ENTRY_EXPRESSION
                                                  ADDITIVE_EXPRESSION
                                                    MULTIPLICATIVE_EXPRESSION
                                                      DEFAULT_EXPRESSION
                                                        NEGATION_COMPLEMENT_EXPRESSION
                                                          EXPONENTIATION_EXPRESSION
                                                            INCREMENT_DECREMENT_EXPRESSION
                                                              POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                                PRIMARY
                                                                  BASE
                                                                    BASE_REFERENCE
                                                                      MEMBER_REFERENCE
                                                                        MEMBER_NAME
                                                                          PsiElement(LIDENTIFIER)('print')
                                                                  ARGUMENTS
                                                                    POSITIONAL_ARGUMENTS
                                                                      PsiElement(()('(')
                                                                      POSITIONAL_ARGUMENT
                                                                        FUNCTION_OR_EXPRESSION
                                                                          EXPRESSION
                                                                            ASSIGNMENT_EXPRESSION
                                                                              THEN_ELSE_EXPRESSION
                                                                                DISJUNCTION_EXPRESSION
                                                                                  CONJUNCTION_EXPRESSION
                                                                                    LOGICAL_NEGATION_EXPRESSION
                                                                                      EQUALITY_EXPRESSION
                                                                                        COMPARISON_EXPRESSION
                                                                                          EXISTENCE_EMPTINESS_EXPRESSION
                                                                                            RANGE_INTERVAL_ENTRY_EXPRESSION
                                                                                              ADDITIVE_EXPRESSION
                                                                                                MULTIPLICATIVE_EXPRESSION
                                                                                                  DEFAULT_EXPRESSION
                                                                                                    NEGATION_COMPLEMENT_EXPRESSION
                                                                                                      EXPONENTIATION_EXPRESSION
                                                                                                        INCREMENT_DECREMENT_EXPRESSION
                                                                                                          POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                                                                            PRIMARY
                                                                                                              BASE
                                                                                                                STRING_EXPRESSION
                                                                                                                  MY_STRING_LITERAL
                                                                                                                    PsiElement(STRING_LITERAL)('"yyy"')
                                                                      PsiElement())(')')
                              PsiElement(;)(';')
                        PsiElement(})('}')
                    CASE_BLOCK
                      PsiElement(case)('case')
                      PsiElement(()('(')
                      CASE_ITEM
                        IS_CASE_CONDITION
                          PsiElement(is)('is')
                          TYPE
                            UNION_TYPE
                              INTERSECTION_TYPE
                                ENTRY_TYPE
                                  ABBREVIATED_TYPE
                                    QUALIFIED_TYPE
                                      TYPE_NAME_WITH_ARGUMENTS
                                        TYPE_NAME
                                          PsiElement(UIDENTIFIER)('ZZZ')
                                        TYPE_ARGUMENTS
                                          PsiElement(<)('<')
                                          TYPE_ARGUMENT
                                            TYPE
                                              UNION_TYPE
                                                INTERSECTION_TYPE
                                                  ENTRY_TYPE
                                                    ABBREVIATED_TYPE
                                                      QUALIFIED_TYPE
                                                        TYPE_NAME_WITH_ARGUMENTS
                                                          TYPE_NAME
                                                            PsiElement(UIDENTIFIER)('String')
                                          PsiElement(>)('>')
                      PsiElement())(')')
                      BLOCK
                        PsiElement({)('{')
                        DECLARATION_OR_STATEMENT
                          COMPILER_ANNOTATIONS
                            <empty list>
                          STATEMENT
                            EXPRESSION_OR_SPECIFICATION_STATEMENT
                              EXPRESSION
                                ASSIGNMENT_EXPRESSION
                                  THEN_ELSE_EXPRESSION
                                    DISJUNCTION_EXPRESSION
                                      CONJUNCTION_EXPRESSION
                                        LOGICAL_NEGATION_EXPRESSION
                                          EQUALITY_EXPRESSION
                                            COMPARISON_EXPRESSION
                                              EXISTENCE_EMPTINESS_EXPRESSION
                                                RANGE_INTERVAL_ENTRY_EXPRESSION
                                                  ADDITIVE_EXPRESSION
                                                    MULTIPLICATIVE_EXPRESSION
                                                      DEFAULT_EXPRESSION
                                                        NEGATION_COMPLEMENT_EXPRESSION
                                                          EXPONENTIATION_EXPRESSION
                                                            INCREMENT_DECREMENT_EXPRESSION
                                                              POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                                PRIMARY
                                                                  BASE
                                                                    BASE_REFERENCE
                                                                      MEMBER_REFERENCE
                                                                        MEMBER_NAME
                                                                          PsiElement(LIDENTIFIER)('print')
                                                                  ARGUMENTS
                                                                    POSITIONAL_ARGUMENTS
                                                                      PsiElement(()('(')
                                                                      POSITIONAL_ARGUMENT
                                                                        FUNCTION_OR_EXPRESSION
                                                                          EXPRESSION
                                                                            ASSIGNMENT_EXPRESSION
                                                                              THEN_ELSE_EXPRESSION
                                                                                DISJUNCTION_EXPRESSION
                                                                                  CONJUNCTION_EXPRESSION
                                                                                    LOGICAL_NEGATION_EXPRESSION
                                                                                      EQUALITY_EXPRESSION
                                                                                        COMPARISON_EXPRESSION
                                                                                          EXISTENCE_EMPTINESS_EXPRESSION
                                                                                            RANGE_INTERVAL_ENTRY_EXPRESSION
                                                                                              ADDITIVE_EXPRESSION
                                                                                                MULTIPLICATIVE_EXPRESSION
                                                                                                  DEFAULT_EXPRESSION
                                                                                                    NEGATION_COMPLEMENT_EXPRESSION
                                                                                                      EXPONENTIATION_EXPRESSION
                                                                                                        INCREMENT_DECREMENT_EXPRESSION
                                                                                                          POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                                                                            PRIMARY
                                                                                                              BASE
                                                                                                                STRING_EXPRESSION
                                                                                                                  MY_STRING_LITERAL
                                                                                                                    PsiElement(STRING_LITERAL)('"zzz"')
                                                                      PsiElement())(')')
                              PsiElement(;)(';')
                        PsiElement(})('}')
                    CASE_BLOCK
                      PsiElement(case)('case')
                      PsiElement(()('(')
                      CASE_ITEM
                        IS_CASE_CONDITION
                          PsiElement(is)('is')
                          TYPE
                            UNION_TYPE
                              INTERSECTION_TYPE
                                ENTRY_TYPE
                                  ABBREVIATED_TYPE
                                    QUALIFIED_TYPE
                                      TYPE_NAME_WITH_ARGUMENTS
                                        TYPE_NAME
                                          PsiElement(UIDENTIFIER)('WWW')
                      PsiElement())(')')
                      BLOCK
                        PsiElement({)('{')
                        DECLARATION_OR_STATEMENT
                          COMPILER_ANNOTATIONS
                            <empty list>
                          STATEMENT
                            EXPRESSION_OR_SPECIFICATION_STATEMENT
                              EXPRESSION
                                ASSIGNMENT_EXPRESSION
                                  THEN_ELSE_EXPRESSION
                                    DISJUNCTION_EXPRESSION
                                      CONJUNCTION_EXPRESSION
                                        LOGICAL_NEGATION_EXPRESSION
                                          EQUALITY_EXPRESSION
                                            COMPARISON_EXPRESSION
                                              EXISTENCE_EMPTINESS_EXPRESSION
                                                RANGE_INTERVAL_ENTRY_EXPRESSION
                                                  ADDITIVE_EXPRESSION
                                                    MULTIPLICATIVE_EXPRESSION
                                                      DEFAULT_EXPRESSION
                                                        NEGATION_COMPLEMENT_EXPRESSION
                                                          EXPONENTIATION_EXPRESSION
                                                            INCREMENT_DECREMENT_EXPRESSION
                                                              POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                                PRIMARY
                                                                  BASE
                                                                    BASE_REFERENCE
                                                                      MEMBER_REFERENCE
                                                                        MEMBER_NAME
                                                                          PsiElement(LIDENTIFIER)('print')
                                                                  ARGUMENTS
                                                                    POSITIONAL_ARGUMENTS
                                                                      PsiElement(()('(')
                                                                      POSITIONAL_ARGUMENT
                                                                        FUNCTION_OR_EXPRESSION
                                                                          EXPRESSION
                                                                            ASSIGNMENT_EXPRESSION
                                                                              THEN_ELSE_EXPRESSION
                                                                                DISJUNCTION_EXPRESSION
                                                                                  CONJUNCTION_EXPRESSION
                                                                                    LOGICAL_NEGATION_EXPRESSION
                                                                                      EQUALITY_EXPRESSION
                                                                                        COMPARISON_EXPRESSION
                                                                                          EXISTENCE_EMPTINESS_EXPRESSION
                                                                                            RANGE_INTERVAL_ENTRY_EXPRESSION
                                                                                              ADDITIVE_EXPRESSION
                                                                                                MULTIPLICATIVE_EXPRESSION
                                                                                                  DEFAULT_EXPRESSION
                                                                                                    NEGATION_COMPLEMENT_EXPRESSION
                                                                                                      EXPONENTIATION_EXPRESSION
                                                                                                        INCREMENT_DECREMENT_EXPRESSION
                                                                                                          POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                                                                            PRIMARY
                                                                                                              BASE
                                                                                                                STRING_EXPRESSION
                                                                                                                  MY_STRING_LITERAL
                                                                                                                    PsiElement(STRING_LITERAL)('"www"')
                                                                      PsiElement())(')')
                              PsiElement(;)(';')
                        PsiElement(})('}')
          DECLARATION_OR_STATEMENT
            COMPILER_ANNOTATIONS
              COMPILER_ANNOTATION
                PsiElement(@)('@')
                ANNOTATION_NAME
                  PsiElement(LIDENTIFIER)('error')
            STATEMENT
              CONTROL_STATEMENT
                SWITCH_CASE_ELSE
                  SWITCH_HEADER
                    PsiElement(switch)('switch')
                    PsiElement(()('(')
                    EXPRESSION
                      ASSIGNMENT_EXPRESSION
                        THEN_ELSE_EXPRESSION
                          DISJUNCTION_EXPRESSION
                            CONJUNCTION_EXPRESSION
                              LOGICAL_NEGATION_EXPRESSION
                                EQUALITY_EXPRESSION
                                  COMPARISON_EXPRESSION
                                    EXISTENCE_EMPTINESS_EXPRESSION
                                      RANGE_INTERVAL_ENTRY_EXPRESSION
                                        ADDITIVE_EXPRESSION
                                          MULTIPLICATIVE_EXPRESSION
                                            DEFAULT_EXPRESSION
                                              NEGATION_COMPLEMENT_EXPRESSION
                                                EXPONENTIATION_EXPRESSION
                                                  INCREMENT_DECREMENT_EXPRESSION
                                                    POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                      PRIMARY
                                                        BASE
                                                          BASE_REFERENCE
                                                            MEMBER_REFERENCE
                                                              MEMBER_NAME
                                                                PsiElement(LIDENTIFIER)('x')
                    PsiElement())(')')
                  CASES
                    CASE_BLOCK
                      PsiElement(case)('case')
                      PsiElement(()('(')
                      CASE_ITEM
                        IS_CASE_CONDITION
                          PsiElement(is)('is')
                          TYPE
                            UNION_TYPE
                              INTERSECTION_TYPE
                                ENTRY_TYPE
                                  ABBREVIATED_TYPE
                                    QUALIFIED_TYPE
                                      TYPE_NAME_WITH_ARGUMENTS
                                        TYPE_NAME
                                          PsiElement(UIDENTIFIER)('YYY')
                                        TYPE_ARGUMENTS
                                          PsiElement(<)('<')
                                          TYPE_ARGUMENT
                                            TYPE
                                              UNION_TYPE
                                                INTERSECTION_TYPE
                                                  ENTRY_TYPE
                                                    ABBREVIATED_TYPE
                                                      QUALIFIED_TYPE
                                                        TYPE_NAME_WITH_ARGUMENTS
                                                          TYPE_NAME
                                                            PsiElement(UIDENTIFIER)('Integer')
                                          PsiElement(>)('>')
                      PsiElement())(')')
                      BLOCK
                        PsiElement({)('{')
                        DECLARATION_OR_STATEMENT
                          COMPILER_ANNOTATIONS
                            <empty list>
                          STATEMENT
                            EXPRESSION_OR_SPECIFICATION_STATEMENT
                              EXPRESSION
                                ASSIGNMENT_EXPRESSION
                                  THEN_ELSE_EXPRESSION
                                    DISJUNCTION_EXPRESSION
                                      CONJUNCTION_EXPRESSION
                                        LOGICAL_NEGATION_EXPRESSION
                                          EQUALITY_EXPRESSION
                                            COMPARISON_EXPRESSION
                                              EXISTENCE_EMPTINESS_EXPRESSION
                                                RANGE_INTERVAL_ENTRY_EXPRESSION
                                                  ADDITIVE_EXPRESSION
                                                    MULTIPLICATIVE_EXPRESSION
                                                      DEFAULT_EXPRESSION
                                                        NEGATION_COMPLEMENT_EXPRESSION
                                                          EXPONENTIATION_EXPRESSION
                                                            INCREMENT_DECREMENT_EXPRESSION
                                                              POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                                PRIMARY
                                                                  BASE
                                                                    BASE_REFERENCE
                                                                      MEMBER_REFERENCE
                                                                        MEMBER_NAME
                                                                          PsiElement(LIDENTIFIER)('print')
                                                                  ARGUMENTS
                                                                    POSITIONAL_ARGUMENTS
                                                                      PsiElement(()('(')
                                                                      POSITIONAL_ARGUMENT
                                                                        FUNCTION_OR_EXPRESSION
                                                                          EXPRESSION
                                                                            ASSIGNMENT_EXPRESSION
                                                                              THEN_ELSE_EXPRESSION
                                                                                DISJUNCTION_EXPRESSION
                                                                                  CONJUNCTION_EXPRESSION
                                                                                    LOGICAL_NEGATION_EXPRESSION
                                                                                      EQUALITY_EXPRESSION
                                                                                        COMPARISON_EXPRESSION
                                                                                          EXISTENCE_EMPTINESS_EXPRESSION
                                                                                            RANGE_INTERVAL_ENTRY_EXPRESSION
                                                                                              ADDITIVE_EXPRESSION
                                                                                                MULTIPLICATIVE_EXPRESSION
                                                                                                  DEFAULT_EXPRESSION
                                                                                                    NEGATION_COMPLEMENT_EXPRESSION
                                                                                                      EXPONENTIATION_EXPRESSION
                                                                                                        INCREMENT_DECREMENT_EXPRESSION
                                                                                                          POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                                                                            PRIMARY
                                                                                                              BASE
                                                                                                                STRING_EXPRESSION
                                                                                                                  MY_STRING_LITERAL
                                                                                                                    PsiElement(STRING_LITERAL)('"yyy"')
                                                                      PsiElement())(')')
                              PsiElement(;)(';')
                        PsiElement(})('}')
                    CASE_BLOCK
                      PsiElement(case)('case')
                      PsiElement(()('(')
                      CASE_ITEM
                        IS_CASE_CONDITION
                          PsiElement(is)('is')
                          TYPE
                            UNION_TYPE
                              INTERSECTION_TYPE
                                ENTRY_TYPE
                                  ABBREVIATED_TYPE
                                    QUALIFIED_TYPE
                                      TYPE_NAME_WITH_ARGUMENTS
                                        TYPE_NAME
                                          PsiElement(UIDENTIFIER)('ZZZ')
                                        TYPE_ARGUMENTS
                                          PsiElement(<)('<')
                                          TYPE_ARGUMENT
                                            TYPE
                                              UNION_TYPE
                                                INTERSECTION_TYPE
                                                  ENTRY_TYPE
                                                    ABBREVIATED_TYPE
                                                      QUALIFIED_TYPE
                                                        TYPE_NAME_WITH_ARGUMENTS
                                                          TYPE_NAME
                                                            PsiElement(UIDENTIFIER)('String')
                                          PsiElement(>)('>')
                      PsiElement())(')')
                      BLOCK
                        PsiElement({)('{')
                        DECLARATION_OR_STATEMENT
                          COMPILER_ANNOTATIONS
                            <empty list>
                          STATEMENT
                            EXPRESSION_OR_SPECIFICATION_STATEMENT
                              EXPRESSION
                                ASSIGNMENT_EXPRESSION
                                  THEN_ELSE_EXPRESSION
                                    DISJUNCTION_EXPRESSION
                                      CONJUNCTION_EXPRESSION
                                        LOGICAL_NEGATION_EXPRESSION
                                          EQUALITY_EXPRESSION
                                            COMPARISON_EXPRESSION
                                              EXISTENCE_EMPTINESS_EXPRESSION
                                                RANGE_INTERVAL_ENTRY_EXPRESSION
                                                  ADDITIVE_EXPRESSION
                                                    MULTIPLICATIVE_EXPRESSION
                                                      DEFAULT_EXPRESSION
                                                        NEGATION_COMPLEMENT_EXPRESSION
                                                          EXPONENTIATION_EXPRESSION
                                                            INCREMENT_DECREMENT_EXPRESSION
                                                              POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                                PRIMARY
                                                                  BASE
                                                                    BASE_REFERENCE
                                                                      MEMBER_REFERENCE
                                                                        MEMBER_NAME
                                                                          PsiElement(LIDENTIFIER)('print')
                                                                  ARGUMENTS
                                                                    POSITIONAL_ARGUMENTS
                                                                      PsiElement(()('(')
                                                                      POSITIONAL_ARGUMENT
                                                                        FUNCTION_OR_EXPRESSION
                                                                          EXPRESSION
                                                                            ASSIGNMENT_EXPRESSION
                                                                              THEN_ELSE_EXPRESSION
                                                                                DISJUNCTION_EXPRESSION
                                                                                  CONJUNCTION_EXPRESSION
                                                                                    LOGICAL_NEGATION_EXPRESSION
                                                                                      EQUALITY_EXPRESSION
                                                                                        COMPARISON_EXPRESSION
                                                                                          EXISTENCE_EMPTINESS_EXPRESSION
                                                                                            RANGE_INTERVAL_ENTRY_EXPRESSION
                                                                                              ADDITIVE_EXPRESSION
                                                                                                MULTIPLICATIVE_EXPRESSION
                                                                                                  DEFAULT_EXPRESSION
                                                                                                    NEGATION_COMPLEMENT_EXPRESSION
                                                                                                      EXPONENTIATION_EXPRESSION
                                                                                                        INCREMENT_DECREMENT_EXPRESSION
                                                                                                          POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                                                                            PRIMARY
                                                                                                              BASE
                                                                                                                STRING_EXPRESSION
                                                                                                                  MY_STRING_LITERAL
                                                                                                                    PsiElement(STRING_LITERAL)('"zzz"')
                                                                      PsiElement())(')')
                              PsiElement(;)(';')
                        PsiElement(})('}')
                    CASE_BLOCK
                      PsiElement(case)('case')
                      PsiElement(()('(')
                      CASE_ITEM
                        IS_CASE_CONDITION
                          PsiElement(is)('is')
                          TYPE
                            UNION_TYPE
                              INTERSECTION_TYPE
                                ENTRY_TYPE
                                  ABBREVIATED_TYPE
                                    QUALIFIED_TYPE
                                      TYPE_NAME_WITH_ARGUMENTS
                                        TYPE_NAME
                                          PsiElement(UIDENTIFIER)('WWW')
                      PsiElement())(')')
                      BLOCK
                        PsiElement({)('{')
                        DECLARATION_OR_STATEMENT
                          COMPILER_ANNOTATIONS
                            <empty list>
                          STATEMENT
                            EXPRESSION_OR_SPECIFICATION_STATEMENT
                              EXPRESSION
                                ASSIGNMENT_EXPRESSION
                                  THEN_ELSE_EXPRESSION
                                    DISJUNCTION_EXPRESSION
                                      CONJUNCTION_EXPRESSION
                                        LOGICAL_NEGATION_EXPRESSION
                                          EQUALITY_EXPRESSION
                                            COMPARISON_EXPRESSION
                                              EXISTENCE_EMPTINESS_EXPRESSION
                                                RANGE_INTERVAL_ENTRY_EXPRESSION
                                                  ADDITIVE_EXPRESSION
                                                    MULTIPLICATIVE_EXPRESSION
                                                      DEFAULT_EXPRESSION
                                                        NEGATION_COMPLEMENT_EXPRESSION
                                                          EXPONENTIATION_EXPRESSION
                                                            INCREMENT_DECREMENT_EXPRESSION
                                                              POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                                PRIMARY
                                                                  BASE
                                                                    BASE_REFERENCE
                                                                      MEMBER_REFERENCE
                                                                        MEMBER_NAME
                                                                          PsiElement(LIDENTIFIER)('print')
                                                                  ARGUMENTS
                                                                    POSITIONAL_ARGUMENTS
                                                                      PsiElement(()('(')
                                                                      POSITIONAL_ARGUMENT
                                                                        FUNCTION_OR_EXPRESSION
                                                                          EXPRESSION
                                                                            ASSIGNMENT_EXPRESSION
                                                                              THEN_ELSE_EXPRESSION
                                                                                DISJUNCTION_EXPRESSION
                                                                                  CONJUNCTION_EXPRESSION
                                                                                    LOGICAL_NEGATION_EXPRESSION
                                                                                      EQUALITY_EXPRESSION
                                                                                        COMPARISON_EXPRESSION
                                                                                          EXISTENCE_EMPTINESS_EXPRESSION
                                                                                            RANGE_INTERVAL_ENTRY_EXPRESSION
                                                                                              ADDITIVE_EXPRESSION
                                                                                                MULTIPLICATIVE_EXPRESSION
                                                                                                  DEFAULT_EXPRESSION
                                                                                                    NEGATION_COMPLEMENT_EXPRESSION
                                                                                                      EXPONENTIATION_EXPRESSION
                                                                                                        INCREMENT_DECREMENT_EXPRESSION
                                                                                                          POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                                                                            PRIMARY
                                                                                                              BASE
                                                                                                                STRING_EXPRESSION
                                                                                                                  MY_STRING_LITERAL
                                                                                                                    PsiElement(STRING_LITERAL)('"www"')
                                                                      PsiElement())(')')
                              PsiElement(;)(';')
                        PsiElement(})('}')
          PsiElement(})('}')
    COMPILER_ANNOTATIONS
      <empty list>
    DECLARATION
      ANNOTATIONS
        <empty list>
      TYPED_METHOD_OR_ATTRIBUTE_DECLARATION
        TYPE
          UNION_TYPE
            INTERSECTION_TYPE
              ENTRY_TYPE
                ABBREVIATED_TYPE
                  QUALIFIED_TYPE
                    TYPE_NAME_WITH_ARGUMENTS
                      TYPE_NAME
                        PsiElement(UIDENTIFIER)('Integer')
        MEMBER_NAME_DECLARATION
          MEMBER_NAME
            PsiElement(LIDENTIFIER)('fib')
        PARAMETERS
          PsiElement(()('(')
          PARAMETER_DECLARATION
            COMPILER_ANNOTATIONS
              <empty list>
            ANNOTATIONS
              <empty list>
            PARAMETER
              PARAMETER_TYPE
                TYPE
                  UNION_TYPE
                    INTERSECTION_TYPE
                      ENTRY_TYPE
                        ABBREVIATED_TYPE
                          QUALIFIED_TYPE
                            TYPE_NAME_WITH_ARGUMENTS
                              TYPE_NAME
                                PsiElement(UIDENTIFIER)('Integer')
              MEMBER_NAME
                PsiElement(LIDENTIFIER)('n')
          PsiElement())(')')
        BLOCK
          PsiElement({)('{')
          DECLARATION_OR_STATEMENT
            COMPILER_ANNOTATIONS
              <empty list>
            STATEMENT
              CONTROL_STATEMENT
                SWITCH_CASE_ELSE
                  SWITCH_HEADER
                    PsiElement(switch)('switch')
                    PsiElement(()('(')
                    EXPRESSION
                      ASSIGNMENT_EXPRESSION
                        THEN_ELSE_EXPRESSION
                          DISJUNCTION_EXPRESSION
                            CONJUNCTION_EXPRESSION
                              LOGICAL_NEGATION_EXPRESSION
                                EQUALITY_EXPRESSION
                                  COMPARISON_EXPRESSION
                                    EXISTENCE_EMPTINESS_EXPRESSION
                                      RANGE_INTERVAL_ENTRY_EXPRESSION
                                        ADDITIVE_EXPRESSION
                                          MULTIPLICATIVE_EXPRESSION
                                            DEFAULT_EXPRESSION
                                              NEGATION_COMPLEMENT_EXPRESSION
                                                EXPONENTIATION_EXPRESSION
                                                  INCREMENT_DECREMENT_EXPRESSION
                                                    POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                      PRIMARY
                                                        BASE
                                                          BASE_REFERENCE
                                                            MEMBER_REFERENCE
                                                              MEMBER_NAME
                                                                PsiElement(LIDENTIFIER)('n')
                                    COMPARISON_OPERATOR
                                      PsiElement(<=>)('<=>')
                                    EXISTENCE_EMPTINESS_EXPRESSION
                                      RANGE_INTERVAL_ENTRY_EXPRESSION
                                        ADDITIVE_EXPRESSION
                                          MULTIPLICATIVE_EXPRESSION
                                            DEFAULT_EXPRESSION
                                              NEGATION_COMPLEMENT_EXPRESSION
                                                EXPONENTIATION_EXPRESSION
                                                  INCREMENT_DECREMENT_EXPRESSION
                                                    POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                      PRIMARY
                                                        BASE
                                                          NONSTRING_LITERAL
                                                            PsiElement(NATURAL_LITERAL)('0')
                    PsiElement())(')')
                  CASES
                    CASE_BLOCK
                      PsiElement(case)('case')
                      PsiElement(()('(')
                      CASE_ITEM
                        MATCH_CASE_CONDITION
                          EXPRESSIONS
                            EXPRESSION
                              ASSIGNMENT_EXPRESSION
                                THEN_ELSE_EXPRESSION
                                  DISJUNCTION_EXPRESSION
                                    CONJUNCTION_EXPRESSION
                                      LOGICAL_NEGATION_EXPRESSION
                                        EQUALITY_EXPRESSION
                                          COMPARISON_EXPRESSION
                                            EXISTENCE_EMPTINESS_EXPRESSION
                                              RANGE_INTERVAL_ENTRY_EXPRESSION
                                                ADDITIVE_EXPRESSION
                                                  MULTIPLICATIVE_EXPRESSION
                                                    DEFAULT_EXPRESSION
                                                      NEGATION_COMPLEMENT_EXPRESSION
                                                        EXPONENTIATION_EXPRESSION
                                                          INCREMENT_DECREMENT_EXPRESSION
                                                            POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                              PRIMARY
                                                                BASE
                                                                  BASE_REFERENCE
                                                                    MEMBER_REFERENCE
                                                                      MEMBER_NAME
                                                                        PsiElement(LIDENTIFIER)('equal')
                      PsiElement())(')')
                      BLOCK
                        PsiElement({)('{')
                        DECLARATION_OR_STATEMENT
                          COMPILER_ANNOTATIONS
                            <empty list>
                          STATEMENT
                            DIRECTIVE_STATEMENT
                              DIRECTIVE
                                RETURN_DIRECTIVE
                                  PsiElement(return)('return')
                                  FUNCTION_OR_EXPRESSION
                                    EXPRESSION
                                      ASSIGNMENT_EXPRESSION
                                        THEN_ELSE_EXPRESSION
                                          DISJUNCTION_EXPRESSION
                                            CONJUNCTION_EXPRESSION
                                              LOGICAL_NEGATION_EXPRESSION
                                                EQUALITY_EXPRESSION
                                                  COMPARISON_EXPRESSION
                                                    EXISTENCE_EMPTINESS_EXPRESSION
                                                      RANGE_INTERVAL_ENTRY_EXPRESSION
                                                        ADDITIVE_EXPRESSION
                                                          MULTIPLICATIVE_EXPRESSION
                                                            DEFAULT_EXPRESSION
                                                              NEGATION_COMPLEMENT_EXPRESSION
                                                                EXPONENTIATION_EXPRESSION
                                                                  INCREMENT_DECREMENT_EXPRESSION
                                                                    POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                                      PRIMARY
                                                                        BASE
                                                                          NONSTRING_LITERAL
                                                                            PsiElement(NATURAL_LITERAL)('1')
                              PsiElement(;)(';')
                        PsiElement(})('}')
                    CASE_BLOCK
                      PsiElement(case)('case')
                      PsiElement(()('(')
                      CASE_ITEM
                        MATCH_CASE_CONDITION
                          EXPRESSIONS
                            EXPRESSION
                              ASSIGNMENT_EXPRESSION
                                THEN_ELSE_EXPRESSION
                                  DISJUNCTION_EXPRESSION
                                    CONJUNCTION_EXPRESSION
                                      LOGICAL_NEGATION_EXPRESSION
                                        EQUALITY_EXPRESSION
                                          COMPARISON_EXPRESSION
                                            EXISTENCE_EMPTINESS_EXPRESSION
                                              RANGE_INTERVAL_ENTRY_EXPRESSION
                                                ADDITIVE_EXPRESSION
                                                  MULTIPLICATIVE_EXPRESSION
                                                    DEFAULT_EXPRESSION
                                                      NEGATION_COMPLEMENT_EXPRESSION
                                                        EXPONENTIATION_EXPRESSION
                                                          INCREMENT_DECREMENT_EXPRESSION
                                                            POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                              PRIMARY
                                                                BASE
                                                                  BASE_REFERENCE
                                                                    MEMBER_REFERENCE
                                                                      MEMBER_NAME
                                                                        PsiElement(LIDENTIFIER)('larger')
                      PsiElement())(')')
                      BLOCK
                        PsiElement({)('{')
                        DECLARATION_OR_STATEMENT
                          COMPILER_ANNOTATIONS
                            <empty list>
                          STATEMENT
                            DIRECTIVE_STATEMENT
                              DIRECTIVE
                                RETURN_DIRECTIVE
                                  PsiElement(return)('return')
                                  FUNCTION_OR_EXPRESSION
                                    EXPRESSION
                                      ASSIGNMENT_EXPRESSION
                                        THEN_ELSE_EXPRESSION
                                          DISJUNCTION_EXPRESSION
                                            CONJUNCTION_EXPRESSION
                                              LOGICAL_NEGATION_EXPRESSION
                                                EQUALITY_EXPRESSION
                                                  COMPARISON_EXPRESSION
                                                    EXISTENCE_EMPTINESS_EXPRESSION
                                                      RANGE_INTERVAL_ENTRY_EXPRESSION
                                                        ADDITIVE_EXPRESSION
                                                          MULTIPLICATIVE_EXPRESSION
                                                            DEFAULT_EXPRESSION
                                                              NEGATION_COMPLEMENT_EXPRESSION
                                                                EXPONENTIATION_EXPRESSION
                                                                  INCREMENT_DECREMENT_EXPRESSION
                                                                    POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                                      PRIMARY
                                                                        BASE
                                                                          BASE_REFERENCE
                                                                            MEMBER_REFERENCE
                                                                              MEMBER_NAME
                                                                                PsiElement(LIDENTIFIER)('n')
                                                            MULTIPLICATIVE_OPERATOR
                                                              PsiElement(*)('*')
                                                            DEFAULT_EXPRESSION
                                                              NEGATION_COMPLEMENT_EXPRESSION
                                                                EXPONENTIATION_EXPRESSION
                                                                  INCREMENT_DECREMENT_EXPRESSION
                                                                    POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                                      PRIMARY
                                                                        BASE
                                                                          BASE_REFERENCE
                                                                            MEMBER_REFERENCE
                                                                              MEMBER_NAME
                                                                                PsiElement(LIDENTIFIER)('fib')
                                                                        ARGUMENTS
                                                                          POSITIONAL_ARGUMENTS
                                                                            PsiElement(()('(')
                                                                            POSITIONAL_ARGUMENT
                                                                              FUNCTION_OR_EXPRESSION
                                                                                EXPRESSION
                                                                                  ASSIGNMENT_EXPRESSION
                                                                                    THEN_ELSE_EXPRESSION
                                                                                      DISJUNCTION_EXPRESSION
                                                                                        CONJUNCTION_EXPRESSION
                                                                                          LOGICAL_NEGATION_EXPRESSION
                                                                                            EQUALITY_EXPRESSION
                                                                                              COMPARISON_EXPRESSION
                                                                                                EXISTENCE_EMPTINESS_EXPRESSION
                                                                                                  RANGE_INTERVAL_ENTRY_EXPRESSION
                                                                                                    ADDITIVE_EXPRESSION
                                                                                                      MULTIPLICATIVE_EXPRESSION
                                                                                                        DEFAULT_EXPRESSION
                                                                                                          NEGATION_COMPLEMENT_EXPRESSION
                                                                                                            EXPONENTIATION_EXPRESSION
                                                                                                              INCREMENT_DECREMENT_EXPRESSION
                                                                                                                POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                                                                                  PRIMARY
                                                                                                                    BASE
                                                                                                                      BASE_REFERENCE
                                                                                                                        MEMBER_REFERENCE
                                                                                                                          MEMBER_NAME
                                                                                                                            PsiElement(LIDENTIFIER)('n')
                                                                                                      ADDITIVE_OPERATOR
                                                                                                        PsiElement(-)('-')
                                                                                                      MULTIPLICATIVE_EXPRESSION
                                                                                                        DEFAULT_EXPRESSION
                                                                                                          NEGATION_COMPLEMENT_EXPRESSION
                                                                                                            EXPONENTIATION_EXPRESSION
                                                                                                              INCREMENT_DECREMENT_EXPRESSION
                                                                                                                POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                                                                                  PRIMARY
                                                                                                                    BASE
                                                                                                                      NONSTRING_LITERAL
                                                                                                                        PsiElement(NATURAL_LITERAL)('1')
                                                                            PsiElement())(')')
                              PsiElement(;)(';')
                        PsiElement(})('}')
                    CASE_BLOCK
                      PsiElement(case)('case')
                      PsiElement(()('(')
                      CASE_ITEM
                        MATCH_CASE_CONDITION
                          EXPRESSIONS
                            EXPRESSION
                              ASSIGNMENT_EXPRESSION
                                THEN_ELSE_EXPRESSION
                                  DISJUNCTION_EXPRESSION
                                    CONJUNCTION_EXPRESSION
                                      LOGICAL_NEGATION_EXPRESSION
                                        EQUALITY_EXPRESSION
                                          COMPARISON_EXPRESSION
                                            EXISTENCE_EMPTINESS_EXPRESSION
                                              RANGE_INTERVAL_ENTRY_EXPRESSION
                                                ADDITIVE_EXPRESSION
                                                  MULTIPLICATIVE_EXPRESSION
                                                    DEFAULT_EXPRESSION
                                                      NEGATION_COMPLEMENT_EXPRESSION
                                                        EXPONENTIATION_EXPRESSION
                                                          INCREMENT_DECREMENT_EXPRESSION
                                                            POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                              PRIMARY
                                                                BASE
                                                                  BASE_REFERENCE
                                                                    MEMBER_REFERENCE
                                                                      MEMBER_NAME
                                                                        PsiElement(LIDENTIFIER)('smaller')
                      PsiElement())(')')
                      BLOCK
                        PsiElement({)('{')
                        DECLARATION_OR_STATEMENT
                          COMPILER_ANNOTATIONS
                            <empty list>
                          STATEMENT
                            DIRECTIVE_STATEMENT
                              DIRECTIVE
                                THROW_DIRECTIVE
                                  PsiElement(throw)('throw')
                              PsiElement(;)(';')
                        PsiElement(})('}')
          PsiElement(})('}')
    COMPILER_ANNOTATIONS
      <empty list>
    DECLARATION
      ANNOTATIONS
        <empty list>
      INTERFACE_DECLARATION
        PsiElement(interface)('interface')
        TYPE_NAME_DECLARATION
          TYPE_NAME
            PsiElement(UIDENTIFIER)('Association')
        CASE_TYPES
          PsiElement(of)('of')
          CASE_TYPE
            QUALIFIED_TYPE
              TYPE_NAME_WITH_ARGUMENTS
                TYPE_NAME
                  PsiElement(UIDENTIFIER)('OneToOne')
          PsiElement(|)('|')
          CASE_TYPE
            QUALIFIED_TYPE
              TYPE_NAME_WITH_ARGUMENTS
                TYPE_NAME
                  PsiElement(UIDENTIFIER)('OneToMany')
        INTERFACE_BODY
          PsiElement({)('{')
          PsiElement(})('}')
    COMPILER_ANNOTATIONS
      <empty list>
    DECLARATION
      ANNOTATIONS
        <empty list>
      INTERFACE_DECLARATION
        PsiElement(interface)('interface')
        TYPE_NAME_DECLARATION
          TYPE_NAME
            PsiElement(UIDENTIFIER)('OneTo')
        SATISFIED_TYPES
          PsiElement(satisfies)('satisfies')
          QUALIFIED_TYPE
            TYPE_NAME_WITH_ARGUMENTS
              TYPE_NAME
                PsiElement(UIDENTIFIER)('Association')
        INTERFACE_BODY
          PsiElement({)('{')
          PsiElement(})('}')
    COMPILER_ANNOTATIONS
      <empty list>
    DECLARATION
      ANNOTATIONS
        <empty list>
      CLASS_DECLARATION
        PsiElement(class)('class')
        TYPE_NAME_DECLARATION
          TYPE_NAME
            PsiElement(UIDENTIFIER)('OneToOne')
        PARAMETERS
          PsiElement(()('(')
          PsiElement())(')')
        SATISFIED_TYPES
          PsiElement(satisfies)('satisfies')
          QUALIFIED_TYPE
            TYPE_NAME_WITH_ARGUMENTS
              TYPE_NAME
                PsiElement(UIDENTIFIER)('OneTo')
        CLASS_BODY
          PsiElement({)('{')
          PsiElement(})('}')
    COMPILER_ANNOTATIONS
      <empty list>
    DECLARATION
      ANNOTATIONS
        <empty list>
      CLASS_DECLARATION
        PsiElement(class)('class')
        TYPE_NAME_DECLARATION
          TYPE_NAME
            PsiElement(UIDENTIFIER)('OneToMany')
        PARAMETERS
          PsiElement(()('(')
          PsiElement())(')')
        SATISFIED_TYPES
          PsiElement(satisfies)('satisfies')
          QUALIFIED_TYPE
            TYPE_NAME_WITH_ARGUMENTS
              TYPE_NAME
                PsiElement(UIDENTIFIER)('OneTo')
        CLASS_BODY
          PsiElement({)('{')
          PsiElement(})('}')
    COMPILER_ANNOTATIONS
      COMPILER_ANNOTATION
        PsiElement(@)('@')
        ANNOTATION_NAME
          PsiElement(LIDENTIFIER)('error')
    DECLARATION
      ANNOTATIONS
        <empty list>
      CLASS_DECLARATION
        PsiElement(class)('class')
        TYPE_NAME_DECLARATION
          TYPE_NAME
            PsiElement(UIDENTIFIER)('Broken')
        PARAMETERS
          PsiElement(()('(')
          PsiElement())(')')
        SATISFIED_TYPES
          PsiElement(satisfies)('satisfies')
          QUALIFIED_TYPE
            TYPE_NAME_WITH_ARGUMENTS
              TYPE_NAME
                PsiElement(UIDENTIFIER)('Association')
        CLASS_BODY
          PsiElement({)('{')
          PsiElement(})('}')
    COMPILER_ANNOTATIONS
      <empty list>
    DECLARATION
      ANNOTATIONS
        <empty list>
      INTERFACE_DECLARATION
        PsiElement(interface)('interface')
        TYPE_NAME_DECLARATION
          TYPE_NAME
            PsiElement(UIDENTIFIER)('Anything')
        CASE_TYPES
          PsiElement(of)('of')
          CASE_TYPE
            QUALIFIED_TYPE
              TYPE_NAME_WITH_ARGUMENTS
                TYPE_NAME
                  PsiElement(UIDENTIFIER)('SomethingUsual')
          PsiElement(|)('|')
          CASE_TYPE
            QUALIFIED_TYPE
              TYPE_NAME_WITH_ARGUMENTS
                TYPE_NAME
                  PsiElement(UIDENTIFIER)('SomethingElse')
        INTERFACE_BODY
          PsiElement({)('{')
          PsiElement(})('}')
    COMPILER_ANNOTATIONS
      <empty list>
    DECLARATION
      ANNOTATIONS
        <empty list>
      INTERFACE_DECLARATION
        PsiElement(interface)('interface')
        TYPE_NAME_DECLARATION
          TYPE_NAME
            PsiElement(UIDENTIFIER)('SomethingUsual')
        SATISFIED_TYPES
          PsiElement(satisfies)('satisfies')
          QUALIFIED_TYPE
            TYPE_NAME_WITH_ARGUMENTS
              TYPE_NAME
                PsiElement(UIDENTIFIER)('Anything')
        INTERFACE_BODY
          PsiElement({)('{')
          DECLARATION_OR_STATEMENT
            COMPILER_ANNOTATIONS
              <empty list>
            ANNOTATION
              ANNOTATION_NAME
                PsiElement(LIDENTIFIER)('shared')
              ANNOTATION_ARGUMENTS
                LITERAL_ARGUMENTS
                  <empty list>
            ANNOTATION
              ANNOTATION_NAME
                PsiElement(LIDENTIFIER)('formal')
              ANNOTATION_ARGUMENTS
                LITERAL_ARGUMENTS
                  <empty list>
            DECLARATION
              ANNOTATIONS
                <empty list>
              TYPED_METHOD_OR_ATTRIBUTE_DECLARATION
                TYPE
                  UNION_TYPE
                    INTERSECTION_TYPE
                      ENTRY_TYPE
                        ABBREVIATED_TYPE
                          QUALIFIED_TYPE
                            TYPE_NAME_WITH_ARGUMENTS
                              TYPE_NAME
                                PsiElement(UIDENTIFIER)('String')
                MEMBER_NAME_DECLARATION
                  MEMBER_NAME
                    PsiElement(LIDENTIFIER)('something')
                PsiElement(;)(';')
          PsiElement(})('}')
    COMPILER_ANNOTATIONS
      <empty list>
    DECLARATION
      ANNOTATIONS
        <empty list>
      INTERFACE_DECLARATION
        PsiElement(interface)('interface')
        TYPE_NAME_DECLARATION
          TYPE_NAME
            PsiElement(UIDENTIFIER)('SomethingElse')
        SATISFIED_TYPES
          PsiElement(satisfies)('satisfies')
          QUALIFIED_TYPE
            TYPE_NAME_WITH_ARGUMENTS
              TYPE_NAME
                PsiElement(UIDENTIFIER)('Anything')
        INTERFACE_BODY
          PsiElement({)('{')
          DECLARATION_OR_STATEMENT
            COMPILER_ANNOTATIONS
              <empty list>
            ANNOTATION
              ANNOTATION_NAME
                PsiElement(LIDENTIFIER)('shared')
              ANNOTATION_ARGUMENTS
                LITERAL_ARGUMENTS
                  <empty list>
            ANNOTATION
              ANNOTATION_NAME
                PsiElement(LIDENTIFIER)('formal')
              ANNOTATION_ARGUMENTS
                LITERAL_ARGUMENTS
                  <empty list>
            DECLARATION
              ANNOTATIONS
                <empty list>
              TYPED_METHOD_OR_ATTRIBUTE_DECLARATION
                TYPE
                  UNION_TYPE
                    INTERSECTION_TYPE
                      ENTRY_TYPE
                        ABBREVIATED_TYPE
                          QUALIFIED_TYPE
                            TYPE_NAME_WITH_ARGUMENTS
                              TYPE_NAME
                                PsiElement(UIDENTIFIER)('Object')
                MEMBER_NAME_DECLARATION
                  MEMBER_NAME
                    PsiElement(LIDENTIFIER)('somethingElse')
                PsiElement(;)(';')
          PsiElement(})('}')
    COMPILER_ANNOTATIONS
      <empty list>
    DECLARATION
      ANNOTATIONS
        <empty list>
      VOID_OR_INFERRED_METHOD_DECLARATION
        PsiElement(void)('void')
        MEMBER_NAME_DECLARATION
          MEMBER_NAME
            PsiElement(LIDENTIFIER)('switchAnything')
        PARAMETERS
          PsiElement(()('(')
          PARAMETER_DECLARATION
            COMPILER_ANNOTATIONS
              <empty list>
            ANNOTATIONS
              <empty list>
            PARAMETER
              PARAMETER_TYPE
                TYPE
                  UNION_TYPE
                    INTERSECTION_TYPE
                      ENTRY_TYPE
                        ABBREVIATED_TYPE
                          QUALIFIED_TYPE
                            TYPE_NAME_WITH_ARGUMENTS
                              TYPE_NAME
                                PsiElement(UIDENTIFIER)('Anything')
              MEMBER_NAME
                PsiElement(LIDENTIFIER)('any')
          PsiElement())(')')
        BLOCK
          PsiElement({)('{')
          DECLARATION_OR_STATEMENT
            COMPILER_ANNOTATIONS
              <empty list>
            STATEMENT
              CONTROL_STATEMENT
                SWITCH_CASE_ELSE
                  SWITCH_HEADER
                    PsiElement(switch)('switch')
                    PsiElement(()('(')
                    EXPRESSION
                      ASSIGNMENT_EXPRESSION
                        THEN_ELSE_EXPRESSION
                          DISJUNCTION_EXPRESSION
                            CONJUNCTION_EXPRESSION
                              LOGICAL_NEGATION_EXPRESSION
                                EQUALITY_EXPRESSION
                                  COMPARISON_EXPRESSION
                                    EXISTENCE_EMPTINESS_EXPRESSION
                                      RANGE_INTERVAL_ENTRY_EXPRESSION
                                        ADDITIVE_EXPRESSION
                                          MULTIPLICATIVE_EXPRESSION
                                            DEFAULT_EXPRESSION
                                              NEGATION_COMPLEMENT_EXPRESSION
                                                EXPONENTIATION_EXPRESSION
                                                  INCREMENT_DECREMENT_EXPRESSION
                                                    POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                      PRIMARY
                                                        BASE
                                                          BASE_REFERENCE
                                                            MEMBER_REFERENCE
                                                              MEMBER_NAME
                                                                PsiElement(LIDENTIFIER)('any')
                    PsiElement())(')')
                  CASES
                    CASE_BLOCK
                      PsiElement(case)('case')
                      PsiElement(()('(')
                      CASE_ITEM
                        IS_CASE_CONDITION
                          PsiElement(is)('is')
                          TYPE
                            UNION_TYPE
                              INTERSECTION_TYPE
                                ENTRY_TYPE
                                  ABBREVIATED_TYPE
                                    QUALIFIED_TYPE
                                      TYPE_NAME_WITH_ARGUMENTS
                                        TYPE_NAME
                                          PsiElement(UIDENTIFIER)('SomethingUsual')
                      PsiElement())(')')
                      BLOCK
                        PsiElement({)('{')
                        DECLARATION_OR_STATEMENT
                          COMPILER_ANNOTATIONS
                            <empty list>
                          STATEMENT
                            EXPRESSION_OR_SPECIFICATION_STATEMENT
                              EXPRESSION
                                ASSIGNMENT_EXPRESSION
                                  THEN_ELSE_EXPRESSION
                                    DISJUNCTION_EXPRESSION
                                      CONJUNCTION_EXPRESSION
                                        LOGICAL_NEGATION_EXPRESSION
                                          EQUALITY_EXPRESSION
                                            COMPARISON_EXPRESSION
                                              EXISTENCE_EMPTINESS_EXPRESSION
                                                RANGE_INTERVAL_ENTRY_EXPRESSION
                                                  ADDITIVE_EXPRESSION
                                                    MULTIPLICATIVE_EXPRESSION
                                                      DEFAULT_EXPRESSION
                                                        NEGATION_COMPLEMENT_EXPRESSION
                                                          EXPONENTIATION_EXPRESSION
                                                            INCREMENT_DECREMENT_EXPRESSION
                                                              POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                                PRIMARY
                                                                  BASE
                                                                    BASE_REFERENCE
                                                                      MEMBER_REFERENCE
                                                                        MEMBER_NAME
                                                                          PsiElement(LIDENTIFIER)('print')
                                                                  ARGUMENTS
                                                                    POSITIONAL_ARGUMENTS
                                                                      PsiElement(()('(')
                                                                      POSITIONAL_ARGUMENT
                                                                        FUNCTION_OR_EXPRESSION
                                                                          EXPRESSION
                                                                            ASSIGNMENT_EXPRESSION
                                                                              THEN_ELSE_EXPRESSION
                                                                                DISJUNCTION_EXPRESSION
                                                                                  CONJUNCTION_EXPRESSION
                                                                                    LOGICAL_NEGATION_EXPRESSION
                                                                                      EQUALITY_EXPRESSION
                                                                                        COMPARISON_EXPRESSION
                                                                                          EXISTENCE_EMPTINESS_EXPRESSION
                                                                                            RANGE_INTERVAL_ENTRY_EXPRESSION
                                                                                              ADDITIVE_EXPRESSION
                                                                                                MULTIPLICATIVE_EXPRESSION
                                                                                                  DEFAULT_EXPRESSION
                                                                                                    NEGATION_COMPLEMENT_EXPRESSION
                                                                                                      EXPONENTIATION_EXPRESSION
                                                                                                        INCREMENT_DECREMENT_EXPRESSION
                                                                                                          POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                                                                            PRIMARY
                                                                                                              BASE
                                                                                                                STRING_EXPRESSION
                                                                                                                  MY_STRING_LITERAL
                                                                                                                    PsiElement(STRING_LITERAL)('"something"')
                                                                      PsiElement())(')')
                              PsiElement(;)(';')
                        DECLARATION_OR_STATEMENT
                          COMPILER_ANNOTATIONS
                            <empty list>
                          STATEMENT
                            EXPRESSION_OR_SPECIFICATION_STATEMENT
                              EXPRESSION
                                ASSIGNMENT_EXPRESSION
                                  THEN_ELSE_EXPRESSION
                                    DISJUNCTION_EXPRESSION
                                      CONJUNCTION_EXPRESSION
                                        LOGICAL_NEGATION_EXPRESSION
                                          EQUALITY_EXPRESSION
                                            COMPARISON_EXPRESSION
                                              EXISTENCE_EMPTINESS_EXPRESSION
                                                RANGE_INTERVAL_ENTRY_EXPRESSION
                                                  ADDITIVE_EXPRESSION
                                                    MULTIPLICATIVE_EXPRESSION
                                                      DEFAULT_EXPRESSION
                                                        NEGATION_COMPLEMENT_EXPRESSION
                                                          EXPONENTIATION_EXPRESSION
                                                            INCREMENT_DECREMENT_EXPRESSION
                                                              POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                                PRIMARY
                                                                  BASE
                                                                    BASE_REFERENCE
                                                                      MEMBER_REFERENCE
                                                                        MEMBER_NAME
                                                                          PsiElement(LIDENTIFIER)('print')
                                                                  ARGUMENTS
                                                                    POSITIONAL_ARGUMENTS
                                                                      PsiElement(()('(')
                                                                      POSITIONAL_ARGUMENT
                                                                        FUNCTION_OR_EXPRESSION
                                                                          EXPRESSION
                                                                            ASSIGNMENT_EXPRESSION
                                                                              THEN_ELSE_EXPRESSION
                                                                                DISJUNCTION_EXPRESSION
                                                                                  CONJUNCTION_EXPRESSION
                                                                                    LOGICAL_NEGATION_EXPRESSION
                                                                                      EQUALITY_EXPRESSION
                                                                                        COMPARISON_EXPRESSION
                                                                                          EXISTENCE_EMPTINESS_EXPRESSION
                                                                                            RANGE_INTERVAL_ENTRY_EXPRESSION
                                                                                              ADDITIVE_EXPRESSION
                                                                                                MULTIPLICATIVE_EXPRESSION
                                                                                                  DEFAULT_EXPRESSION
                                                                                                    NEGATION_COMPLEMENT_EXPRESSION
                                                                                                      EXPONENTIATION_EXPRESSION
                                                                                                        INCREMENT_DECREMENT_EXPRESSION
                                                                                                          POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                                                                            PRIMARY
                                                                                                              BASE
                                                                                                                BASE_REFERENCE
                                                                                                                  MEMBER_REFERENCE
                                                                                                                    MEMBER_NAME
                                                                                                                      PsiElement(LIDENTIFIER)('any')
                                                                                                              QUALIFIED_REFERENCE
                                                                                                                MEMBER_SELECTION_OPERATOR
                                                                                                                  PsiElement(.)('.')
                                                                                                                MEMBER_REFERENCE
                                                                                                                  MEMBER_NAME
                                                                                                                    PsiElement(LIDENTIFIER)('something')
                                                                      PsiElement())(')')
                              PsiElement(;)(';')
                        PsiElement(})('}')
                    CASE_BLOCK
                      PsiElement(case)('case')
                      PsiElement(()('(')
                      CASE_ITEM
                        IS_CASE_CONDITION
                          PsiElement(is)('is')
                          TYPE
                            UNION_TYPE
                              INTERSECTION_TYPE
                                ENTRY_TYPE
                                  ABBREVIATED_TYPE
                                    QUALIFIED_TYPE
                                      TYPE_NAME_WITH_ARGUMENTS
                                        TYPE_NAME
                                          PsiElement(UIDENTIFIER)('SomethingElse')
                      PsiElement())(')')
                      BLOCK
                        PsiElement({)('{')
                        DECLARATION_OR_STATEMENT
                          COMPILER_ANNOTATIONS
                            <empty list>
                          STATEMENT
                            EXPRESSION_OR_SPECIFICATION_STATEMENT
                              EXPRESSION
                                ASSIGNMENT_EXPRESSION
                                  THEN_ELSE_EXPRESSION
                                    DISJUNCTION_EXPRESSION
                                      CONJUNCTION_EXPRESSION
                                        LOGICAL_NEGATION_EXPRESSION
                                          EQUALITY_EXPRESSION
                                            COMPARISON_EXPRESSION
                                              EXISTENCE_EMPTINESS_EXPRESSION
                                                RANGE_INTERVAL_ENTRY_EXPRESSION
                                                  ADDITIVE_EXPRESSION
                                                    MULTIPLICATIVE_EXPRESSION
                                                      DEFAULT_EXPRESSION
                                                        NEGATION_COMPLEMENT_EXPRESSION
                                                          EXPONENTIATION_EXPRESSION
                                                            INCREMENT_DECREMENT_EXPRESSION
                                                              POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                                PRIMARY
                                                                  BASE
                                                                    BASE_REFERENCE
                                                                      MEMBER_REFERENCE
                                                                        MEMBER_NAME
                                                                          PsiElement(LIDENTIFIER)('print')
                                                                  ARGUMENTS
                                                                    POSITIONAL_ARGUMENTS
                                                                      PsiElement(()('(')
                                                                      POSITIONAL_ARGUMENT
                                                                        FUNCTION_OR_EXPRESSION
                                                                          EXPRESSION
                                                                            ASSIGNMENT_EXPRESSION
                                                                              THEN_ELSE_EXPRESSION
                                                                                DISJUNCTION_EXPRESSION
                                                                                  CONJUNCTION_EXPRESSION
                                                                                    LOGICAL_NEGATION_EXPRESSION
                                                                                      EQUALITY_EXPRESSION
                                                                                        COMPARISON_EXPRESSION
                                                                                          EXISTENCE_EMPTINESS_EXPRESSION
                                                                                            RANGE_INTERVAL_ENTRY_EXPRESSION
                                                                                              ADDITIVE_EXPRESSION
                                                                                                MULTIPLICATIVE_EXPRESSION
                                                                                                  DEFAULT_EXPRESSION
                                                                                                    NEGATION_COMPLEMENT_EXPRESSION
                                                                                                      EXPONENTIATION_EXPRESSION
                                                                                                        INCREMENT_DECREMENT_EXPRESSION
                                                                                                          POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                                                                            PRIMARY
                                                                                                              BASE
                                                                                                                STRING_EXPRESSION
                                                                                                                  MY_STRING_LITERAL
                                                                                                                    PsiElement(STRING_LITERAL)('"something else"')
                                                                      PsiElement())(')')
                              PsiElement(;)(';')
                        DECLARATION_OR_STATEMENT
                          COMPILER_ANNOTATIONS
                            <empty list>
                          STATEMENT
                            EXPRESSION_OR_SPECIFICATION_STATEMENT
                              EXPRESSION
                                ASSIGNMENT_EXPRESSION
                                  THEN_ELSE_EXPRESSION
                                    DISJUNCTION_EXPRESSION
                                      CONJUNCTION_EXPRESSION
                                        LOGICAL_NEGATION_EXPRESSION
                                          EQUALITY_EXPRESSION
                                            COMPARISON_EXPRESSION
                                              EXISTENCE_EMPTINESS_EXPRESSION
                                                RANGE_INTERVAL_ENTRY_EXPRESSION
                                                  ADDITIVE_EXPRESSION
                                                    MULTIPLICATIVE_EXPRESSION
                                                      DEFAULT_EXPRESSION
                                                        NEGATION_COMPLEMENT_EXPRESSION
                                                          EXPONENTIATION_EXPRESSION
                                                            INCREMENT_DECREMENT_EXPRESSION
                                                              POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                                PRIMARY
                                                                  BASE
                                                                    BASE_REFERENCE
                                                                      MEMBER_REFERENCE
                                                                        MEMBER_NAME
                                                                          PsiElement(LIDENTIFIER)('print')
                                                                  ARGUMENTS
                                                                    POSITIONAL_ARGUMENTS
                                                                      PsiElement(()('(')
                                                                      POSITIONAL_ARGUMENT
                                                                        FUNCTION_OR_EXPRESSION
                                                                          EXPRESSION
                                                                            ASSIGNMENT_EXPRESSION
                                                                              THEN_ELSE_EXPRESSION
                                                                                DISJUNCTION_EXPRESSION
                                                                                  CONJUNCTION_EXPRESSION
                                                                                    LOGICAL_NEGATION_EXPRESSION
                                                                                      EQUALITY_EXPRESSION
                                                                                        COMPARISON_EXPRESSION
                                                                                          EXISTENCE_EMPTINESS_EXPRESSION
                                                                                            RANGE_INTERVAL_ENTRY_EXPRESSION
                                                                                              ADDITIVE_EXPRESSION
                                                                                                MULTIPLICATIVE_EXPRESSION
                                                                                                  DEFAULT_EXPRESSION
                                                                                                    NEGATION_COMPLEMENT_EXPRESSION
                                                                                                      EXPONENTIATION_EXPRESSION
                                                                                                        INCREMENT_DECREMENT_EXPRESSION
                                                                                                          POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                                                                            PRIMARY
                                                                                                              BASE
                                                                                                                BASE_REFERENCE
                                                                                                                  MEMBER_REFERENCE
                                                                                                                    MEMBER_NAME
                                                                                                                      PsiElement(LIDENTIFIER)('any')
                                                                                                              QUALIFIED_REFERENCE
                                                                                                                MEMBER_SELECTION_OPERATOR
                                                                                                                  PsiElement(.)('.')
                                                                                                                MEMBER_REFERENCE
                                                                                                                  MEMBER_NAME
                                                                                                                    PsiElement(LIDENTIFIER)('somethingElse')
                                                                      PsiElement())(')')
                              PsiElement(;)(';')
                        PsiElement(})('}')
          PsiElement(})('}')
    COMPILER_ANNOTATIONS
      <empty list>
    DECLARATION
      ANNOTATIONS
        <empty list>
      INTERFACE_DECLARATION
        PsiElement(interface)('interface')
        TYPE_NAME_DECLARATION
          TYPE_NAME
            PsiElement(UIDENTIFIER)('Interface')
        CASE_TYPES
          PsiElement(of)('of')
          CASE_TYPE
            QUALIFIED_TYPE
              TYPE_NAME_WITH_ARGUMENTS
                TYPE_NAME
                  PsiElement(UIDENTIFIER)('Class1')
          PsiElement(|)('|')
          CASE_TYPE
            QUALIFIED_TYPE
              TYPE_NAME_WITH_ARGUMENTS
                TYPE_NAME
                  PsiElement(UIDENTIFIER)('Class2')
        INTERFACE_BODY
          PsiElement({)('{')
          PsiElement(})('}')
    COMPILER_ANNOTATIONS
      <empty list>
    DECLARATION
      ANNOTATIONS
        ANNOTATION
          ANNOTATION_NAME
            PsiElement(LIDENTIFIER)('abstract')
          ANNOTATION_ARGUMENTS
            LITERAL_ARGUMENTS
              <empty list>
      CLASS_DECLARATION
        PsiElement(class)('class')
        TYPE_NAME_DECLARATION
          TYPE_NAME
            PsiElement(UIDENTIFIER)('Class1')
        PARAMETERS
          PsiElement(()('(')
          PsiElement())(')')
        CASE_TYPES
          PsiElement(of)('of')
          CASE_TYPE
            QUALIFIED_TYPE
              TYPE_NAME_WITH_ARGUMENTS
                TYPE_NAME
                  PsiElement(UIDENTIFIER)('Class3')
          PsiElement(|)('|')
          CASE_TYPE
            MEMBER_NAME
              PsiElement(LIDENTIFIER)('object1')
        SATISFIED_TYPES
          PsiElement(satisfies)('satisfies')
          QUALIFIED_TYPE
            TYPE_NAME_WITH_ARGUMENTS
              TYPE_NAME
                PsiElement(UIDENTIFIER)('Interface')
        CLASS_BODY
          PsiElement({)('{')
          PsiElement(})('}')
    COMPILER_ANNOTATIONS
      <empty list>
    DECLARATION
      ANNOTATIONS
        <empty list>
      CLASS_DECLARATION
        PsiElement(class)('class')
        TYPE_NAME_DECLARATION
          TYPE_NAME
            PsiElement(UIDENTIFIER)('Class2')
        PARAMETERS
          PsiElement(()('(')
          PsiElement())(')')
        SATISFIED_TYPES
          PsiElement(satisfies)('satisfies')
          QUALIFIED_TYPE
            TYPE_NAME_WITH_ARGUMENTS
              TYPE_NAME
                PsiElement(UIDENTIFIER)('Interface')
          PsiElement(&)('&')
          QUALIFIED_TYPE
            TYPE_NAME_WITH_ARGUMENTS
              TYPE_NAME
                PsiElement(UIDENTIFIER)('Sized')
        CLASS_BODY
          PsiElement({)('{')
          DECLARATION_OR_STATEMENT
            COMPILER_ANNOTATIONS
              <empty list>
            ANNOTATION
              ANNOTATION_NAME
                PsiElement(LIDENTIFIER)('shared')
              ANNOTATION_ARGUMENTS
                LITERAL_ARGUMENTS
                  <empty list>
            ANNOTATION
              ANNOTATION_NAME
                PsiElement(LIDENTIFIER)('actual')
              ANNOTATION_ARGUMENTS
                LITERAL_ARGUMENTS
                  <empty list>
            DECLARATION
              ANNOTATIONS
                <empty list>
              TYPED_METHOD_OR_ATTRIBUTE_DECLARATION
                TYPE
                  UNION_TYPE
                    INTERSECTION_TYPE
                      ENTRY_TYPE
                        ABBREVIATED_TYPE
                          QUALIFIED_TYPE
                            TYPE_NAME_WITH_ARGUMENTS
                              TYPE_NAME
                                PsiElement(UIDENTIFIER)('Integer')
                MEMBER_NAME_DECLARATION
                  MEMBER_NAME
                    PsiElement(LIDENTIFIER)('size')
                SPECIFIER
                  PsiElement(=)('=')
                  FUNCTION_OR_EXPRESSION
                    EXPRESSION
                      ASSIGNMENT_EXPRESSION
                        THEN_ELSE_EXPRESSION
                          DISJUNCTION_EXPRESSION
                            CONJUNCTION_EXPRESSION
                              LOGICAL_NEGATION_EXPRESSION
                                EQUALITY_EXPRESSION
                                  COMPARISON_EXPRESSION
                                    EXISTENCE_EMPTINESS_EXPRESSION
                                      RANGE_INTERVAL_ENTRY_EXPRESSION
                                        ADDITIVE_EXPRESSION
                                          MULTIPLICATIVE_EXPRESSION
                                            DEFAULT_EXPRESSION
                                              NEGATION_COMPLEMENT_EXPRESSION
                                                EXPONENTIATION_EXPRESSION
                                                  INCREMENT_DECREMENT_EXPRESSION
                                                    POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                      PRIMARY
                                                        BASE
                                                          NONSTRING_LITERAL
                                                            PsiElement(NATURAL_LITERAL)('1')
                PsiElement(;)(';')
          DECLARATION_OR_STATEMENT
            COMPILER_ANNOTATIONS
              <empty list>
            ANNOTATION
              ANNOTATION_NAME
                PsiElement(LIDENTIFIER)('shared')
              ANNOTATION_ARGUMENTS
                LITERAL_ARGUMENTS
                  <empty list>
            ANNOTATION
              ANNOTATION_NAME
                PsiElement(LIDENTIFIER)('actual')
              ANNOTATION_ARGUMENTS
                LITERAL_ARGUMENTS
                  <empty list>
            DECLARATION
              ANNOTATIONS
                <empty list>
              TYPED_METHOD_OR_ATTRIBUTE_DECLARATION
                TYPE
                  UNION_TYPE
                    INTERSECTION_TYPE
                      ENTRY_TYPE
                        ABBREVIATED_TYPE
                          QUALIFIED_TYPE
                            TYPE_NAME_WITH_ARGUMENTS
                              TYPE_NAME
                                PsiElement(UIDENTIFIER)('Boolean')
                MEMBER_NAME_DECLARATION
                  MEMBER_NAME
                    PsiElement(LIDENTIFIER)('empty')
                SPECIFIER
                  PsiElement(=)('=')
                  FUNCTION_OR_EXPRESSION
                    EXPRESSION
                      ASSIGNMENT_EXPRESSION
                        THEN_ELSE_EXPRESSION
                          DISJUNCTION_EXPRESSION
                            CONJUNCTION_EXPRESSION
                              LOGICAL_NEGATION_EXPRESSION
                                EQUALITY_EXPRESSION
                                  COMPARISON_EXPRESSION
                                    EXISTENCE_EMPTINESS_EXPRESSION
                                      RANGE_INTERVAL_ENTRY_EXPRESSION
                                        ADDITIVE_EXPRESSION
                                          MULTIPLICATIVE_EXPRESSION
                                            DEFAULT_EXPRESSION
                                              NEGATION_COMPLEMENT_EXPRESSION
                                                EXPONENTIATION_EXPRESSION
                                                  INCREMENT_DECREMENT_EXPRESSION
                                                    POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                      PRIMARY
                                                        BASE
                                                          BASE_REFERENCE
                                                            MEMBER_REFERENCE
                                                              MEMBER_NAME
                                                                PsiElement(LIDENTIFIER)('false')
                PsiElement(;)(';')
          PsiElement(})('}')
    COMPILER_ANNOTATIONS
      <empty list>
    DECLARATION
      ANNOTATIONS
        <empty list>
      CLASS_DECLARATION
        PsiElement(class)('class')
        TYPE_NAME_DECLARATION
          TYPE_NAME
            PsiElement(UIDENTIFIER)('Class3')
        PARAMETERS
          PsiElement(()('(')
          PsiElement())(')')
        EXTENDED_TYPE
          PsiElement(extends)('extends')
          QUALIFIED_TYPE
            TYPE_NAME_WITH_ARGUMENTS
              TYPE_NAME
                PsiElement(UIDENTIFIER)('Class1')
          POSITIONAL_ARGUMENTS
            PsiElement(()('(')
            PsiElement())(')')
        CLASS_BODY
          PsiElement({)('{')
          PsiElement(})('}')
    COMPILER_ANNOTATIONS
      <empty list>
    DECLARATION
      ANNOTATIONS
        <empty list>
      OBJECT_DECLARATION
        PsiElement(object)('object')
        MEMBER_NAME_DECLARATION
          MEMBER_NAME
            PsiElement(LIDENTIFIER)('object1')
        EXTENDED_TYPE
          PsiElement(extends)('extends')
          QUALIFIED_TYPE
            TYPE_NAME_WITH_ARGUMENTS
              TYPE_NAME
                PsiElement(UIDENTIFIER)('Class1')
          POSITIONAL_ARGUMENTS
            PsiElement(()('(')
            PsiElement())(')')
        CLASS_BODY
          PsiElement({)('{')
          PsiElement(})('}')
    COMPILER_ANNOTATIONS
      <empty list>
    DECLARATION
      ANNOTATIONS
        <empty list>
      VOID_OR_INFERRED_METHOD_DECLARATION
        PsiElement(void)('void')
        MEMBER_NAME_DECLARATION
          MEMBER_NAME
            PsiElement(LIDENTIFIER)('switchInterface')
        PARAMETERS
          PsiElement(()('(')
          PARAMETER_DECLARATION
            COMPILER_ANNOTATIONS
              <empty list>
            ANNOTATIONS
              <empty list>
            PARAMETER
              PARAMETER_TYPE
                TYPE
                  UNION_TYPE
                    INTERSECTION_TYPE
                      ENTRY_TYPE
                        ABBREVIATED_TYPE
                          QUALIFIED_TYPE
                            TYPE_NAME_WITH_ARGUMENTS
                              TYPE_NAME
                                PsiElement(UIDENTIFIER)('Interface')
              MEMBER_NAME
                PsiElement(LIDENTIFIER)('i')
          PsiElement())(')')
        BLOCK
          PsiElement({)('{')
          DECLARATION_OR_STATEMENT
            COMPILER_ANNOTATIONS
              <empty list>
            STATEMENT
              CONTROL_STATEMENT
                IF_ELSE
                  IF_BLOCK
                    PsiElement(if)('if')
                    CONDITIONS
                      PsiElement(()('(')
                      CONDITION
                        EXISTS_CONDITION
                          BOOLEAN_CONDITION
                            EXPRESSION
                              ASSIGNMENT_EXPRESSION
                                THEN_ELSE_EXPRESSION
                                  DISJUNCTION_EXPRESSION
                                    CONJUNCTION_EXPRESSION
                                      LOGICAL_NEGATION_EXPRESSION
                                        EQUALITY_EXPRESSION
                                          COMPARISON_EXPRESSION
                                            TYPE_OPERATOR
                                              PsiElement(is)('is')
                                            COMPARABLE_TYPE
                                              UNION_TYPE_EXPRESSION
                                                INTERSECTION_TYPE_EXPRESSION
                                                  QUALIFIED_TYPE
                                                    TYPE_NAME_WITH_ARGUMENTS
                                                      TYPE_NAME
                                                        PsiElement(UIDENTIFIER)('Sized')
                                            EXISTENCE_EMPTINESS_EXPRESSION
                                              RANGE_INTERVAL_ENTRY_EXPRESSION
                                                ADDITIVE_EXPRESSION
                                                  MULTIPLICATIVE_EXPRESSION
                                                    DEFAULT_EXPRESSION
                                                      NEGATION_COMPLEMENT_EXPRESSION
                                                        EXPONENTIATION_EXPRESSION
                                                          INCREMENT_DECREMENT_EXPRESSION
                                                            POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                              PRIMARY
                                                                BASE
                                                                  BASE_REFERENCE
                                                                    MEMBER_REFERENCE
                                                                      MEMBER_NAME
                                                                        PsiElement(LIDENTIFIER)('i')
                      PsiElement())(')')
                    CONTROL_BLOCK
                      BLOCK
                        PsiElement({)('{')
                        DECLARATION_OR_STATEMENT
                          COMPILER_ANNOTATIONS
                            COMPILER_ANNOTATION
                              PsiElement(@)('@')
                              ANNOTATION_NAME
                                PsiElement(LIDENTIFIER)('type')
                              PsiElement([)('[')
                              MY_STRING_LITERAL
                                PsiElement(STRING_LITERAL)('"Interface&Sized"')
                              PsiElement(])(']')
                          DECLARATION
                            ANNOTATIONS
                              <empty list>
                            INFERRED_ATTRIBUTE_DECLARATION
                              PsiElement(value)('value')
                              MEMBER_NAME_DECLARATION
                                MEMBER_NAME
                                  PsiElement(LIDENTIFIER)('ii')
                              SPECIFIER
                                PsiElement(=)('=')
                                FUNCTION_OR_EXPRESSION
                                  EXPRESSION
                                    ASSIGNMENT_EXPRESSION
                                      THEN_ELSE_EXPRESSION
                                        DISJUNCTION_EXPRESSION
                                          CONJUNCTION_EXPRESSION
                                            LOGICAL_NEGATION_EXPRESSION
                                              EQUALITY_EXPRESSION
                                                COMPARISON_EXPRESSION
                                                  EXISTENCE_EMPTINESS_EXPRESSION
                                                    RANGE_INTERVAL_ENTRY_EXPRESSION
                                                      ADDITIVE_EXPRESSION
                                                        MULTIPLICATIVE_EXPRESSION
                                                          DEFAULT_EXPRESSION
                                                            NEGATION_COMPLEMENT_EXPRESSION
                                                              EXPONENTIATION_EXPRESSION
                                                                INCREMENT_DECREMENT_EXPRESSION
                                                                  POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                                    PRIMARY
                                                                      BASE
                                                                        BASE_REFERENCE
                                                                          MEMBER_REFERENCE
                                                                            MEMBER_NAME
                                                                              PsiElement(LIDENTIFIER)('i')
                              PsiElement(;)(';')
                        DECLARATION_OR_STATEMENT
                          COMPILER_ANNOTATIONS
                            <empty list>
                          STATEMENT
                            EXPRESSION_OR_SPECIFICATION_STATEMENT
                              EXPRESSION
                                ASSIGNMENT_EXPRESSION
                                  THEN_ELSE_EXPRESSION
                                    DISJUNCTION_EXPRESSION
                                      CONJUNCTION_EXPRESSION
                                        LOGICAL_NEGATION_EXPRESSION
                                          EQUALITY_EXPRESSION
                                            COMPARISON_EXPRESSION
                                              EXISTENCE_EMPTINESS_EXPRESSION
                                                RANGE_INTERVAL_ENTRY_EXPRESSION
                                                  ADDITIVE_EXPRESSION
                                                    MULTIPLICATIVE_EXPRESSION
                                                      DEFAULT_EXPRESSION
                                                        NEGATION_COMPLEMENT_EXPRESSION
                                                          EXPONENTIATION_EXPRESSION
                                                            INCREMENT_DECREMENT_EXPRESSION
                                                              POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                                PRIMARY
                                                                  BASE
                                                                    BASE_REFERENCE
                                                                      MEMBER_REFERENCE
                                                                        MEMBER_NAME
                                                                          PsiElement(LIDENTIFIER)('print')
                                                                  ARGUMENTS
                                                                    POSITIONAL_ARGUMENTS
                                                                      PsiElement(()('(')
                                                                      POSITIONAL_ARGUMENT
                                                                        FUNCTION_OR_EXPRESSION
                                                                          EXPRESSION
                                                                            ASSIGNMENT_EXPRESSION
                                                                              THEN_ELSE_EXPRESSION
                                                                                DISJUNCTION_EXPRESSION
                                                                                  CONJUNCTION_EXPRESSION
                                                                                    LOGICAL_NEGATION_EXPRESSION
                                                                                      EQUALITY_EXPRESSION
                                                                                        COMPARISON_EXPRESSION
                                                                                          EXISTENCE_EMPTINESS_EXPRESSION
                                                                                            RANGE_INTERVAL_ENTRY_EXPRESSION
                                                                                              ADDITIVE_EXPRESSION
                                                                                                MULTIPLICATIVE_EXPRESSION
                                                                                                  DEFAULT_EXPRESSION
                                                                                                    NEGATION_COMPLEMENT_EXPRESSION
                                                                                                      EXPONENTIATION_EXPRESSION
                                                                                                        INCREMENT_DECREMENT_EXPRESSION
                                                                                                          POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                                                                            PRIMARY
                                                                                                              BASE
                                                                                                                BASE_REFERENCE
                                                                                                                  MEMBER_REFERENCE
                                                                                                                    MEMBER_NAME
                                                                                                                      PsiElement(LIDENTIFIER)('i')
                                                                                                              QUALIFIED_REFERENCE
                                                                                                                MEMBER_SELECTION_OPERATOR
                                                                                                                  PsiElement(.)('.')
                                                                                                                MEMBER_REFERENCE
                                                                                                                  MEMBER_NAME
                                                                                                                    PsiElement(LIDENTIFIER)('size')
                                                                      PsiElement())(')')
                              PsiElement(;)(';')
                        DECLARATION_OR_STATEMENT
                          COMPILER_ANNOTATIONS
                            <empty list>
                          STATEMENT
                            CONTROL_STATEMENT
                              SWITCH_CASE_ELSE
                                SWITCH_HEADER
                                  PsiElement(switch)('switch')
                                  PsiElement(()('(')
                                  EXPRESSION
                                    ASSIGNMENT_EXPRESSION
                                      THEN_ELSE_EXPRESSION
                                        DISJUNCTION_EXPRESSION
                                          CONJUNCTION_EXPRESSION
                                            LOGICAL_NEGATION_EXPRESSION
                                              EQUALITY_EXPRESSION
                                                COMPARISON_EXPRESSION
                                                  EXISTENCE_EMPTINESS_EXPRESSION
                                                    RANGE_INTERVAL_ENTRY_EXPRESSION
                                                      ADDITIVE_EXPRESSION
                                                        MULTIPLICATIVE_EXPRESSION
                                                          DEFAULT_EXPRESSION
                                                            NEGATION_COMPLEMENT_EXPRESSION
                                                              EXPONENTIATION_EXPRESSION
                                                                INCREMENT_DECREMENT_EXPRESSION
                                                                  POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                                    PRIMARY
                                                                      BASE
                                                                        BASE_REFERENCE
                                                                          MEMBER_REFERENCE
                                                                            MEMBER_NAME
                                                                              PsiElement(LIDENTIFIER)('i')
                                  PsiElement())(')')
                                CASES
                                  CASE_BLOCK
                                    PsiElement(case)('case')
                                    PsiElement(()('(')
                                    CASE_ITEM
                                      IS_CASE_CONDITION
                                        PsiElement(is)('is')
                                        TYPE
                                          UNION_TYPE
                                            INTERSECTION_TYPE
                                              ENTRY_TYPE
                                                ABBREVIATED_TYPE
                                                  QUALIFIED_TYPE
                                                    TYPE_NAME_WITH_ARGUMENTS
                                                      TYPE_NAME
                                                        PsiElement(UIDENTIFIER)('Class1')
                                              PsiElement(&)('&')
                                              ENTRY_TYPE
                                                ABBREVIATED_TYPE
                                                  QUALIFIED_TYPE
                                                    TYPE_NAME_WITH_ARGUMENTS
                                                      TYPE_NAME
                                                        PsiElement(UIDENTIFIER)('Sized')
                                    PsiElement())(')')
                                    BLOCK
                                      PsiElement({)('{')
                                      DECLARATION_OR_STATEMENT
                                        COMPILER_ANNOTATIONS
                                          <empty list>
                                        STATEMENT
                                          EXPRESSION_OR_SPECIFICATION_STATEMENT
                                            EXPRESSION
                                              ASSIGNMENT_EXPRESSION
                                                THEN_ELSE_EXPRESSION
                                                  DISJUNCTION_EXPRESSION
                                                    CONJUNCTION_EXPRESSION
                                                      LOGICAL_NEGATION_EXPRESSION
                                                        EQUALITY_EXPRESSION
                                                          COMPARISON_EXPRESSION
                                                            EXISTENCE_EMPTINESS_EXPRESSION
                                                              RANGE_INTERVAL_ENTRY_EXPRESSION
                                                                ADDITIVE_EXPRESSION
                                                                  MULTIPLICATIVE_EXPRESSION
                                                                    DEFAULT_EXPRESSION
                                                                      NEGATION_COMPLEMENT_EXPRESSION
                                                                        EXPONENTIATION_EXPRESSION
                                                                          INCREMENT_DECREMENT_EXPRESSION
                                                                            POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                                              PRIMARY
                                                                                BASE
                                                                                  BASE_REFERENCE
                                                                                    MEMBER_REFERENCE
                                                                                      MEMBER_NAME
                                                                                        PsiElement(LIDENTIFIER)('print')
                                                                                ARGUMENTS
                                                                                  POSITIONAL_ARGUMENTS
                                                                                    PsiElement(()('(')
                                                                                    POSITIONAL_ARGUMENT
                                                                                      FUNCTION_OR_EXPRESSION
                                                                                        EXPRESSION
                                                                                          ASSIGNMENT_EXPRESSION
                                                                                            THEN_ELSE_EXPRESSION
                                                                                              DISJUNCTION_EXPRESSION
                                                                                                CONJUNCTION_EXPRESSION
                                                                                                  LOGICAL_NEGATION_EXPRESSION
                                                                                                    EQUALITY_EXPRESSION
                                                                                                      COMPARISON_EXPRESSION
                                                                                                        EXISTENCE_EMPTINESS_EXPRESSION
                                                                                                          RANGE_INTERVAL_ENTRY_EXPRESSION
                                                                                                            ADDITIVE_EXPRESSION
                                                                                                              MULTIPLICATIVE_EXPRESSION
                                                                                                                DEFAULT_EXPRESSION
                                                                                                                  NEGATION_COMPLEMENT_EXPRESSION
                                                                                                                    EXPONENTIATION_EXPRESSION
                                                                                                                      INCREMENT_DECREMENT_EXPRESSION
                                                                                                                        POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                                                                                          PRIMARY
                                                                                                                            BASE
                                                                                                                              BASE_REFERENCE
                                                                                                                                MEMBER_REFERENCE
                                                                                                                                  MEMBER_NAME
                                                                                                                                    PsiElement(LIDENTIFIER)('i')
                                                                                                                            QUALIFIED_REFERENCE
                                                                                                                              MEMBER_SELECTION_OPERATOR
                                                                                                                                PsiElement(.)('.')
                                                                                                                              MEMBER_REFERENCE
                                                                                                                                MEMBER_NAME
                                                                                                                                  PsiElement(LIDENTIFIER)('size')
                                                                                    PsiElement())(')')
                                            PsiElement(;)(';')
                                      PsiElement(})('}')
                                  CASE_BLOCK
                                    PsiElement(case)('case')
                                    PsiElement(()('(')
                                    CASE_ITEM
                                      IS_CASE_CONDITION
                                        PsiElement(is)('is')
                                        TYPE
                                          UNION_TYPE
                                            INTERSECTION_TYPE
                                              ENTRY_TYPE
                                                ABBREVIATED_TYPE
                                                  QUALIFIED_TYPE
                                                    TYPE_NAME_WITH_ARGUMENTS
                                                      TYPE_NAME
                                                        PsiElement(UIDENTIFIER)('Class2')
                                    PsiElement())(')')
                                    BLOCK
                                      PsiElement({)('{')
                                      DECLARATION_OR_STATEMENT
                                        COMPILER_ANNOTATIONS
                                          <empty list>
                                        STATEMENT
                                          EXPRESSION_OR_SPECIFICATION_STATEMENT
                                            EXPRESSION
                                              ASSIGNMENT_EXPRESSION
                                                THEN_ELSE_EXPRESSION
                                                  DISJUNCTION_EXPRESSION
                                                    CONJUNCTION_EXPRESSION
                                                      LOGICAL_NEGATION_EXPRESSION
                                                        EQUALITY_EXPRESSION
                                                          COMPARISON_EXPRESSION
                                                            EXISTENCE_EMPTINESS_EXPRESSION
                                                              RANGE_INTERVAL_ENTRY_EXPRESSION
                                                                ADDITIVE_EXPRESSION
                                                                  MULTIPLICATIVE_EXPRESSION
                                                                    DEFAULT_EXPRESSION
                                                                      NEGATION_COMPLEMENT_EXPRESSION
                                                                        EXPONENTIATION_EXPRESSION
                                                                          INCREMENT_DECREMENT_EXPRESSION
                                                                            POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                                              PRIMARY
                                                                                BASE
                                                                                  BASE_REFERENCE
                                                                                    MEMBER_REFERENCE
                                                                                      MEMBER_NAME
                                                                                        PsiElement(LIDENTIFIER)('print')
                                                                                ARGUMENTS
                                                                                  POSITIONAL_ARGUMENTS
                                                                                    PsiElement(()('(')
                                                                                    POSITIONAL_ARGUMENT
                                                                                      FUNCTION_OR_EXPRESSION
                                                                                        EXPRESSION
                                                                                          ASSIGNMENT_EXPRESSION
                                                                                            THEN_ELSE_EXPRESSION
                                                                                              DISJUNCTION_EXPRESSION
                                                                                                CONJUNCTION_EXPRESSION
                                                                                                  LOGICAL_NEGATION_EXPRESSION
                                                                                                    EQUALITY_EXPRESSION
                                                                                                      COMPARISON_EXPRESSION
                                                                                                        EXISTENCE_EMPTINESS_EXPRESSION
                                                                                                          RANGE_INTERVAL_ENTRY_EXPRESSION
                                                                                                            ADDITIVE_EXPRESSION
                                                                                                              MULTIPLICATIVE_EXPRESSION
                                                                                                                DEFAULT_EXPRESSION
                                                                                                                  NEGATION_COMPLEMENT_EXPRESSION
                                                                                                                    EXPONENTIATION_EXPRESSION
                                                                                                                      INCREMENT_DECREMENT_EXPRESSION
                                                                                                                        POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                                                                                          PRIMARY
                                                                                                                            BASE
                                                                                                                              BASE_REFERENCE
                                                                                                                                MEMBER_REFERENCE
                                                                                                                                  MEMBER_NAME
                                                                                                                                    PsiElement(LIDENTIFIER)('i')
                                                                                                                            QUALIFIED_REFERENCE
                                                                                                                              MEMBER_SELECTION_OPERATOR
                                                                                                                                PsiElement(.)('.')
                                                                                                                              MEMBER_REFERENCE
                                                                                                                                MEMBER_NAME
                                                                                                                                  PsiElement(LIDENTIFIER)('size')
                                                                                    PsiElement())(')')
                                            PsiElement(;)(';')
                                      PsiElement(})('}')
                        PsiElement(})('}')
          DECLARATION_OR_STATEMENT
            COMPILER_ANNOTATIONS
              <empty list>
            STATEMENT
              CONTROL_STATEMENT
                SWITCH_CASE_ELSE
                  SWITCH_HEADER
                    PsiElement(switch)('switch')
                    PsiElement(()('(')
                    EXPRESSION
                      ASSIGNMENT_EXPRESSION
                        THEN_ELSE_EXPRESSION
                          DISJUNCTION_EXPRESSION
                            CONJUNCTION_EXPRESSION
                              LOGICAL_NEGATION_EXPRESSION
                                EQUALITY_EXPRESSION
                                  COMPARISON_EXPRESSION
                                    EXISTENCE_EMPTINESS_EXPRESSION
                                      RANGE_INTERVAL_ENTRY_EXPRESSION
                                        ADDITIVE_EXPRESSION
                                          MULTIPLICATIVE_EXPRESSION
                                            DEFAULT_EXPRESSION
                                              NEGATION_COMPLEMENT_EXPRESSION
                                                EXPONENTIATION_EXPRESSION
                                                  INCREMENT_DECREMENT_EXPRESSION
                                                    POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                      PRIMARY
                                                        BASE
                                                          BASE_REFERENCE
                                                            MEMBER_REFERENCE
                                                              MEMBER_NAME
                                                                PsiElement(LIDENTIFIER)('i')
                    PsiElement())(')')
                  CASES
                    CASE_BLOCK
                      PsiElement(case)('case')
                      PsiElement(()('(')
                      CASE_ITEM
                        IS_CASE_CONDITION
                          PsiElement(is)('is')
                          TYPE
                            UNION_TYPE
                              INTERSECTION_TYPE
                                ENTRY_TYPE
                                  ABBREVIATED_TYPE
                                    QUALIFIED_TYPE
                                      TYPE_NAME_WITH_ARGUMENTS
                                        TYPE_NAME
                                          PsiElement(UIDENTIFIER)('Class1')
                      PsiElement())(')')
                      BLOCK
                        PsiElement({)('{')
                        PsiElement(})('}')
                    CASE_BLOCK
                      PsiElement(case)('case')
                      PsiElement(()('(')
                      CASE_ITEM
                        IS_CASE_CONDITION
                          PsiElement(is)('is')
                          TYPE
                            UNION_TYPE
                              INTERSECTION_TYPE
                                ENTRY_TYPE
                                  ABBREVIATED_TYPE
                                    QUALIFIED_TYPE
                                      TYPE_NAME_WITH_ARGUMENTS
                                        TYPE_NAME
                                          PsiElement(UIDENTIFIER)('Class2')
                      PsiElement())(')')
                      BLOCK
                        PsiElement({)('{')
                        PsiElement(})('}')
          DECLARATION_OR_STATEMENT
            COMPILER_ANNOTATIONS
              <empty list>
            STATEMENT
              CONTROL_STATEMENT
                SWITCH_CASE_ELSE
                  SWITCH_HEADER
                    PsiElement(switch)('switch')
                    PsiElement(()('(')
                    EXPRESSION
                      ASSIGNMENT_EXPRESSION
                        THEN_ELSE_EXPRESSION
                          DISJUNCTION_EXPRESSION
                            CONJUNCTION_EXPRESSION
                              LOGICAL_NEGATION_EXPRESSION
                                EQUALITY_EXPRESSION
                                  COMPARISON_EXPRESSION
                                    EXISTENCE_EMPTINESS_EXPRESSION
                                      RANGE_INTERVAL_ENTRY_EXPRESSION
                                        ADDITIVE_EXPRESSION
                                          MULTIPLICATIVE_EXPRESSION
                                            DEFAULT_EXPRESSION
                                              NEGATION_COMPLEMENT_EXPRESSION
                                                EXPONENTIATION_EXPRESSION
                                                  INCREMENT_DECREMENT_EXPRESSION
                                                    POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                      PRIMARY
                                                        BASE
                                                          BASE_REFERENCE
                                                            MEMBER_REFERENCE
                                                              MEMBER_NAME
                                                                PsiElement(LIDENTIFIER)('i')
                    PsiElement())(')')
                  CASES
                    CASE_BLOCK
                      PsiElement(case)('case')
                      PsiElement(()('(')
                      CASE_ITEM
                        IS_CASE_CONDITION
                          PsiElement(is)('is')
                          TYPE
                            UNION_TYPE
                              INTERSECTION_TYPE
                                ENTRY_TYPE
                                  ABBREVIATED_TYPE
                                    QUALIFIED_TYPE
                                      TYPE_NAME_WITH_ARGUMENTS
                                        TYPE_NAME
                                          PsiElement(UIDENTIFIER)('Class1')
                      PsiElement())(')')
                      BLOCK
                        PsiElement({)('{')
                        PsiElement(})('}')
                    DEFAULT_CASE_BLOCK
                      PsiElement(else)('else')
                      BLOCK
                        PsiElement({)('{')
                        PsiElement(})('}')
          PsiComment(LINE_COMMENT)('//@error \n')
          DECLARATION_OR_STATEMENT
            COMPILER_ANNOTATIONS
              <empty list>
            STATEMENT
              CONTROL_STATEMENT
                SWITCH_CASE_ELSE
                  SWITCH_HEADER
                    PsiElement(switch)('switch')
                    PsiElement(()('(')
                    EXPRESSION
                      ASSIGNMENT_EXPRESSION
                        THEN_ELSE_EXPRESSION
                          DISJUNCTION_EXPRESSION
                            CONJUNCTION_EXPRESSION
                              LOGICAL_NEGATION_EXPRESSION
                                EQUALITY_EXPRESSION
                                  COMPARISON_EXPRESSION
                                    EXISTENCE_EMPTINESS_EXPRESSION
                                      RANGE_INTERVAL_ENTRY_EXPRESSION
                                        ADDITIVE_EXPRESSION
                                          MULTIPLICATIVE_EXPRESSION
                                            DEFAULT_EXPRESSION
                                              NEGATION_COMPLEMENT_EXPRESSION
                                                EXPONENTIATION_EXPRESSION
                                                  INCREMENT_DECREMENT_EXPRESSION
                                                    POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                      PRIMARY
                                                        BASE
                                                          BASE_REFERENCE
                                                            MEMBER_REFERENCE
                                                              MEMBER_NAME
                                                                PsiElement(LIDENTIFIER)('i')
                    PsiElement())(')')
                  CASES
                    CASE_BLOCK
                      PsiElement(case)('case')
                      PsiElement(()('(')
                      CASE_ITEM
                        IS_CASE_CONDITION
                          PsiElement(is)('is')
                          TYPE
                            UNION_TYPE
                              INTERSECTION_TYPE
                                ENTRY_TYPE
                                  ABBREVIATED_TYPE
                                    QUALIFIED_TYPE
                                      TYPE_NAME_WITH_ARGUMENTS
                                        TYPE_NAME
                                          PsiElement(UIDENTIFIER)('Class1')
                      PsiElement())(')')
                      BLOCK
                        PsiElement({)('{')
                        PsiElement(})('}')
                    CASE_BLOCK
                      PsiElement(case)('case')
                      PsiElement(()('(')
                      CASE_ITEM
                        IS_CASE_CONDITION
                          PsiElement(is)('is')
                          TYPE
                            UNION_TYPE
                              INTERSECTION_TYPE
                                ENTRY_TYPE
                                  ABBREVIATED_TYPE
                                    QUALIFIED_TYPE
                                      TYPE_NAME_WITH_ARGUMENTS
                                        TYPE_NAME
                                          PsiElement(UIDENTIFIER)('Class2')
                      PsiElement())(')')
                      BLOCK
                        PsiElement({)('{')
                        PsiElement(})('}')
                    DEFAULT_CASE_BLOCK
                      PsiElement(else)('else')
                      BLOCK
                        PsiElement({)('{')
                        PsiElement(})('}')
          DECLARATION_OR_STATEMENT
            COMPILER_ANNOTATIONS
              COMPILER_ANNOTATION
                PsiElement(@)('@')
                ANNOTATION_NAME
                  PsiElement(LIDENTIFIER)('error')
            STATEMENT
              CONTROL_STATEMENT
                SWITCH_CASE_ELSE
                  SWITCH_HEADER
                    PsiElement(switch)('switch')
                    PsiElement(()('(')
                    EXPRESSION
                      ASSIGNMENT_EXPRESSION
                        THEN_ELSE_EXPRESSION
                          DISJUNCTION_EXPRESSION
                            CONJUNCTION_EXPRESSION
                              LOGICAL_NEGATION_EXPRESSION
                                EQUALITY_EXPRESSION
                                  COMPARISON_EXPRESSION
                                    EXISTENCE_EMPTINESS_EXPRESSION
                                      RANGE_INTERVAL_ENTRY_EXPRESSION
                                        ADDITIVE_EXPRESSION
                                          MULTIPLICATIVE_EXPRESSION
                                            DEFAULT_EXPRESSION
                                              NEGATION_COMPLEMENT_EXPRESSION
                                                EXPONENTIATION_EXPRESSION
                                                  INCREMENT_DECREMENT_EXPRESSION
                                                    POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                      PRIMARY
                                                        BASE
                                                          BASE_REFERENCE
                                                            MEMBER_REFERENCE
                                                              MEMBER_NAME
                                                                PsiElement(LIDENTIFIER)('i')
                    PsiElement())(')')
                  CASES
                    CASE_BLOCK
                      PsiElement(case)('case')
                      PsiElement(()('(')
                      CASE_ITEM
                        IS_CASE_CONDITION
                          PsiElement(is)('is')
                          TYPE
                            UNION_TYPE
                              INTERSECTION_TYPE
                                ENTRY_TYPE
                                  ABBREVIATED_TYPE
                                    QUALIFIED_TYPE
                                      TYPE_NAME_WITH_ARGUMENTS
                                        TYPE_NAME
                                          PsiElement(UIDENTIFIER)('Class1')
                      PsiElement())(')')
                      BLOCK
                        PsiElement({)('{')
                        PsiElement(})('}')
          PsiComment(LINE_COMMENT)('//@error \n')
          DECLARATION_OR_STATEMENT
            COMPILER_ANNOTATIONS
              <empty list>
            STATEMENT
              CONTROL_STATEMENT
                SWITCH_CASE_ELSE
                  SWITCH_HEADER
                    PsiElement(switch)('switch')
                    PsiElement(()('(')
                    EXPRESSION
                      ASSIGNMENT_EXPRESSION
                        THEN_ELSE_EXPRESSION
                          DISJUNCTION_EXPRESSION
                            CONJUNCTION_EXPRESSION
                              LOGICAL_NEGATION_EXPRESSION
                                EQUALITY_EXPRESSION
                                  COMPARISON_EXPRESSION
                                    EXISTENCE_EMPTINESS_EXPRESSION
                                      RANGE_INTERVAL_ENTRY_EXPRESSION
                                        ADDITIVE_EXPRESSION
                                          MULTIPLICATIVE_EXPRESSION
                                            DEFAULT_EXPRESSION
                                              NEGATION_COMPLEMENT_EXPRESSION
                                                EXPONENTIATION_EXPRESSION
                                                  INCREMENT_DECREMENT_EXPRESSION
                                                    POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                      PRIMARY
                                                        BASE
                                                          BASE_REFERENCE
                                                            MEMBER_REFERENCE
                                                              MEMBER_NAME
                                                                PsiElement(LIDENTIFIER)('i')
                    PsiElement())(')')
                  CASES
                    CASE_BLOCK
                      PsiElement(case)('case')
                      PsiElement(()('(')
                      CASE_ITEM
                        IS_CASE_CONDITION
                          PsiElement(is)('is')
                          TYPE
                            UNION_TYPE
                              INTERSECTION_TYPE
                                ENTRY_TYPE
                                  ABBREVIATED_TYPE
                                    QUALIFIED_TYPE
                                      TYPE_NAME_WITH_ARGUMENTS
                                        TYPE_NAME
                                          PsiElement(UIDENTIFIER)('String')
                      PsiElement())(')')
                      BLOCK
                        PsiElement({)('{')
                        PsiElement(})('}')
                    CASE_BLOCK
                      PsiElement(case)('case')
                      PsiElement(()('(')
                      CASE_ITEM
                        IS_CASE_CONDITION
                          PsiElement(is)('is')
                          TYPE
                            UNION_TYPE
                              INTERSECTION_TYPE
                                ENTRY_TYPE
                                  ABBREVIATED_TYPE
                                    QUALIFIED_TYPE
                                      TYPE_NAME_WITH_ARGUMENTS
                                        TYPE_NAME
                                          PsiElement(UIDENTIFIER)('Class1')
                      PsiElement())(')')
                      BLOCK
                        PsiElement({)('{')
                        PsiElement(})('}')
                    CASE_BLOCK
                      PsiElement(case)('case')
                      PsiElement(()('(')
                      CASE_ITEM
                        IS_CASE_CONDITION
                          PsiElement(is)('is')
                          TYPE
                            UNION_TYPE
                              INTERSECTION_TYPE
                                ENTRY_TYPE
                                  ABBREVIATED_TYPE
                                    QUALIFIED_TYPE
                                      TYPE_NAME_WITH_ARGUMENTS
                                        TYPE_NAME
                                          PsiElement(UIDENTIFIER)('Class2')
                      PsiElement())(')')
                      BLOCK
                        PsiElement({)('{')
                        PsiElement(})('}')
          DECLARATION_OR_STATEMENT
            COMPILER_ANNOTATIONS
              <empty list>
            STATEMENT
              CONTROL_STATEMENT
                SWITCH_CASE_ELSE
                  SWITCH_HEADER
                    PsiElement(switch)('switch')
                    PsiElement(()('(')
                    EXPRESSION
                      ASSIGNMENT_EXPRESSION
                        THEN_ELSE_EXPRESSION
                          DISJUNCTION_EXPRESSION
                            CONJUNCTION_EXPRESSION
                              LOGICAL_NEGATION_EXPRESSION
                                EQUALITY_EXPRESSION
                                  COMPARISON_EXPRESSION
                                    EXISTENCE_EMPTINESS_EXPRESSION
                                      RANGE_INTERVAL_ENTRY_EXPRESSION
                                        ADDITIVE_EXPRESSION
                                          MULTIPLICATIVE_EXPRESSION
                                            DEFAULT_EXPRESSION
                                              NEGATION_COMPLEMENT_EXPRESSION
                                                EXPONENTIATION_EXPRESSION
                                                  INCREMENT_DECREMENT_EXPRESSION
                                                    POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                      PRIMARY
                                                        BASE
                                                          BASE_REFERENCE
                                                            MEMBER_REFERENCE
                                                              MEMBER_NAME
                                                                PsiElement(LIDENTIFIER)('i')
                    PsiElement())(')')
                  CASES
                    CASE_BLOCK
                      PsiElement(case)('case')
                      PsiElement(()('(')
                      CASE_ITEM
                        IS_CASE_CONDITION
                          PsiElement(is)('is')
                          TYPE
                            UNION_TYPE
                              INTERSECTION_TYPE
                                ENTRY_TYPE
                                  ABBREVIATED_TYPE
                                    QUALIFIED_TYPE
                                      TYPE_NAME_WITH_ARGUMENTS
                                        TYPE_NAME
                                          PsiElement(UIDENTIFIER)('Class3')
                      PsiElement())(')')
                      BLOCK
                        PsiElement({)('{')
                        PsiElement(})('}')
                    CASE_BLOCK
                      PsiElement(case)('case')
                      PsiElement(()('(')
                      CASE_ITEM
                        MATCH_CASE_CONDITION
                          EXPRESSIONS
                            EXPRESSION
                              ASSIGNMENT_EXPRESSION
                                THEN_ELSE_EXPRESSION
                                  DISJUNCTION_EXPRESSION
                                    CONJUNCTION_EXPRESSION
                                      LOGICAL_NEGATION_EXPRESSION
                                        EQUALITY_EXPRESSION
                                          COMPARISON_EXPRESSION
                                            EXISTENCE_EMPTINESS_EXPRESSION
                                              RANGE_INTERVAL_ENTRY_EXPRESSION
                                                ADDITIVE_EXPRESSION
                                                  MULTIPLICATIVE_EXPRESSION
                                                    DEFAULT_EXPRESSION
                                                      NEGATION_COMPLEMENT_EXPRESSION
                                                        EXPONENTIATION_EXPRESSION
                                                          INCREMENT_DECREMENT_EXPRESSION
                                                            POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                              PRIMARY
                                                                BASE
                                                                  BASE_REFERENCE
                                                                    MEMBER_REFERENCE
                                                                      MEMBER_NAME
                                                                        PsiElement(LIDENTIFIER)('object1')
                      PsiElement())(')')
                      BLOCK
                        PsiElement({)('{')
                        PsiElement(})('}')
                    CASE_BLOCK
                      PsiElement(case)('case')
                      PsiElement(()('(')
                      CASE_ITEM
                        IS_CASE_CONDITION
                          PsiElement(is)('is')
                          TYPE
                            UNION_TYPE
                              INTERSECTION_TYPE
                                ENTRY_TYPE
                                  ABBREVIATED_TYPE
                                    QUALIFIED_TYPE
                                      TYPE_NAME_WITH_ARGUMENTS
                                        TYPE_NAME
                                          PsiElement(UIDENTIFIER)('Class2')
                      PsiElement())(')')
                      BLOCK
                        PsiElement({)('{')
                        PsiElement(})('}')
          DECLARATION_OR_STATEMENT
            COMPILER_ANNOTATIONS
              <empty list>
            DECLARATION
              ANNOTATIONS
                <empty list>
              TYPED_METHOD_OR_ATTRIBUTE_DECLARATION
                TYPE
                  UNION_TYPE
                    INTERSECTION_TYPE
                      ENTRY_TYPE
                        ABBREVIATED_TYPE
                          QUALIFIED_TYPE
                            TYPE_NAME_WITH_ARGUMENTS
                              TYPE_NAME
                                PsiElement(UIDENTIFIER)('Integer')
                    PsiElement(|)('|')
                    INTERSECTION_TYPE
                      ENTRY_TYPE
                        ABBREVIATED_TYPE
                          QUALIFIED_TYPE
                            TYPE_NAME_WITH_ARGUMENTS
                              TYPE_NAME
                                PsiElement(UIDENTIFIER)('Float')
                MEMBER_NAME_DECLARATION
                  MEMBER_NAME
                    PsiElement(LIDENTIFIER)('num')
                SPECIFIER
                  PsiElement(=)('=')
                  FUNCTION_OR_EXPRESSION
                    EXPRESSION
                      ASSIGNMENT_EXPRESSION
                        THEN_ELSE_EXPRESSION
                          DISJUNCTION_EXPRESSION
                            CONJUNCTION_EXPRESSION
                              LOGICAL_NEGATION_EXPRESSION
                                EQUALITY_EXPRESSION
                                  COMPARISON_EXPRESSION
                                    EXISTENCE_EMPTINESS_EXPRESSION
                                      RANGE_INTERVAL_ENTRY_EXPRESSION
                                        ADDITIVE_EXPRESSION
                                          MULTIPLICATIVE_EXPRESSION
                                            DEFAULT_EXPRESSION
                                              NEGATION_COMPLEMENT_EXPRESSION
                                                EXPONENTIATION_EXPRESSION
                                                  INCREMENT_DECREMENT_EXPRESSION
                                                    POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                      PRIMARY
                                                        BASE
                                                          NONSTRING_LITERAL
                                                            PsiElement(NATURAL_LITERAL)('1')
                PsiElement(;)(';')
          DECLARATION_OR_STATEMENT
            COMPILER_ANNOTATIONS
              <empty list>
            STATEMENT
              CONTROL_STATEMENT
                SWITCH_CASE_ELSE
                  SWITCH_HEADER
                    PsiElement(switch)('switch')
                    PsiElement(()('(')
                    EXPRESSION
                      ASSIGNMENT_EXPRESSION
                        THEN_ELSE_EXPRESSION
                          DISJUNCTION_EXPRESSION
                            CONJUNCTION_EXPRESSION
                              LOGICAL_NEGATION_EXPRESSION
                                EQUALITY_EXPRESSION
                                  COMPARISON_EXPRESSION
                                    EXISTENCE_EMPTINESS_EXPRESSION
                                      RANGE_INTERVAL_ENTRY_EXPRESSION
                                        ADDITIVE_EXPRESSION
                                          MULTIPLICATIVE_EXPRESSION
                                            DEFAULT_EXPRESSION
                                              NEGATION_COMPLEMENT_EXPRESSION
                                                EXPONENTIATION_EXPRESSION
                                                  INCREMENT_DECREMENT_EXPRESSION
                                                    POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                      PRIMARY
                                                        BASE
                                                          BASE_REFERENCE
                                                            MEMBER_REFERENCE
                                                              MEMBER_NAME
                                                                PsiElement(LIDENTIFIER)('num')
                    PsiElement())(')')
                  CASES
                    CASE_BLOCK
                      PsiElement(case)('case')
                      PsiElement(()('(')
                      CASE_ITEM
                        IS_CASE_CONDITION
                          PsiElement(is)('is')
                          TYPE
                            UNION_TYPE
                              INTERSECTION_TYPE
                                ENTRY_TYPE
                                  ABBREVIATED_TYPE
                                    QUALIFIED_TYPE
                                      TYPE_NAME_WITH_ARGUMENTS
                                        TYPE_NAME
                                          PsiElement(UIDENTIFIER)('Integer')
                      PsiElement())(')')
                      BLOCK
                        PsiElement({)('{')
                        PsiElement(})('}')
                    CASE_BLOCK
                      PsiElement(case)('case')
                      PsiElement(()('(')
                      CASE_ITEM
                        IS_CASE_CONDITION
                          PsiElement(is)('is')
                          TYPE
                            UNION_TYPE
                              INTERSECTION_TYPE
                                ENTRY_TYPE
                                  ABBREVIATED_TYPE
                                    QUALIFIED_TYPE
                                      TYPE_NAME_WITH_ARGUMENTS
                                        TYPE_NAME
                                          PsiElement(UIDENTIFIER)('Float')
                      PsiElement())(')')
                      BLOCK
                        PsiElement({)('{')
                        PsiElement(})('}')
          DECLARATION_OR_STATEMENT
            COMPILER_ANNOTATIONS
              COMPILER_ANNOTATION
                PsiElement(@)('@')
                ANNOTATION_NAME
                  PsiElement(LIDENTIFIER)('error')
            STATEMENT
              CONTROL_STATEMENT
                SWITCH_CASE_ELSE
                  SWITCH_HEADER
                    PsiElement(switch)('switch')
                    PsiElement(()('(')
                    EXPRESSION
                      ASSIGNMENT_EXPRESSION
                        THEN_ELSE_EXPRESSION
                          DISJUNCTION_EXPRESSION
                            CONJUNCTION_EXPRESSION
                              LOGICAL_NEGATION_EXPRESSION
                                EQUALITY_EXPRESSION
                                  COMPARISON_EXPRESSION
                                    EXISTENCE_EMPTINESS_EXPRESSION
                                      RANGE_INTERVAL_ENTRY_EXPRESSION
                                        ADDITIVE_EXPRESSION
                                          MULTIPLICATIVE_EXPRESSION
                                            DEFAULT_EXPRESSION
                                              NEGATION_COMPLEMENT_EXPRESSION
                                                EXPONENTIATION_EXPRESSION
                                                  INCREMENT_DECREMENT_EXPRESSION
                                                    POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                      PRIMARY
                                                        BASE
                                                          BASE_REFERENCE
                                                            MEMBER_REFERENCE
                                                              MEMBER_NAME
                                                                PsiElement(LIDENTIFIER)('num')
                    PsiElement())(')')
                  CASES
                    CASE_BLOCK
                      PsiElement(case)('case')
                      PsiElement(()('(')
                      CASE_ITEM
                        IS_CASE_CONDITION
                          PsiElement(is)('is')
                          TYPE
                            UNION_TYPE
                              INTERSECTION_TYPE
                                ENTRY_TYPE
                                  ABBREVIATED_TYPE
                                    QUALIFIED_TYPE
                                      TYPE_NAME_WITH_ARGUMENTS
                                        TYPE_NAME
                                          PsiElement(UIDENTIFIER)('Integer')
                      PsiElement())(')')
                      BLOCK
                        PsiElement({)('{')
                        PsiElement(})('}')
                    CASE_BLOCK
                      PsiElement(case)('case')
                      PsiElement(()('(')
                      CASE_ITEM
                        IS_CASE_CONDITION
                          PsiElement(is)('is')
                          TYPE
                            UNION_TYPE
                              INTERSECTION_TYPE
                                ENTRY_TYPE
                                  ABBREVIATED_TYPE
                                    QUALIFIED_TYPE
                                      TYPE_NAME_WITH_ARGUMENTS
                                        TYPE_NAME
                                          PsiElement(UIDENTIFIER)('Float')
                      PsiElement())(')')
                      BLOCK
                        PsiElement({)('{')
                        PsiElement(})('}')
                    CASE_BLOCK
                      PsiElement(case)('case')
                      PsiElement(()('(')
                      CASE_ITEM
                        IS_CASE_CONDITION
                          PsiElement(is)('is')
                          TYPE
                            UNION_TYPE
                              INTERSECTION_TYPE
                                ENTRY_TYPE
                                  ABBREVIATED_TYPE
                                    QUALIFIED_TYPE
                                      TYPE_NAME_WITH_ARGUMENTS
                                        TYPE_NAME
                                          PsiElement(UIDENTIFIER)('String')
                      PsiElement())(')')
                      BLOCK
                        PsiElement({)('{')
                        PsiElement(})('}')
          PsiElement(})('}')
    COMPILER_ANNOTATIONS
      <empty list>
    DECLARATION
      ANNOTATIONS
        <empty list>
      VOID_OR_INFERRED_METHOD_DECLARATION
        PsiElement(void)('void')
        MEMBER_NAME_DECLARATION
          MEMBER_NAME
            PsiElement(LIDENTIFIER)('switchUnion1')
        PARAMETERS
          PsiElement(()('(')
          PARAMETER_DECLARATION
            COMPILER_ANNOTATIONS
              <empty list>
            ANNOTATIONS
              <empty list>
            PARAMETER
              PARAMETER_TYPE
                TYPE
                  UNION_TYPE
                    INTERSECTION_TYPE
                      ENTRY_TYPE
                        ABBREVIATED_TYPE
                          QUALIFIED_TYPE
                            TYPE_NAME_WITH_ARGUMENTS
                              TYPE_NAME
                                PsiElement(UIDENTIFIER)('Class2')
                    PsiElement(|)('|')
                    INTERSECTION_TYPE
                      ENTRY_TYPE
                        ABBREVIATED_TYPE
                          QUALIFIED_TYPE
                            TYPE_NAME_WITH_ARGUMENTS
                              TYPE_NAME
                                PsiElement(UIDENTIFIER)('Class3')
                    PsiElement(|)('|')
                    INTERSECTION_TYPE
                      ENTRY_TYPE
                        ABBREVIATED_TYPE
                          QUALIFIED_TYPE
                            TYPE_NAME_WITH_ARGUMENTS
                              TYPE_NAME
                                PsiElement(UIDENTIFIER)('String')
              MEMBER_NAME
                PsiElement(LIDENTIFIER)('val')
          PsiElement())(')')
        BLOCK
          PsiElement({)('{')
          DECLARATION_OR_STATEMENT
            COMPILER_ANNOTATIONS
              <empty list>
            STATEMENT
              CONTROL_STATEMENT
                SWITCH_CASE_ELSE
                  SWITCH_HEADER
                    PsiElement(switch)('switch')
                    PsiElement(()('(')
                    EXPRESSION
                      ASSIGNMENT_EXPRESSION
                        THEN_ELSE_EXPRESSION
                          DISJUNCTION_EXPRESSION
                            CONJUNCTION_EXPRESSION
                              LOGICAL_NEGATION_EXPRESSION
                                EQUALITY_EXPRESSION
                                  COMPARISON_EXPRESSION
                                    EXISTENCE_EMPTINESS_EXPRESSION
                                      RANGE_INTERVAL_ENTRY_EXPRESSION
                                        ADDITIVE_EXPRESSION
                                          MULTIPLICATIVE_EXPRESSION
                                            DEFAULT_EXPRESSION
                                              NEGATION_COMPLEMENT_EXPRESSION
                                                EXPONENTIATION_EXPRESSION
                                                  INCREMENT_DECREMENT_EXPRESSION
                                                    POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                      PRIMARY
                                                        BASE
                                                          BASE_REFERENCE
                                                            MEMBER_REFERENCE
                                                              MEMBER_NAME
                                                                PsiElement(LIDENTIFIER)('val')
                    PsiElement())(')')
                  CASES
                    CASE_BLOCK
                      PsiElement(case)('case')
                      PsiElement(()('(')
                      CASE_ITEM
                        IS_CASE_CONDITION
                          PsiElement(is)('is')
                          TYPE
                            UNION_TYPE
                              INTERSECTION_TYPE
                                ENTRY_TYPE
                                  ABBREVIATED_TYPE
                                    QUALIFIED_TYPE
                                      TYPE_NAME_WITH_ARGUMENTS
                                        TYPE_NAME
                                          PsiElement(UIDENTIFIER)('Class2')
                      PsiElement())(')')
                      BLOCK
                        PsiElement({)('{')
                        PsiElement(})('}')
                    CASE_BLOCK
                      PsiElement(case)('case')
                      PsiElement(()('(')
                      CASE_ITEM
                        IS_CASE_CONDITION
                          PsiElement(is)('is')
                          TYPE
                            UNION_TYPE
                              INTERSECTION_TYPE
                                ENTRY_TYPE
                                  ABBREVIATED_TYPE
                                    QUALIFIED_TYPE
                                      TYPE_NAME_WITH_ARGUMENTS
                                        TYPE_NAME
                                          PsiElement(UIDENTIFIER)('Class3')
                      PsiElement())(')')
                      BLOCK
                        PsiElement({)('{')
                        PsiElement(})('}')
                    CASE_BLOCK
                      PsiElement(case)('case')
                      PsiElement(()('(')
                      CASE_ITEM
                        IS_CASE_CONDITION
                          PsiElement(is)('is')
                          TYPE
                            UNION_TYPE
                              INTERSECTION_TYPE
                                ENTRY_TYPE
                                  ABBREVIATED_TYPE
                                    QUALIFIED_TYPE
                                      TYPE_NAME_WITH_ARGUMENTS
                                        TYPE_NAME
                                          PsiElement(UIDENTIFIER)('String')
                      PsiElement())(')')
                      BLOCK
                        PsiElement({)('{')
                        PsiElement(})('}')
          DECLARATION_OR_STATEMENT
            COMPILER_ANNOTATIONS
              <empty list>
            STATEMENT
              CONTROL_STATEMENT
                SWITCH_CASE_ELSE
                  SWITCH_HEADER
                    PsiElement(switch)('switch')
                    PsiElement(()('(')
                    EXPRESSION
                      ASSIGNMENT_EXPRESSION
                        THEN_ELSE_EXPRESSION
                          DISJUNCTION_EXPRESSION
                            CONJUNCTION_EXPRESSION
                              LOGICAL_NEGATION_EXPRESSION
                                EQUALITY_EXPRESSION
                                  COMPARISON_EXPRESSION
                                    EXISTENCE_EMPTINESS_EXPRESSION
                                      RANGE_INTERVAL_ENTRY_EXPRESSION
                                        ADDITIVE_EXPRESSION
                                          MULTIPLICATIVE_EXPRESSION
                                            DEFAULT_EXPRESSION
                                              NEGATION_COMPLEMENT_EXPRESSION
                                                EXPONENTIATION_EXPRESSION
                                                  INCREMENT_DECREMENT_EXPRESSION
                                                    POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                      PRIMARY
                                                        BASE
                                                          BASE_REFERENCE
                                                            MEMBER_REFERENCE
                                                              MEMBER_NAME
                                                                PsiElement(LIDENTIFIER)('val')
                    PsiElement())(')')
                  CASES
                    CASE_BLOCK
                      PsiElement(case)('case')
                      PsiElement(()('(')
                      CASE_ITEM
                        IS_CASE_CONDITION
                          PsiElement(is)('is')
                          TYPE
                            UNION_TYPE
                              INTERSECTION_TYPE
                                ENTRY_TYPE
                                  ABBREVIATED_TYPE
                                    QUALIFIED_TYPE
                                      TYPE_NAME_WITH_ARGUMENTS
                                        TYPE_NAME
                                          PsiElement(UIDENTIFIER)('Class2')
                      PsiElement())(')')
                      BLOCK
                        PsiElement({)('{')
                        PsiElement(})('}')
                    DEFAULT_CASE_BLOCK
                      PsiElement(else)('else')
                      BLOCK
                        PsiElement({)('{')
                        PsiElement(})('}')
          DECLARATION_OR_STATEMENT
            COMPILER_ANNOTATIONS
              COMPILER_ANNOTATION
                PsiElement(@)('@')
                ANNOTATION_NAME
                  PsiElement(LIDENTIFIER)('error')
            STATEMENT
              CONTROL_STATEMENT
                SWITCH_CASE_ELSE
                  SWITCH_HEADER
                    PsiElement(switch)('switch')
                    PsiElement(()('(')
                    EXPRESSION
                      ASSIGNMENT_EXPRESSION
                        THEN_ELSE_EXPRESSION
                          DISJUNCTION_EXPRESSION
                            CONJUNCTION_EXPRESSION
                              LOGICAL_NEGATION_EXPRESSION
                                EQUALITY_EXPRESSION
                                  COMPARISON_EXPRESSION
                                    EXISTENCE_EMPTINESS_EXPRESSION
                                      RANGE_INTERVAL_ENTRY_EXPRESSION
                                        ADDITIVE_EXPRESSION
                                          MULTIPLICATIVE_EXPRESSION
                                            DEFAULT_EXPRESSION
                                              NEGATION_COMPLEMENT_EXPRESSION
                                                EXPONENTIATION_EXPRESSION
                                                  INCREMENT_DECREMENT_EXPRESSION
                                                    POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                      PRIMARY
                                                        BASE
                                                          BASE_REFERENCE
                                                            MEMBER_REFERENCE
                                                              MEMBER_NAME
                                                                PsiElement(LIDENTIFIER)('val')
                    PsiElement())(')')
                  CASES
                    CASE_BLOCK
                      PsiElement(case)('case')
                      PsiElement(()('(')
                      CASE_ITEM
                        IS_CASE_CONDITION
                          PsiElement(is)('is')
                          TYPE
                            UNION_TYPE
                              INTERSECTION_TYPE
                                ENTRY_TYPE
                                  ABBREVIATED_TYPE
                                    QUALIFIED_TYPE
                                      TYPE_NAME_WITH_ARGUMENTS
                                        TYPE_NAME
                                          PsiElement(UIDENTIFIER)('Class2')
                      PsiElement())(')')
                      BLOCK
                        PsiElement({)('{')
                        PsiElement(})('}')
                    CASE_BLOCK
                      PsiElement(case)('case')
                      PsiElement(()('(')
                      CASE_ITEM
                        IS_CASE_CONDITION
                          PsiElement(is)('is')
                          TYPE
                            UNION_TYPE
                              INTERSECTION_TYPE
                                ENTRY_TYPE
                                  ABBREVIATED_TYPE
                                    QUALIFIED_TYPE
                                      TYPE_NAME_WITH_ARGUMENTS
                                        TYPE_NAME
                                          PsiElement(UIDENTIFIER)('Class3')
                      PsiElement())(')')
                      BLOCK
                        PsiElement({)('{')
                        PsiElement(})('}')
          DECLARATION_OR_STATEMENT
            COMPILER_ANNOTATIONS
              COMPILER_ANNOTATION
                PsiElement(@)('@')
                ANNOTATION_NAME
                  PsiElement(LIDENTIFIER)('error')
            STATEMENT
              CONTROL_STATEMENT
                SWITCH_CASE_ELSE
                  SWITCH_HEADER
                    PsiElement(switch)('switch')
                    PsiElement(()('(')
                    EXPRESSION
                      ASSIGNMENT_EXPRESSION
                        THEN_ELSE_EXPRESSION
                          DISJUNCTION_EXPRESSION
                            CONJUNCTION_EXPRESSION
                              LOGICAL_NEGATION_EXPRESSION
                                EQUALITY_EXPRESSION
                                  COMPARISON_EXPRESSION
                                    EXISTENCE_EMPTINESS_EXPRESSION
                                      RANGE_INTERVAL_ENTRY_EXPRESSION
                                        ADDITIVE_EXPRESSION
                                          MULTIPLICATIVE_EXPRESSION
                                            DEFAULT_EXPRESSION
                                              NEGATION_COMPLEMENT_EXPRESSION
                                                EXPONENTIATION_EXPRESSION
                                                  INCREMENT_DECREMENT_EXPRESSION
                                                    POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                      PRIMARY
                                                        BASE
                                                          BASE_REFERENCE
                                                            MEMBER_REFERENCE
                                                              MEMBER_NAME
                                                                PsiElement(LIDENTIFIER)('val')
                    PsiElement())(')')
                  CASES
                    CASE_BLOCK
                      PsiElement(case)('case')
                      PsiElement(()('(')
                      CASE_ITEM
                        IS_CASE_CONDITION
                          PsiElement(is)('is')
                          TYPE
                            UNION_TYPE
                              INTERSECTION_TYPE
                                ENTRY_TYPE
                                  ABBREVIATED_TYPE
                                    QUALIFIED_TYPE
                                      TYPE_NAME_WITH_ARGUMENTS
                                        TYPE_NAME
                                          PsiElement(UIDENTIFIER)('Class2')
                      PsiElement())(')')
                      BLOCK
                        PsiElement({)('{')
                        PsiElement(})('}')
                    CASE_BLOCK
                      PsiElement(case)('case')
                      PsiElement(()('(')
                      CASE_ITEM
                        IS_CASE_CONDITION
                          PsiElement(is)('is')
                          TYPE
                            UNION_TYPE
                              INTERSECTION_TYPE
                                ENTRY_TYPE
                                  ABBREVIATED_TYPE
                                    QUALIFIED_TYPE
                                      TYPE_NAME_WITH_ARGUMENTS
                                        TYPE_NAME
                                          PsiElement(UIDENTIFIER)('Class3')
                      PsiElement())(')')
                      BLOCK
                        PsiElement({)('{')
                        PsiElement(})('}')
                    CASE_BLOCK
                      PsiElement(case)('case')
                      PsiElement(()('(')
                      CASE_ITEM
                        IS_CASE_CONDITION
                          PsiElement(is)('is')
                          TYPE
                            UNION_TYPE
                              INTERSECTION_TYPE
                                ENTRY_TYPE
                                  ABBREVIATED_TYPE
                                    QUALIFIED_TYPE
                                      TYPE_NAME_WITH_ARGUMENTS
                                        TYPE_NAME
                                          PsiElement(UIDENTIFIER)('String')
                      PsiElement())(')')
                      BLOCK
                        PsiElement({)('{')
                        PsiElement(})('}')
                    CASE_BLOCK
                      PsiElement(case)('case')
                      PsiElement(()('(')
                      CASE_ITEM
                        IS_CASE_CONDITION
                          PsiElement(is)('is')
                          TYPE
                            UNION_TYPE
                              INTERSECTION_TYPE
                                ENTRY_TYPE
                                  ABBREVIATED_TYPE
                                    QUALIFIED_TYPE
                                      TYPE_NAME_WITH_ARGUMENTS
                                        TYPE_NAME
                                          PsiElement(UIDENTIFIER)('Integer')
                      PsiElement())(')')
                      BLOCK
                        PsiElement({)('{')
                        PsiElement(})('}')
          PsiElement(})('}')
    COMPILER_ANNOTATIONS
      <empty list>
    DECLARATION
      ANNOTATIONS
        <empty list>
      VOID_OR_INFERRED_METHOD_DECLARATION
        PsiElement(void)('void')
        MEMBER_NAME_DECLARATION
          MEMBER_NAME
            PsiElement(LIDENTIFIER)('switchUnion2')
        PARAMETERS
          PsiElement(()('(')
          PARAMETER_DECLARATION
            COMPILER_ANNOTATIONS
              <empty list>
            ANNOTATIONS
              <empty list>
            PARAMETER
              PARAMETER_TYPE
                TYPE
                  UNION_TYPE
                    INTERSECTION_TYPE
                      ENTRY_TYPE
                        ABBREVIATED_TYPE
                          QUALIFIED_TYPE
                            TYPE_NAME_WITH_ARGUMENTS
                              TYPE_NAME
                                PsiElement(UIDENTIFIER)('Class1')
                    PsiElement(|)('|')
                    INTERSECTION_TYPE
                      ENTRY_TYPE
                        ABBREVIATED_TYPE
                          QUALIFIED_TYPE
                            TYPE_NAME_WITH_ARGUMENTS
                              TYPE_NAME
                                PsiElement(UIDENTIFIER)('String')
              MEMBER_NAME
                PsiElement(LIDENTIFIER)('val')
          PsiElement())(')')
        BLOCK
          PsiElement({)('{')
          DECLARATION_OR_STATEMENT
            COMPILER_ANNOTATIONS
              <empty list>
            STATEMENT
              CONTROL_STATEMENT
                SWITCH_CASE_ELSE
                  SWITCH_HEADER
                    PsiElement(switch)('switch')
                    PsiElement(()('(')
                    EXPRESSION
                      ASSIGNMENT_EXPRESSION
                        THEN_ELSE_EXPRESSION
                          DISJUNCTION_EXPRESSION
                            CONJUNCTION_EXPRESSION
                              LOGICAL_NEGATION_EXPRESSION
                                EQUALITY_EXPRESSION
                                  COMPARISON_EXPRESSION
                                    EXISTENCE_EMPTINESS_EXPRESSION
                                      RANGE_INTERVAL_ENTRY_EXPRESSION
                                        ADDITIVE_EXPRESSION
                                          MULTIPLICATIVE_EXPRESSION
                                            DEFAULT_EXPRESSION
                                              NEGATION_COMPLEMENT_EXPRESSION
                                                EXPONENTIATION_EXPRESSION
                                                  INCREMENT_DECREMENT_EXPRESSION
                                                    POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                      PRIMARY
                                                        BASE
                                                          BASE_REFERENCE
                                                            MEMBER_REFERENCE
                                                              MEMBER_NAME
                                                                PsiElement(LIDENTIFIER)('val')
                    PsiElement())(')')
                  CASES
                    CASE_BLOCK
                      PsiElement(case)('case')
                      PsiElement(()('(')
                      CASE_ITEM
                        IS_CASE_CONDITION
                          PsiElement(is)('is')
                          TYPE
                            UNION_TYPE
                              INTERSECTION_TYPE
                                ENTRY_TYPE
                                  ABBREVIATED_TYPE
                                    QUALIFIED_TYPE
                                      TYPE_NAME_WITH_ARGUMENTS
                                        TYPE_NAME
                                          PsiElement(UIDENTIFIER)('Class3')
                      PsiElement())(')')
                      BLOCK
                        PsiElement({)('{')
                        PsiElement(})('}')
                    CASE_BLOCK
                      PsiElement(case)('case')
                      PsiElement(()('(')
                      CASE_ITEM
                        MATCH_CASE_CONDITION
                          EXPRESSIONS
                            EXPRESSION
                              ASSIGNMENT_EXPRESSION
                                THEN_ELSE_EXPRESSION
                                  DISJUNCTION_EXPRESSION
                                    CONJUNCTION_EXPRESSION
                                      LOGICAL_NEGATION_EXPRESSION
                                        EQUALITY_EXPRESSION
                                          COMPARISON_EXPRESSION
                                            EXISTENCE_EMPTINESS_EXPRESSION
                                              RANGE_INTERVAL_ENTRY_EXPRESSION
                                                ADDITIVE_EXPRESSION
                                                  MULTIPLICATIVE_EXPRESSION
                                                    DEFAULT_EXPRESSION
                                                      NEGATION_COMPLEMENT_EXPRESSION
                                                        EXPONENTIATION_EXPRESSION
                                                          INCREMENT_DECREMENT_EXPRESSION
                                                            POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                              PRIMARY
                                                                BASE
                                                                  BASE_REFERENCE
                                                                    MEMBER_REFERENCE
                                                                      MEMBER_NAME
                                                                        PsiElement(LIDENTIFIER)('object1')
                      PsiElement())(')')
                      BLOCK
                        PsiElement({)('{')
                        PsiElement(})('}')
                    CASE_BLOCK
                      PsiElement(case)('case')
                      PsiElement(()('(')
                      CASE_ITEM
                        IS_CASE_CONDITION
                          PsiElement(is)('is')
                          TYPE
                            UNION_TYPE
                              INTERSECTION_TYPE
                                ENTRY_TYPE
                                  ABBREVIATED_TYPE
                                    QUALIFIED_TYPE
                                      TYPE_NAME_WITH_ARGUMENTS
                                        TYPE_NAME
                                          PsiElement(UIDENTIFIER)('String')
                      PsiElement())(')')
                      BLOCK
                        PsiElement({)('{')
                        PsiElement(})('}')
          DECLARATION_OR_STATEMENT
            COMPILER_ANNOTATIONS
              COMPILER_ANNOTATION
                PsiElement(@)('@')
                ANNOTATION_NAME
                  PsiElement(LIDENTIFIER)('error')
            STATEMENT
              CONTROL_STATEMENT
                SWITCH_CASE_ELSE
                  SWITCH_HEADER
                    PsiElement(switch)('switch')
                    PsiElement(()('(')
                    EXPRESSION
                      ASSIGNMENT_EXPRESSION
                        THEN_ELSE_EXPRESSION
                          DISJUNCTION_EXPRESSION
                            CONJUNCTION_EXPRESSION
                              LOGICAL_NEGATION_EXPRESSION
                                EQUALITY_EXPRESSION
                                  COMPARISON_EXPRESSION
                                    EXISTENCE_EMPTINESS_EXPRESSION
                                      RANGE_INTERVAL_ENTRY_EXPRESSION
                                        ADDITIVE_EXPRESSION
                                          MULTIPLICATIVE_EXPRESSION
                                            DEFAULT_EXPRESSION
                                              NEGATION_COMPLEMENT_EXPRESSION
                                                EXPONENTIATION_EXPRESSION
                                                  INCREMENT_DECREMENT_EXPRESSION
                                                    POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                      PRIMARY
                                                        BASE
                                                          BASE_REFERENCE
                                                            MEMBER_REFERENCE
                                                              MEMBER_NAME
                                                                PsiElement(LIDENTIFIER)('val')
                    PsiElement())(')')
                  CASES
                    CASE_BLOCK
                      PsiElement(case)('case')
                      PsiElement(()('(')
                      CASE_ITEM
                        IS_CASE_CONDITION
                          PsiElement(is)('is')
                          TYPE
                            UNION_TYPE
                              INTERSECTION_TYPE
                                ENTRY_TYPE
                                  ABBREVIATED_TYPE
                                    QUALIFIED_TYPE
                                      TYPE_NAME_WITH_ARGUMENTS
                                        TYPE_NAME
                                          PsiElement(UIDENTIFIER)('Class1')
                      PsiElement())(')')
                      BLOCK
                        PsiElement({)('{')
                        PsiElement(})('}')
                    CASE_BLOCK
                      PsiElement(case)('case')
                      PsiElement(()('(')
                      CASE_ITEM
                        MATCH_CASE_CONDITION
                          EXPRESSIONS
                            EXPRESSION
                              ASSIGNMENT_EXPRESSION
                                THEN_ELSE_EXPRESSION
                                  DISJUNCTION_EXPRESSION
                                    CONJUNCTION_EXPRESSION
                                      LOGICAL_NEGATION_EXPRESSION
                                        EQUALITY_EXPRESSION
                                          COMPARISON_EXPRESSION
                                            EXISTENCE_EMPTINESS_EXPRESSION
                                              RANGE_INTERVAL_ENTRY_EXPRESSION
                                                ADDITIVE_EXPRESSION
                                                  MULTIPLICATIVE_EXPRESSION
                                                    DEFAULT_EXPRESSION
                                                      NEGATION_COMPLEMENT_EXPRESSION
                                                        EXPONENTIATION_EXPRESSION
                                                          INCREMENT_DECREMENT_EXPRESSION
                                                            POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                              PRIMARY
                                                                BASE
                                                                  BASE_REFERENCE
                                                                    MEMBER_REFERENCE
                                                                      MEMBER_NAME
                                                                        PsiElement(LIDENTIFIER)('object1')
                      PsiElement())(')')
                      BLOCK
                        PsiElement({)('{')
                        PsiElement(})('}')
                    CASE_BLOCK
                      PsiElement(case)('case')
                      PsiElement(()('(')
                      CASE_ITEM
                        IS_CASE_CONDITION
                          PsiElement(is)('is')
                          TYPE
                            UNION_TYPE
                              INTERSECTION_TYPE
                                ENTRY_TYPE
                                  ABBREVIATED_TYPE
                                    QUALIFIED_TYPE
                                      TYPE_NAME_WITH_ARGUMENTS
                                        TYPE_NAME
                                          PsiElement(UIDENTIFIER)('String')
                      PsiElement())(')')
                      BLOCK
                        PsiElement({)('{')
                        PsiElement(})('}')
          DECLARATION_OR_STATEMENT
            COMPILER_ANNOTATIONS
              COMPILER_ANNOTATION
                PsiElement(@)('@')
                ANNOTATION_NAME
                  PsiElement(LIDENTIFIER)('error')
            STATEMENT
              CONTROL_STATEMENT
                SWITCH_CASE_ELSE
                  SWITCH_HEADER
                    PsiElement(switch)('switch')
                    PsiElement(()('(')
                    EXPRESSION
                      ASSIGNMENT_EXPRESSION
                        THEN_ELSE_EXPRESSION
                          DISJUNCTION_EXPRESSION
                            CONJUNCTION_EXPRESSION
                              LOGICAL_NEGATION_EXPRESSION
                                EQUALITY_EXPRESSION
                                  COMPARISON_EXPRESSION
                                    EXISTENCE_EMPTINESS_EXPRESSION
                                      RANGE_INTERVAL_ENTRY_EXPRESSION
                                        ADDITIVE_EXPRESSION
                                          MULTIPLICATIVE_EXPRESSION
                                            DEFAULT_EXPRESSION
                                              NEGATION_COMPLEMENT_EXPRESSION
                                                EXPONENTIATION_EXPRESSION
                                                  INCREMENT_DECREMENT_EXPRESSION
                                                    POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                      PRIMARY
                                                        BASE
                                                          BASE_REFERENCE
                                                            MEMBER_REFERENCE
                                                              MEMBER_NAME
                                                                PsiElement(LIDENTIFIER)('val')
                    PsiElement())(')')
                  CASES
                    CASE_BLOCK
                      PsiElement(case)('case')
                      PsiElement(()('(')
                      CASE_ITEM
                        IS_CASE_CONDITION
                          PsiElement(is)('is')
                          TYPE
                            UNION_TYPE
                              INTERSECTION_TYPE
                                ENTRY_TYPE
                                  ABBREVIATED_TYPE
                                    QUALIFIED_TYPE
                                      TYPE_NAME_WITH_ARGUMENTS
                                        TYPE_NAME
                                          PsiElement(UIDENTIFIER)('Class1')
                      PsiElement())(')')
                      BLOCK
                        PsiElement({)('{')
                        PsiElement(})('}')
                    CASE_BLOCK
                      PsiElement(case)('case')
                      PsiElement(()('(')
                      CASE_ITEM
                        IS_CASE_CONDITION
                          PsiElement(is)('is')
                          TYPE
                            UNION_TYPE
                              INTERSECTION_TYPE
                                ENTRY_TYPE
                                  ABBREVIATED_TYPE
                                    QUALIFIED_TYPE
                                      TYPE_NAME_WITH_ARGUMENTS
                                        TYPE_NAME
                                          PsiElement(UIDENTIFIER)('Class3')
                      PsiElement())(')')
                      BLOCK
                        PsiElement({)('{')
                        PsiElement(})('}')
                    CASE_BLOCK
                      PsiElement(case)('case')
                      PsiElement(()('(')
                      CASE_ITEM
                        IS_CASE_CONDITION
                          PsiElement(is)('is')
                          TYPE
                            UNION_TYPE
                              INTERSECTION_TYPE
                                ENTRY_TYPE
                                  ABBREVIATED_TYPE
                                    QUALIFIED_TYPE
                                      TYPE_NAME_WITH_ARGUMENTS
                                        TYPE_NAME
                                          PsiElement(UIDENTIFIER)('String')
                      PsiElement())(')')
                      BLOCK
                        PsiElement({)('{')
                        PsiElement(})('}')
          PsiElement(})('}')
    COMPILER_ANNOTATIONS
      COMPILER_ANNOTATION
        PsiElement(@)('@')
        ANNOTATION_NAME
          PsiElement(LIDENTIFIER)('error')
    DECLARATION
      ANNOTATIONS
        <empty list>
      CLASS_DECLARATION
        PsiElement(class)('class')
        TYPE_NAME_DECLARATION
          TYPE_NAME
            PsiElement(UIDENTIFIER)('NonAbstract')
        PARAMETERS
          PsiElement(()('(')
          PsiElement())(')')
        CASE_TYPES
          PsiElement(of)('of')
          CASE_TYPE
            QUALIFIED_TYPE
              TYPE_NAME_WITH_ARGUMENTS
                TYPE_NAME
                  PsiElement(UIDENTIFIER)('SubtypeOfNonAbstract')
        CLASS_BODY
          PsiElement({)('{')
          PsiElement(})('}')
    COMPILER_ANNOTATIONS
      <empty list>
    DECLARATION
      ANNOTATIONS
        <empty list>
      CLASS_DECLARATION
        PsiElement(class)('class')
        TYPE_NAME_DECLARATION
          TYPE_NAME
            PsiElement(UIDENTIFIER)('SubtypeOfNonAbstract')
        PARAMETERS
          PsiElement(()('(')
          PsiElement())(')')
        EXTENDED_TYPE
          PsiElement(extends)('extends')
          QUALIFIED_TYPE
            TYPE_NAME_WITH_ARGUMENTS
              TYPE_NAME
                PsiElement(UIDENTIFIER)('NonAbstract')
          POSITIONAL_ARGUMENTS
            PsiElement(()('(')
            PsiElement())(')')
        CLASS_BODY
          PsiElement({)('{')
          PsiElement(})('}')
    COMPILER_ANNOTATIONS
      COMPILER_ANNOTATION
        PsiElement(@)('@')
        ANNOTATION_NAME
          PsiElement(LIDENTIFIER)('error')
    DECLARATION
      ANNOTATIONS
        ANNOTATION
          ANNOTATION_NAME
            PsiElement(LIDENTIFIER)('abstract')
          ANNOTATION_ARGUMENTS
            LITERAL_ARGUMENTS
              <empty list>
      CLASS_DECLARATION
        PsiElement(class)('class')
        TYPE_NAME_DECLARATION
          TYPE_NAME
            PsiElement(UIDENTIFIER)('Abstract')
        PARAMETERS
          PsiElement(()('(')
          PsiElement())(')')
        CASE_TYPES
          PsiElement(of)('of')
          CASE_TYPE
            QUALIFIED_TYPE
              TYPE_NAME_WITH_ARGUMENTS
                TYPE_NAME
                  PsiElement(UIDENTIFIER)('NonSubtypeOfAbstract')
        CLASS_BODY
          PsiElement({)('{')
          PsiElement(})('}')
    COMPILER_ANNOTATIONS
      <empty list>
    DECLARATION
      ANNOTATIONS
        <empty list>
      CLASS_DECLARATION
        PsiElement(class)('class')
        TYPE_NAME_DECLARATION
          TYPE_NAME
            PsiElement(UIDENTIFIER)('NonSubtypeOfAbstract')
        PARAMETERS
          PsiElement(()('(')
          PsiElement())(')')
        CLASS_BODY
          PsiElement({)('{')
          PsiElement(})('}')
    PsiComment(MULTI_LINE_COMMENT)('/*interface Indirect of Abstract1 | Abstract2 {}\nabstract class Abstract1() {}\nabstract class Abstract2() {}\nclass Concrete1() extends Abstract1() satisfies Indirect {}\nclass Concrete2() satisfies Indirect {}\nclass Concrete3() extends Abstract1() {}*/')
    COMPILER_ANNOTATIONS
      <empty list>
    DECLARATION
      ANNOTATIONS
        <empty list>
      INTERFACE_DECLARATION
        PsiElement(interface)('interface')
        TYPE_NAME_DECLARATION
          TYPE_NAME
            PsiElement(UIDENTIFIER)('J1')
        CASE_TYPES
          PsiElement(of)('of')
          CASE_TYPE
            QUALIFIED_TYPE
              TYPE_NAME_WITH_ARGUMENTS
                TYPE_NAME
                  PsiElement(UIDENTIFIER)('J2')
          PsiElement(|)('|')
          CASE_TYPE
            QUALIFIED_TYPE
              TYPE_NAME_WITH_ARGUMENTS
                TYPE_NAME
                  PsiElement(UIDENTIFIER)('J3')
        INTERFACE_BODY
          PsiElement({)('{')
          PsiElement(})('}')
    COMPILER_ANNOTATIONS
      <empty list>
    DECLARATION
      ANNOTATIONS
        <empty list>
      INTERFACE_DECLARATION
        PsiElement(interface)('interface')
        TYPE_NAME_DECLARATION
          TYPE_NAME
            PsiElement(UIDENTIFIER)('J2')
        SATISFIED_TYPES
          PsiElement(satisfies)('satisfies')
          QUALIFIED_TYPE
            TYPE_NAME_WITH_ARGUMENTS
              TYPE_NAME
                PsiElement(UIDENTIFIER)('J1')
        INTERFACE_BODY
          PsiElement({)('{')
          PsiElement(})('}')
    COMPILER_ANNOTATIONS
      <empty list>
    DECLARATION
      ANNOTATIONS
        <empty list>
      INTERFACE_DECLARATION
        PsiElement(interface)('interface')
        TYPE_NAME_DECLARATION
          TYPE_NAME
            PsiElement(UIDENTIFIER)('J3')
        SATISFIED_TYPES
          PsiElement(satisfies)('satisfies')
          QUALIFIED_TYPE
            TYPE_NAME_WITH_ARGUMENTS
              TYPE_NAME
                PsiElement(UIDENTIFIER)('J1')
        INTERFACE_BODY
          PsiElement({)('{')
          PsiElement(})('}')
    COMPILER_ANNOTATIONS
      <empty list>
    DECLARATION
      ANNOTATIONS
        <empty list>
      INTERFACE_DECLARATION
        PsiElement(interface)('interface')
        TYPE_NAME_DECLARATION
          TYPE_NAME
            PsiElement(UIDENTIFIER)('J4')
        SATISFIED_TYPES
          PsiElement(satisfies)('satisfies')
          QUALIFIED_TYPE
            TYPE_NAME_WITH_ARGUMENTS
              TYPE_NAME
                PsiElement(UIDENTIFIER)('J1')
        INTERFACE_BODY
          PsiElement({)('{')
          PsiElement(})('}')
    COMPILER_ANNOTATIONS
      <empty list>
    DECLARATION
      ANNOTATIONS
        <empty list>
      VOID_OR_INFERRED_METHOD_DECLARATION
        PsiElement(void)('void')
        MEMBER_NAME_DECLARATION
          MEMBER_NAME
            PsiElement(LIDENTIFIER)('testHardCase')
        PARAMETERS
          PsiElement(()('(')
          PARAMETER_DECLARATION
            COMPILER_ANNOTATIONS
              <empty list>
            ANNOTATIONS
              <empty list>
            PARAMETER
              PARAMETER_TYPE
                TYPE
                  UNION_TYPE
                    INTERSECTION_TYPE
                      ENTRY_TYPE
                        ABBREVIATED_TYPE
                          QUALIFIED_TYPE
                            TYPE_NAME_WITH_ARGUMENTS
                              TYPE_NAME
                                PsiElement(UIDENTIFIER)('J4')
              MEMBER_NAME
                PsiElement(LIDENTIFIER)('i')
          PsiElement())(')')
        BLOCK
          PsiElement({)('{')
          DECLARATION_OR_STATEMENT
            COMPILER_ANNOTATIONS
              <empty list>
            STATEMENT
              CONTROL_STATEMENT
                SWITCH_CASE_ELSE
                  SWITCH_HEADER
                    PsiElement(switch)('switch')
                    PsiElement(()('(')
                    EXPRESSION
                      ASSIGNMENT_EXPRESSION
                        THEN_ELSE_EXPRESSION
                          DISJUNCTION_EXPRESSION
                            CONJUNCTION_EXPRESSION
                              LOGICAL_NEGATION_EXPRESSION
                                EQUALITY_EXPRESSION
                                  COMPARISON_EXPRESSION
                                    EXISTENCE_EMPTINESS_EXPRESSION
                                      RANGE_INTERVAL_ENTRY_EXPRESSION
                                        ADDITIVE_EXPRESSION
                                          MULTIPLICATIVE_EXPRESSION
                                            DEFAULT_EXPRESSION
                                              NEGATION_COMPLEMENT_EXPRESSION
                                                EXPONENTIATION_EXPRESSION
                                                  INCREMENT_DECREMENT_EXPRESSION
                                                    POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                      PRIMARY
                                                        BASE
                                                          BASE_REFERENCE
                                                            MEMBER_REFERENCE
                                                              MEMBER_NAME
                                                                PsiElement(LIDENTIFIER)('i')
                    PsiElement())(')')
                  CASES
                    CASE_BLOCK
                      PsiElement(case)('case')
                      PsiElement(()('(')
                      CASE_ITEM
                        IS_CASE_CONDITION
                          PsiElement(is)('is')
                          TYPE
                            UNION_TYPE
                              INTERSECTION_TYPE
                                ENTRY_TYPE
                                  ABBREVIATED_TYPE
                                    QUALIFIED_TYPE
                                      TYPE_NAME_WITH_ARGUMENTS
                                        TYPE_NAME
                                          PsiElement(UIDENTIFIER)('J2')
                      PsiElement())(')')
                      BLOCK
                        PsiElement({)('{')
                        DECLARATION_OR_STATEMENT
                          COMPILER_ANNOTATIONS
                            COMPILER_ANNOTATION
                              PsiElement(@)('@')
                              ANNOTATION_NAME
                                PsiElement(LIDENTIFIER)('type')
                              PsiElement([)('[')
                              MY_STRING_LITERAL
                                PsiElement(STRING_LITERAL)('"J4&J2"')
                              PsiElement(])(']')
                          DECLARATION
                            ANNOTATIONS
                              <empty list>
                            INFERRED_ATTRIBUTE_DECLARATION
                              PsiElement(value)('value')
                              MEMBER_NAME_DECLARATION
                                MEMBER_NAME
                                  PsiElement(LIDENTIFIER)('ii')
                              SPECIFIER
                                PsiElement(=)('=')
                                FUNCTION_OR_EXPRESSION
                                  EXPRESSION
                                    ASSIGNMENT_EXPRESSION
                                      THEN_ELSE_EXPRESSION
                                        DISJUNCTION_EXPRESSION
                                          CONJUNCTION_EXPRESSION
                                            LOGICAL_NEGATION_EXPRESSION
                                              EQUALITY_EXPRESSION
                                                COMPARISON_EXPRESSION
                                                  EXISTENCE_EMPTINESS_EXPRESSION
                                                    RANGE_INTERVAL_ENTRY_EXPRESSION
                                                      ADDITIVE_EXPRESSION
                                                        MULTIPLICATIVE_EXPRESSION
                                                          DEFAULT_EXPRESSION
                                                            NEGATION_COMPLEMENT_EXPRESSION
                                                              EXPONENTIATION_EXPRESSION
                                                                INCREMENT_DECREMENT_EXPRESSION
                                                                  POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                                    PRIMARY
                                                                      BASE
                                                                        BASE_REFERENCE
                                                                          MEMBER_REFERENCE
                                                                            MEMBER_NAME
                                                                              PsiElement(LIDENTIFIER)('i')
                              PsiElement(;)(';')
                        PsiElement(})('}')
                    CASE_BLOCK
                      PsiElement(case)('case')
                      PsiElement(()('(')
                      CASE_ITEM
                        IS_CASE_CONDITION
                          PsiElement(is)('is')
                          TYPE
                            UNION_TYPE
                              INTERSECTION_TYPE
                                ENTRY_TYPE
                                  ABBREVIATED_TYPE
                                    QUALIFIED_TYPE
                                      TYPE_NAME_WITH_ARGUMENTS
                                        TYPE_NAME
                                          PsiElement(UIDENTIFIER)('J3')
                      PsiElement())(')')
                      BLOCK
                        PsiElement({)('{')
                        PsiElement(})('}')
          DECLARATION_OR_STATEMENT
            COMPILER_ANNOTATIONS
              COMPILER_ANNOTATION
                PsiElement(@)('@')
                ANNOTATION_NAME
                  PsiElement(LIDENTIFIER)('error')
            STATEMENT
              CONTROL_STATEMENT
                SWITCH_CASE_ELSE
                  SWITCH_HEADER
                    PsiElement(switch)('switch')
                    PsiElement(()('(')
                    EXPRESSION
                      ASSIGNMENT_EXPRESSION
                        THEN_ELSE_EXPRESSION
                          DISJUNCTION_EXPRESSION
                            CONJUNCTION_EXPRESSION
                              LOGICAL_NEGATION_EXPRESSION
                                EQUALITY_EXPRESSION
                                  COMPARISON_EXPRESSION
                                    EXISTENCE_EMPTINESS_EXPRESSION
                                      RANGE_INTERVAL_ENTRY_EXPRESSION
                                        ADDITIVE_EXPRESSION
                                          MULTIPLICATIVE_EXPRESSION
                                            DEFAULT_EXPRESSION
                                              NEGATION_COMPLEMENT_EXPRESSION
                                                EXPONENTIATION_EXPRESSION
                                                  INCREMENT_DECREMENT_EXPRESSION
                                                    POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                      PRIMARY
                                                        BASE
                                                          BASE_REFERENCE
                                                            MEMBER_REFERENCE
                                                              MEMBER_NAME
                                                                PsiElement(LIDENTIFIER)('i')
                    PsiElement())(')')
                  CASES
                    CASE_BLOCK
                      PsiElement(case)('case')
                      PsiElement(()('(')
                      CASE_ITEM
                        IS_CASE_CONDITION
                          PsiElement(is)('is')
                          TYPE
                            UNION_TYPE
                              INTERSECTION_TYPE
                                ENTRY_TYPE
                                  ABBREVIATED_TYPE
                                    QUALIFIED_TYPE
                                      TYPE_NAME_WITH_ARGUMENTS
                                        TYPE_NAME
                                          PsiElement(UIDENTIFIER)('J2')
                      PsiElement())(')')
                      BLOCK
                        PsiElement({)('{')
                        PsiElement(})('}')
                    CASE_BLOCK
                      PsiElement(case)('case')
                      PsiElement(()('(')
                      CASE_ITEM
                        IS_CASE_CONDITION
                          PsiElement(is)('is')
                          TYPE
                            UNION_TYPE
                              INTERSECTION_TYPE
                                ENTRY_TYPE
                                  ABBREVIATED_TYPE
                                    QUALIFIED_TYPE
                                      TYPE_NAME_WITH_ARGUMENTS
                                        TYPE_NAME
                                          PsiElement(UIDENTIFIER)('J3')
                      PsiElement())(')')
                      BLOCK
                        PsiElement({)('{')
                        PsiElement(})('}')
                    CASE_BLOCK
                      PsiElement(case)('case')
                      PsiElement(()('(')
                      CASE_ITEM
                        IS_CASE_CONDITION
                          PsiElement(is)('is')
                          TYPE
                            UNION_TYPE
                              INTERSECTION_TYPE
                                ENTRY_TYPE
                                  ABBREVIATED_TYPE
                                    QUALIFIED_TYPE
                                      TYPE_NAME_WITH_ARGUMENTS
                                        TYPE_NAME
                                          PsiElement(UIDENTIFIER)('Nothing')
                      PsiElement())(')')
                      BLOCK
                        PsiElement({)('{')
                        PsiElement(})('}')
          DECLARATION_OR_STATEMENT
            COMPILER_ANNOTATIONS
              COMPILER_ANNOTATION
                PsiElement(@)('@')
                ANNOTATION_NAME
                  PsiElement(LIDENTIFIER)('error')
            STATEMENT
              CONTROL_STATEMENT
                SWITCH_CASE_ELSE
                  SWITCH_HEADER
                    PsiElement(switch)('switch')
                    PsiElement(()('(')
                    EXPRESSION
                      ASSIGNMENT_EXPRESSION
                        THEN_ELSE_EXPRESSION
                          DISJUNCTION_EXPRESSION
                            CONJUNCTION_EXPRESSION
                              LOGICAL_NEGATION_EXPRESSION
                                EQUALITY_EXPRESSION
                                  COMPARISON_EXPRESSION
                                    EXISTENCE_EMPTINESS_EXPRESSION
                                      RANGE_INTERVAL_ENTRY_EXPRESSION
                                        ADDITIVE_EXPRESSION
                                          MULTIPLICATIVE_EXPRESSION
                                            DEFAULT_EXPRESSION
                                              NEGATION_COMPLEMENT_EXPRESSION
                                                EXPONENTIATION_EXPRESSION
                                                  INCREMENT_DECREMENT_EXPRESSION
                                                    POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                      PRIMARY
                                                        BASE
                                                          BASE_REFERENCE
                                                            MEMBER_REFERENCE
                                                              MEMBER_NAME
                                                                PsiElement(LIDENTIFIER)('i')
                    PsiElement())(')')
                  CASES
                    CASE_BLOCK
                      PsiElement(case)('case')
                      PsiElement(()('(')
                      CASE_ITEM
                        IS_CASE_CONDITION
                          PsiElement(is)('is')
                          TYPE
                            UNION_TYPE
                              INTERSECTION_TYPE
                                ENTRY_TYPE
                                  ABBREVIATED_TYPE
                                    QUALIFIED_TYPE
                                      TYPE_NAME_WITH_ARGUMENTS
                                        TYPE_NAME
                                          PsiElement(UIDENTIFIER)('J2')
                      PsiElement())(')')
                      BLOCK
                        PsiElement({)('{')
                        PsiElement(})('}')
                    CASE_BLOCK
                      PsiElement(case)('case')
                      PsiElement(()('(')
                      CASE_ITEM
                        IS_CASE_CONDITION
                          PsiElement(is)('is')
                          TYPE
                            UNION_TYPE
                              INTERSECTION_TYPE
                                ENTRY_TYPE
                                  ABBREVIATED_TYPE
                                    QUALIFIED_TYPE
                                      TYPE_NAME_WITH_ARGUMENTS
                                        TYPE_NAME
                                          PsiElement(UIDENTIFIER)('J3')
                      PsiElement())(')')
                      BLOCK
                        PsiElement({)('{')
                        PsiElement(})('}')
                    CASE_BLOCK
                      PsiElement(case)('case')
                      PsiElement(()('(')
                      CASE_ITEM
                        MATCH_CASE_CONDITION
                          EXPRESSIONS
                            EXPRESSION
                              ASSIGNMENT_EXPRESSION
                                THEN_ELSE_EXPRESSION
                                  DISJUNCTION_EXPRESSION
                                    CONJUNCTION_EXPRESSION
                                      LOGICAL_NEGATION_EXPRESSION
                                        EQUALITY_EXPRESSION
                                          COMPARISON_EXPRESSION
                                            EXISTENCE_EMPTINESS_EXPRESSION
                                              RANGE_INTERVAL_ENTRY_EXPRESSION
                                                ADDITIVE_EXPRESSION
                                                  MULTIPLICATIVE_EXPRESSION
                                                    DEFAULT_EXPRESSION
                                                      NEGATION_COMPLEMENT_EXPRESSION
                                                        EXPONENTIATION_EXPRESSION
                                                          INCREMENT_DECREMENT_EXPRESSION
                                                            POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                              PRIMARY
                                                                BASE
                                                                  BASE_REFERENCE
                                                                    MEMBER_REFERENCE
                                                                      MEMBER_NAME
                                                                        PsiElement(LIDENTIFIER)('null')
                      PsiElement())(')')
                      BLOCK
                        PsiElement({)('{')
                        PsiElement(})('}')
          DECLARATION_OR_STATEMENT
            COMPILER_ANNOTATIONS
              <empty list>
            DECLARATION
              ANNOTATIONS
                <empty list>
              TYPED_METHOD_OR_ATTRIBUTE_DECLARATION
                TYPE
                  UNION_TYPE
                    INTERSECTION_TYPE
                      ENTRY_TYPE
                        ABBREVIATED_TYPE
                          QUALIFIED_TYPE
                            TYPE_NAME_WITH_ARGUMENTS
                              TYPE_NAME
                                PsiElement(UIDENTIFIER)('J4')
                          PsiElement(?)('?')
                MEMBER_NAME_DECLARATION
                  MEMBER_NAME
                    PsiElement(LIDENTIFIER)('mi')
                SPECIFIER
                  PsiElement(=)('=')
                  FUNCTION_OR_EXPRESSION
                    EXPRESSION
                      ASSIGNMENT_EXPRESSION
                        THEN_ELSE_EXPRESSION
                          DISJUNCTION_EXPRESSION
                            CONJUNCTION_EXPRESSION
                              LOGICAL_NEGATION_EXPRESSION
                                EQUALITY_EXPRESSION
                                  COMPARISON_EXPRESSION
                                    EXISTENCE_EMPTINESS_EXPRESSION
                                      RANGE_INTERVAL_ENTRY_EXPRESSION
                                        ADDITIVE_EXPRESSION
                                          MULTIPLICATIVE_EXPRESSION
                                            DEFAULT_EXPRESSION
                                              NEGATION_COMPLEMENT_EXPRESSION
                                                EXPONENTIATION_EXPRESSION
                                                  INCREMENT_DECREMENT_EXPRESSION
                                                    POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                      PRIMARY
                                                        BASE
                                                          BASE_REFERENCE
                                                            MEMBER_REFERENCE
                                                              MEMBER_NAME
                                                                PsiElement(LIDENTIFIER)('null')
                PsiElement(;)(';')
          DECLARATION_OR_STATEMENT
            COMPILER_ANNOTATIONS
              COMPILER_ANNOTATION
                PsiElement(@)('@')
                ANNOTATION_NAME
                  PsiElement(LIDENTIFIER)('error')
            STATEMENT
              CONTROL_STATEMENT
                SWITCH_CASE_ELSE
                  SWITCH_HEADER
                    PsiElement(switch)('switch')
                    PsiElement(()('(')
                    EXPRESSION
                      ASSIGNMENT_EXPRESSION
                        THEN_ELSE_EXPRESSION
                          DISJUNCTION_EXPRESSION
                            CONJUNCTION_EXPRESSION
                              LOGICAL_NEGATION_EXPRESSION
                                EQUALITY_EXPRESSION
                                  COMPARISON_EXPRESSION
                                    EXISTENCE_EMPTINESS_EXPRESSION
                                      RANGE_INTERVAL_ENTRY_EXPRESSION
                                        ADDITIVE_EXPRESSION
                                          MULTIPLICATIVE_EXPRESSION
                                            DEFAULT_EXPRESSION
                                              NEGATION_COMPLEMENT_EXPRESSION
                                                EXPONENTIATION_EXPRESSION
                                                  INCREMENT_DECREMENT_EXPRESSION
                                                    POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                      PRIMARY
                                                        BASE
                                                          BASE_REFERENCE
                                                            MEMBER_REFERENCE
                                                              MEMBER_NAME
                                                                PsiElement(LIDENTIFIER)('mi')
                    PsiElement())(')')
                  CASES
                    CASE_BLOCK
                      PsiElement(case)('case')
                      PsiElement(()('(')
                      CASE_ITEM
                        IS_CASE_CONDITION
                          PsiElement(is)('is')
                          TYPE
                            UNION_TYPE
                              INTERSECTION_TYPE
                                ENTRY_TYPE
                                  ABBREVIATED_TYPE
                                    QUALIFIED_TYPE
                                      TYPE_NAME_WITH_ARGUMENTS
                                        TYPE_NAME
                                          PsiElement(UIDENTIFIER)('J2')
                      PsiElement())(')')
                      BLOCK
                        PsiElement({)('{')
                        PsiElement(})('}')
                    CASE_BLOCK
                      PsiElement(case)('case')
                      PsiElement(()('(')
                      CASE_ITEM
                        IS_CASE_CONDITION
                          PsiElement(is)('is')
                          TYPE
                            UNION_TYPE
                              INTERSECTION_TYPE
                                ENTRY_TYPE
                                  ABBREVIATED_TYPE
                                    QUALIFIED_TYPE
                                      TYPE_NAME_WITH_ARGUMENTS
                                        TYPE_NAME
                                          PsiElement(UIDENTIFIER)('J3')
                      PsiElement())(')')
                      BLOCK
                        PsiElement({)('{')
                        PsiElement(})('}')
          DECLARATION_OR_STATEMENT
            COMPILER_ANNOTATIONS
              <empty list>
            STATEMENT
              CONTROL_STATEMENT
                SWITCH_CASE_ELSE
                  SWITCH_HEADER
                    PsiElement(switch)('switch')
                    PsiElement(()('(')
                    EXPRESSION
                      ASSIGNMENT_EXPRESSION
                        THEN_ELSE_EXPRESSION
                          DISJUNCTION_EXPRESSION
                            CONJUNCTION_EXPRESSION
                              LOGICAL_NEGATION_EXPRESSION
                                EQUALITY_EXPRESSION
                                  COMPARISON_EXPRESSION
                                    EXISTENCE_EMPTINESS_EXPRESSION
                                      RANGE_INTERVAL_ENTRY_EXPRESSION
                                        ADDITIVE_EXPRESSION
                                          MULTIPLICATIVE_EXPRESSION
                                            DEFAULT_EXPRESSION
                                              NEGATION_COMPLEMENT_EXPRESSION
                                                EXPONENTIATION_EXPRESSION
                                                  INCREMENT_DECREMENT_EXPRESSION
                                                    POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                      PRIMARY
                                                        BASE
                                                          BASE_REFERENCE
                                                            MEMBER_REFERENCE
                                                              MEMBER_NAME
                                                                PsiElement(LIDENTIFIER)('mi')
                    PsiElement())(')')
                  CASES
                    CASE_BLOCK
                      PsiElement(case)('case')
                      PsiElement(()('(')
                      CASE_ITEM
                        IS_CASE_CONDITION
                          PsiElement(is)('is')
                          TYPE
                            UNION_TYPE
                              INTERSECTION_TYPE
                                ENTRY_TYPE
                                  ABBREVIATED_TYPE
                                    QUALIFIED_TYPE
                                      TYPE_NAME_WITH_ARGUMENTS
                                        TYPE_NAME
                                          PsiElement(UIDENTIFIER)('J2')
                      PsiElement())(')')
                      BLOCK
                        PsiElement({)('{')
                        PsiElement(})('}')
                    CASE_BLOCK
                      PsiElement(case)('case')
                      PsiElement(()('(')
                      CASE_ITEM
                        IS_CASE_CONDITION
                          PsiElement(is)('is')
                          TYPE
                            UNION_TYPE
                              INTERSECTION_TYPE
                                ENTRY_TYPE
                                  ABBREVIATED_TYPE
                                    QUALIFIED_TYPE
                                      TYPE_NAME_WITH_ARGUMENTS
                                        TYPE_NAME
                                          PsiElement(UIDENTIFIER)('J3')
                      PsiElement())(')')
                      BLOCK
                        PsiElement({)('{')
                        PsiElement(})('}')
                    CASE_BLOCK
                      PsiElement(case)('case')
                      PsiElement(()('(')
                      CASE_ITEM
                        MATCH_CASE_CONDITION
                          EXPRESSIONS
                            EXPRESSION
                              ASSIGNMENT_EXPRESSION
                                THEN_ELSE_EXPRESSION
                                  DISJUNCTION_EXPRESSION
                                    CONJUNCTION_EXPRESSION
                                      LOGICAL_NEGATION_EXPRESSION
                                        EQUALITY_EXPRESSION
                                          COMPARISON_EXPRESSION
                                            EXISTENCE_EMPTINESS_EXPRESSION
                                              RANGE_INTERVAL_ENTRY_EXPRESSION
                                                ADDITIVE_EXPRESSION
                                                  MULTIPLICATIVE_EXPRESSION
                                                    DEFAULT_EXPRESSION
                                                      NEGATION_COMPLEMENT_EXPRESSION
                                                        EXPONENTIATION_EXPRESSION
                                                          INCREMENT_DECREMENT_EXPRESSION
                                                            POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                              PRIMARY
                                                                BASE
                                                                  BASE_REFERENCE
                                                                    MEMBER_REFERENCE
                                                                      MEMBER_NAME
                                                                        PsiElement(LIDENTIFIER)('null')
                      PsiElement())(')')
                      BLOCK
                        PsiElement({)('{')
                        PsiElement(})('}')
          DECLARATION_OR_STATEMENT
            COMPILER_ANNOTATIONS
              <empty list>
            STATEMENT
              CONTROL_STATEMENT
                SWITCH_CASE_ELSE
                  SWITCH_HEADER
                    PsiElement(switch)('switch')
                    PsiElement(()('(')
                    EXPRESSION
                      ASSIGNMENT_EXPRESSION
                        THEN_ELSE_EXPRESSION
                          DISJUNCTION_EXPRESSION
                            CONJUNCTION_EXPRESSION
                              LOGICAL_NEGATION_EXPRESSION
                                EQUALITY_EXPRESSION
                                  COMPARISON_EXPRESSION
                                    EXISTENCE_EMPTINESS_EXPRESSION
                                      RANGE_INTERVAL_ENTRY_EXPRESSION
                                        ADDITIVE_EXPRESSION
                                          MULTIPLICATIVE_EXPRESSION
                                            DEFAULT_EXPRESSION
                                              NEGATION_COMPLEMENT_EXPRESSION
                                                EXPONENTIATION_EXPRESSION
                                                  INCREMENT_DECREMENT_EXPRESSION
                                                    POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                      PRIMARY
                                                        BASE
                                                          BASE_REFERENCE
                                                            MEMBER_REFERENCE
                                                              MEMBER_NAME
                                                                PsiElement(LIDENTIFIER)('mi')
                    PsiElement())(')')
                  CASES
                    CASE_BLOCK
                      PsiElement(case)('case')
                      PsiElement(()('(')
                      CASE_ITEM
                        IS_CASE_CONDITION
                          PsiElement(is)('is')
                          TYPE
                            UNION_TYPE
                              INTERSECTION_TYPE
                                ENTRY_TYPE
                                  ABBREVIATED_TYPE
                                    QUALIFIED_TYPE
                                      TYPE_NAME_WITH_ARGUMENTS
                                        TYPE_NAME
                                          PsiElement(UIDENTIFIER)('J2')
                      PsiElement())(')')
                      BLOCK
                        PsiElement({)('{')
                        DECLARATION_OR_STATEMENT
                          COMPILER_ANNOTATIONS
                            COMPILER_ANNOTATION
                              PsiElement(@)('@')
                              ANNOTATION_NAME
                                PsiElement(LIDENTIFIER)('type')
                              PsiElement([)('[')
                              MY_STRING_LITERAL
                                PsiElement(STRING_LITERAL)('"J4&J2"')
                              PsiElement(])(']')
                          DECLARATION
                            ANNOTATIONS
                              <empty list>
                            INFERRED_ATTRIBUTE_DECLARATION
                              PsiElement(value)('value')
                              MEMBER_NAME_DECLARATION
                                MEMBER_NAME
                                  PsiElement(LIDENTIFIER)('ii')
                              SPECIFIER
                                PsiElement(=)('=')
                                FUNCTION_OR_EXPRESSION
                                  EXPRESSION
                                    ASSIGNMENT_EXPRESSION
                                      THEN_ELSE_EXPRESSION
                                        DISJUNCTION_EXPRESSION
                                          CONJUNCTION_EXPRESSION
                                            LOGICAL_NEGATION_EXPRESSION
                                              EQUALITY_EXPRESSION
                                                COMPARISON_EXPRESSION
                                                  EXISTENCE_EMPTINESS_EXPRESSION
                                                    RANGE_INTERVAL_ENTRY_EXPRESSION
                                                      ADDITIVE_EXPRESSION
                                                        MULTIPLICATIVE_EXPRESSION
                                                          DEFAULT_EXPRESSION
                                                            NEGATION_COMPLEMENT_EXPRESSION
                                                              EXPONENTIATION_EXPRESSION
                                                                INCREMENT_DECREMENT_EXPRESSION
                                                                  POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                                    PRIMARY
                                                                      BASE
                                                                        BASE_REFERENCE
                                                                          MEMBER_REFERENCE
                                                                            MEMBER_NAME
                                                                              PsiElement(LIDENTIFIER)('mi')
                              PsiElement(;)(';')
                        PsiElement(})('}')
                    CASE_BLOCK
                      PsiElement(case)('case')
                      PsiElement(()('(')
                      CASE_ITEM
                        IS_CASE_CONDITION
                          PsiElement(is)('is')
                          TYPE
                            UNION_TYPE
                              INTERSECTION_TYPE
                                ENTRY_TYPE
                                  ABBREVIATED_TYPE
                                    QUALIFIED_TYPE
                                      TYPE_NAME_WITH_ARGUMENTS
                                        TYPE_NAME
                                          PsiElement(UIDENTIFIER)('J3')
                      PsiElement())(')')
                      BLOCK
                        PsiElement({)('{')
                        PsiElement(})('}')
                    CASE_BLOCK
                      PsiElement(case)('case')
                      PsiElement(()('(')
                      CASE_ITEM
                        IS_CASE_CONDITION
                          PsiElement(is)('is')
                          TYPE
                            UNION_TYPE
                              INTERSECTION_TYPE
                                ENTRY_TYPE
                                  ABBREVIATED_TYPE
                                    QUALIFIED_TYPE
                                      TYPE_NAME_WITH_ARGUMENTS
                                        TYPE_NAME
                                          PsiElement(UIDENTIFIER)('Nothing')
                      PsiElement())(')')
                      BLOCK
                        PsiElement({)('{')
                        PsiElement(})('}')
          PsiElement(})('}')
    COMPILER_ANNOTATIONS
      <empty list>
    DECLARATION
      ANNOTATIONS
        <empty list>
      INTERFACE_DECLARATION
        PsiElement(interface)('interface')
        TYPE_NAME_DECLARATION
          TYPE_NAME
            PsiElement(UIDENTIFIER)('Rsrc')
        CASE_TYPES
          PsiElement(of)('of')
          CASE_TYPE
            QUALIFIED_TYPE
              TYPE_NAME_WITH_ARGUMENTS
                TYPE_NAME
                  PsiElement(UIDENTIFIER)('File')
          PsiElement(|)('|')
          CASE_TYPE
            QUALIFIED_TYPE
              TYPE_NAME_WITH_ARGUMENTS
                TYPE_NAME
                  PsiElement(UIDENTIFIER)('Dir')
          PsiElement(|)('|')
          CASE_TYPE
            QUALIFIED_TYPE
              TYPE_NAME_WITH_ARGUMENTS
                TYPE_NAME
                  PsiElement(UIDENTIFIER)('Link')
        INTERFACE_BODY
          PsiElement({)('{')
          PsiElement(})('}')
    COMPILER_ANNOTATIONS
      <empty list>
    DECLARATION
      ANNOTATIONS
        <empty list>
      INTERFACE_DECLARATION
        PsiElement(interface)('interface')
        TYPE_NAME_DECLARATION
          TYPE_NAME
            PsiElement(UIDENTIFIER)('File')
        SATISFIED_TYPES
          PsiElement(satisfies)('satisfies')
          QUALIFIED_TYPE
            TYPE_NAME_WITH_ARGUMENTS
              TYPE_NAME
                PsiElement(UIDENTIFIER)('Rsrc')
        INTERFACE_BODY
          PsiElement({)('{')
          PsiElement(})('}')
    COMPILER_ANNOTATIONS
      <empty list>
    DECLARATION
      ANNOTATIONS
        <empty list>
      INTERFACE_DECLARATION
        PsiElement(interface)('interface')
        TYPE_NAME_DECLARATION
          TYPE_NAME
            PsiElement(UIDENTIFIER)('Dir')
        SATISFIED_TYPES
          PsiElement(satisfies)('satisfies')
          QUALIFIED_TYPE
            TYPE_NAME_WITH_ARGUMENTS
              TYPE_NAME
                PsiElement(UIDENTIFIER)('Rsrc')
        INTERFACE_BODY
          PsiElement({)('{')
          PsiElement(})('}')
    COMPILER_ANNOTATIONS
      <empty list>
    DECLARATION
      ANNOTATIONS
        <empty list>
      INTERFACE_DECLARATION
        PsiElement(interface)('interface')
        TYPE_NAME_DECLARATION
          TYPE_NAME
            PsiElement(UIDENTIFIER)('Link')
        SATISFIED_TYPES
          PsiElement(satisfies)('satisfies')
          QUALIFIED_TYPE
            TYPE_NAME_WITH_ARGUMENTS
              TYPE_NAME
                PsiElement(UIDENTIFIER)('Rsrc')
        INTERFACE_BODY
          PsiElement({)('{')
          PsiElement(})('}')
    COMPILER_ANNOTATIONS
      <empty list>
    DECLARATION
      ANNOTATIONS
        <empty list>
      VOID_OR_INFERRED_METHOD_DECLARATION
        PsiElement(void)('void')
        MEMBER_NAME_DECLARATION
          MEMBER_NAME
            PsiElement(LIDENTIFIER)('use')
        PARAMETERS
          PsiElement(()('(')
          PsiElement())(')')
        BLOCK
          PsiElement({)('{')
          DECLARATION_OR_STATEMENT
            COMPILER_ANNOTATIONS
              <empty list>
            DECLARATION
              ANNOTATIONS
                <empty list>
              TYPED_METHOD_OR_ATTRIBUTE_DECLARATION
                TYPE
                  UNION_TYPE
                    INTERSECTION_TYPE
                      ENTRY_TYPE
                        ABBREVIATED_TYPE
                          QUALIFIED_TYPE
                            TYPE_NAME_WITH_ARGUMENTS
                              TYPE_NAME
                                PsiElement(UIDENTIFIER)('File')
                    PsiElement(|)('|')
                    INTERSECTION_TYPE
                      ENTRY_TYPE
                        ABBREVIATED_TYPE
                          QUALIFIED_TYPE
                            TYPE_NAME_WITH_ARGUMENTS
                              TYPE_NAME
                                PsiElement(UIDENTIFIER)('Link')
                MEMBER_NAME_DECLARATION
                  MEMBER_NAME
                    PsiElement(LIDENTIFIER)('x')
                SPECIFIER
                  PsiElement(=)('=')
                  FUNCTION_OR_EXPRESSION
                    EXPRESSION
                      ASSIGNMENT_EXPRESSION
                        THEN_ELSE_EXPRESSION
                          DISJUNCTION_EXPRESSION
                            CONJUNCTION_EXPRESSION
                              LOGICAL_NEGATION_EXPRESSION
                                EQUALITY_EXPRESSION
                                  COMPARISON_EXPRESSION
                                    EXISTENCE_EMPTINESS_EXPRESSION
                                      RANGE_INTERVAL_ENTRY_EXPRESSION
                                        ADDITIVE_EXPRESSION
                                          MULTIPLICATIVE_EXPRESSION
                                            DEFAULT_EXPRESSION
                                              NEGATION_COMPLEMENT_EXPRESSION
                                                EXPONENTIATION_EXPRESSION
                                                  INCREMENT_DECREMENT_EXPRESSION
                                                    POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                      PRIMARY
                                                        BASE
                                                          BASE_REFERENCE
                                                            MEMBER_REFERENCE
                                                              MEMBER_NAME
                                                                PsiElement(LIDENTIFIER)('bottom')
                PsiElement(;)(';')
          DECLARATION_OR_STATEMENT
            COMPILER_ANNOTATIONS
              <empty list>
            STATEMENT
              CONTROL_STATEMENT
                SWITCH_CASE_ELSE
                  SWITCH_HEADER
                    PsiElement(switch)('switch')
                    PsiElement(()('(')
                    EXPRESSION
                      ASSIGNMENT_EXPRESSION
                        THEN_ELSE_EXPRESSION
                          DISJUNCTION_EXPRESSION
                            CONJUNCTION_EXPRESSION
                              LOGICAL_NEGATION_EXPRESSION
                                EQUALITY_EXPRESSION
                                  COMPARISON_EXPRESSION
                                    EXISTENCE_EMPTINESS_EXPRESSION
                                      RANGE_INTERVAL_ENTRY_EXPRESSION
                                        ADDITIVE_EXPRESSION
                                          MULTIPLICATIVE_EXPRESSION
                                            DEFAULT_EXPRESSION
                                              NEGATION_COMPLEMENT_EXPRESSION
                                                EXPONENTIATION_EXPRESSION
                                                  INCREMENT_DECREMENT_EXPRESSION
                                                    POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                      PRIMARY
                                                        BASE
                                                          BASE_REFERENCE
                                                            MEMBER_REFERENCE
                                                              MEMBER_NAME
                                                                PsiElement(LIDENTIFIER)('x')
                    PsiElement())(')')
                  CASES
                    CASE_BLOCK
                      PsiElement(case)('case')
                      PsiElement(()('(')
                      CASE_ITEM
                        IS_CASE_CONDITION
                          PsiElement(is)('is')
                          TYPE
                            UNION_TYPE
                              INTERSECTION_TYPE
                                ENTRY_TYPE
                                  ABBREVIATED_TYPE
                                    QUALIFIED_TYPE
                                      TYPE_NAME_WITH_ARGUMENTS
                                        TYPE_NAME
                                          PsiElement(UIDENTIFIER)('File')
                      PsiElement())(')')
                      BLOCK
                        PsiElement({)('{')
                        PsiElement(})('}')
                    CASE_BLOCK
                      PsiElement(case)('case')
                      PsiElement(()('(')
                      CASE_ITEM
                        IS_CASE_CONDITION
                          PsiElement(is)('is')
                          TYPE
                            UNION_TYPE
                              INTERSECTION_TYPE
                                ENTRY_TYPE
                                  ABBREVIATED_TYPE
                                    QUALIFIED_TYPE
                                      TYPE_NAME_WITH_ARGUMENTS
                                        TYPE_NAME
                                          PsiElement(UIDENTIFIER)('Link')
                      PsiElement())(')')
                      BLOCK
                        PsiElement({)('{')
                        PsiElement(})('}')
          DECLARATION_OR_STATEMENT
            COMPILER_ANNOTATIONS
              <empty list>
            DECLARATION
              ANNOTATIONS
                <empty list>
              TYPED_METHOD_OR_ATTRIBUTE_DECLARATION
                TYPE
                  UNION_TYPE
                    INTERSECTION_TYPE
                      ENTRY_TYPE
                        ABBREVIATED_TYPE
                          QUALIFIED_TYPE
                            TYPE_NAME_WITH_ARGUMENTS
                              TYPE_NAME
                                PsiElement(UIDENTIFIER)('File')
                    PsiElement(|)('|')
                    INTERSECTION_TYPE
                      ENTRY_TYPE
                        ABBREVIATED_TYPE
                          QUALIFIED_TYPE
                            TYPE_NAME_WITH_ARGUMENTS
                              TYPE_NAME
                                PsiElement(UIDENTIFIER)('Dir')
                    PsiElement(|)('|')
                    INTERSECTION_TYPE
                      ENTRY_TYPE
                        ABBREVIATED_TYPE
                          QUALIFIED_TYPE
                            TYPE_NAME_WITH_ARGUMENTS
                              TYPE_NAME
                                PsiElement(UIDENTIFIER)('Link')
                MEMBER_NAME_DECLARATION
                  MEMBER_NAME
                    PsiElement(LIDENTIFIER)('y')
                SPECIFIER
                  PsiElement(=)('=')
                  FUNCTION_OR_EXPRESSION
                    EXPRESSION
                      ASSIGNMENT_EXPRESSION
                        THEN_ELSE_EXPRESSION
                          DISJUNCTION_EXPRESSION
                            CONJUNCTION_EXPRESSION
                              LOGICAL_NEGATION_EXPRESSION
                                EQUALITY_EXPRESSION
                                  COMPARISON_EXPRESSION
                                    EXISTENCE_EMPTINESS_EXPRESSION
                                      RANGE_INTERVAL_ENTRY_EXPRESSION
                                        ADDITIVE_EXPRESSION
                                          MULTIPLICATIVE_EXPRESSION
                                            DEFAULT_EXPRESSION
                                              NEGATION_COMPLEMENT_EXPRESSION
                                                EXPONENTIATION_EXPRESSION
                                                  INCREMENT_DECREMENT_EXPRESSION
                                                    POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                      PRIMARY
                                                        BASE
                                                          BASE_REFERENCE
                                                            MEMBER_REFERENCE
                                                              MEMBER_NAME
                                                                PsiElement(LIDENTIFIER)('bottom')
                PsiElement(;)(';')
          DECLARATION_OR_STATEMENT
            COMPILER_ANNOTATIONS
              <empty list>
            STATEMENT
              CONTROL_STATEMENT
                SWITCH_CASE_ELSE
                  SWITCH_HEADER
                    PsiElement(switch)('switch')
                    PsiElement(()('(')
                    EXPRESSION
                      ASSIGNMENT_EXPRESSION
                        THEN_ELSE_EXPRESSION
                          DISJUNCTION_EXPRESSION
                            CONJUNCTION_EXPRESSION
                              LOGICAL_NEGATION_EXPRESSION
                                EQUALITY_EXPRESSION
                                  COMPARISON_EXPRESSION
                                    EXISTENCE_EMPTINESS_EXPRESSION
                                      RANGE_INTERVAL_ENTRY_EXPRESSION
                                        ADDITIVE_EXPRESSION
                                          MULTIPLICATIVE_EXPRESSION
                                            DEFAULT_EXPRESSION
                                              NEGATION_COMPLEMENT_EXPRESSION
                                                EXPONENTIATION_EXPRESSION
                                                  INCREMENT_DECREMENT_EXPRESSION
                                                    POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                      PRIMARY
                                                        BASE
                                                          BASE_REFERENCE
                                                            MEMBER_REFERENCE
                                                              MEMBER_NAME
                                                                PsiElement(LIDENTIFIER)('y')
                    PsiElement())(')')
                  CASES
                    CASE_BLOCK
                      PsiElement(case)('case')
                      PsiElement(()('(')
                      CASE_ITEM
                        IS_CASE_CONDITION
                          PsiElement(is)('is')
                          TYPE
                            UNION_TYPE
                              INTERSECTION_TYPE
                                ENTRY_TYPE
                                  ABBREVIATED_TYPE
                                    QUALIFIED_TYPE
                                      TYPE_NAME_WITH_ARGUMENTS
                                        TYPE_NAME
                                          PsiElement(UIDENTIFIER)('File')
                              PsiElement(|)('|')
                              INTERSECTION_TYPE
                                ENTRY_TYPE
                                  ABBREVIATED_TYPE
                                    QUALIFIED_TYPE
                                      TYPE_NAME_WITH_ARGUMENTS
                                        TYPE_NAME
                                          PsiElement(UIDENTIFIER)('Dir')
                      PsiElement())(')')
                      BLOCK
                        PsiElement({)('{')
                        PsiElement(})('}')
                    CASE_BLOCK
                      PsiElement(case)('case')
                      PsiElement(()('(')
                      CASE_ITEM
                        IS_CASE_CONDITION
                          PsiElement(is)('is')
                          TYPE
                            UNION_TYPE
                              INTERSECTION_TYPE
                                ENTRY_TYPE
                                  ABBREVIATED_TYPE
                                    QUALIFIED_TYPE
                                      TYPE_NAME_WITH_ARGUMENTS
                                        TYPE_NAME
                                          PsiElement(UIDENTIFIER)('Link')
                      PsiElement())(')')
                      BLOCK
                        PsiElement({)('{')
                        PsiElement(})('}')
          DECLARATION_OR_STATEMENT
            COMPILER_ANNOTATIONS
              <empty list>
            DECLARATION
              ANNOTATIONS
                <empty list>
              TYPED_METHOD_OR_ATTRIBUTE_DECLARATION
                TYPE
                  UNION_TYPE
                    INTERSECTION_TYPE
                      ENTRY_TYPE
                        ABBREVIATED_TYPE
                          QUALIFIED_TYPE
                            TYPE_NAME_WITH_ARGUMENTS
                              TYPE_NAME
                                PsiElement(UIDENTIFIER)('Rsrc')
                MEMBER_NAME_DECLARATION
                  MEMBER_NAME
                    PsiElement(LIDENTIFIER)('z')
                SPECIFIER
                  PsiElement(=)('=')
                  FUNCTION_OR_EXPRESSION
                    EXPRESSION
                      ASSIGNMENT_EXPRESSION
                        THEN_ELSE_EXPRESSION
                          DISJUNCTION_EXPRESSION
                            CONJUNCTION_EXPRESSION
                              LOGICAL_NEGATION_EXPRESSION
                                EQUALITY_EXPRESSION
                                  COMPARISON_EXPRESSION
                                    EXISTENCE_EMPTINESS_EXPRESSION
                                      RANGE_INTERVAL_ENTRY_EXPRESSION
                                        ADDITIVE_EXPRESSION
                                          MULTIPLICATIVE_EXPRESSION
                                            DEFAULT_EXPRESSION
                                              NEGATION_COMPLEMENT_EXPRESSION
                                                EXPONENTIATION_EXPRESSION
                                                  INCREMENT_DECREMENT_EXPRESSION
                                                    POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                      PRIMARY
                                                        BASE
                                                          BASE_REFERENCE
                                                            MEMBER_REFERENCE
                                                              MEMBER_NAME
                                                                PsiElement(LIDENTIFIER)('bottom')
                PsiElement(;)(';')
          DECLARATION_OR_STATEMENT
            COMPILER_ANNOTATIONS
              <empty list>
            STATEMENT
              CONTROL_STATEMENT
                IF_ELSE
                  IF_BLOCK
                    PsiElement(if)('if')
                    CONDITIONS
                      PsiElement(()('(')
                      CONDITION
                        EXISTS_CONDITION
                          BOOLEAN_CONDITION
                            EXPRESSION
                              ASSIGNMENT_EXPRESSION
                                THEN_ELSE_EXPRESSION
                                  DISJUNCTION_EXPRESSION
                                    CONJUNCTION_EXPRESSION
                                      LOGICAL_NEGATION_EXPRESSION
                                        EQUALITY_EXPRESSION
                                          COMPARISON_EXPRESSION
                                            TYPE_OPERATOR
                                              PsiElement(is)('is')
                                            COMPARABLE_TYPE
                                              UNION_TYPE_EXPRESSION
                                                INTERSECTION_TYPE_EXPRESSION
                                                  QUALIFIED_TYPE
                                                    TYPE_NAME_WITH_ARGUMENTS
                                                      TYPE_NAME
                                                        PsiElement(UIDENTIFIER)('File')
                                                PsiElement(|)('|')
                                                INTERSECTION_TYPE_EXPRESSION
                                                  QUALIFIED_TYPE
                                                    TYPE_NAME_WITH_ARGUMENTS
                                                      TYPE_NAME
                                                        PsiElement(UIDENTIFIER)('Dir')
                                            EXISTENCE_EMPTINESS_EXPRESSION
                                              RANGE_INTERVAL_ENTRY_EXPRESSION
                                                ADDITIVE_EXPRESSION
                                                  MULTIPLICATIVE_EXPRESSION
                                                    DEFAULT_EXPRESSION
                                                      NEGATION_COMPLEMENT_EXPRESSION
                                                        EXPONENTIATION_EXPRESSION
                                                          INCREMENT_DECREMENT_EXPRESSION
                                                            POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                              PRIMARY
                                                                BASE
                                                                  BASE_REFERENCE
                                                                    MEMBER_REFERENCE
                                                                      MEMBER_NAME
                                                                        PsiElement(LIDENTIFIER)('z')
                      PsiElement())(')')
                    CONTROL_BLOCK
                      BLOCK
                        PsiElement({)('{')
                        DECLARATION_OR_STATEMENT
                          COMPILER_ANNOTATIONS
                            <empty list>
                          STATEMENT
                            CONTROL_STATEMENT
                              SWITCH_CASE_ELSE
                                SWITCH_HEADER
                                  PsiElement(switch)('switch')
                                  PsiElement(()('(')
                                  EXPRESSION
                                    ASSIGNMENT_EXPRESSION
                                      THEN_ELSE_EXPRESSION
                                        DISJUNCTION_EXPRESSION
                                          CONJUNCTION_EXPRESSION
                                            LOGICAL_NEGATION_EXPRESSION
                                              EQUALITY_EXPRESSION
                                                COMPARISON_EXPRESSION
                                                  EXISTENCE_EMPTINESS_EXPRESSION
                                                    RANGE_INTERVAL_ENTRY_EXPRESSION
                                                      ADDITIVE_EXPRESSION
                                                        MULTIPLICATIVE_EXPRESSION
                                                          DEFAULT_EXPRESSION
                                                            NEGATION_COMPLEMENT_EXPRESSION
                                                              EXPONENTIATION_EXPRESSION
                                                                INCREMENT_DECREMENT_EXPRESSION
                                                                  POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                                    PRIMARY
                                                                      BASE
                                                                        BASE_REFERENCE
                                                                          MEMBER_REFERENCE
                                                                            MEMBER_NAME
                                                                              PsiElement(LIDENTIFIER)('z')
                                  PsiElement())(')')
                                CASES
                                  CASE_BLOCK
                                    PsiElement(case)('case')
                                    PsiElement(()('(')
                                    CASE_ITEM
                                      IS_CASE_CONDITION
                                        PsiElement(is)('is')
                                        TYPE
                                          UNION_TYPE
                                            INTERSECTION_TYPE
                                              ENTRY_TYPE
                                                ABBREVIATED_TYPE
                                                  QUALIFIED_TYPE
                                                    TYPE_NAME_WITH_ARGUMENTS
                                                      TYPE_NAME
                                                        PsiElement(UIDENTIFIER)('File')
                                    PsiElement())(')')
                                    BLOCK
                                      PsiElement({)('{')
                                      PsiElement(})('}')
                                  CASE_BLOCK
                                    PsiElement(case)('case')
                                    PsiElement(()('(')
                                    CASE_ITEM
                                      IS_CASE_CONDITION
                                        PsiElement(is)('is')
                                        TYPE
                                          UNION_TYPE
                                            INTERSECTION_TYPE
                                              ENTRY_TYPE
                                                ABBREVIATED_TYPE
                                                  QUALIFIED_TYPE
                                                    TYPE_NAME_WITH_ARGUMENTS
                                                      TYPE_NAME
                                                        PsiElement(UIDENTIFIER)('Dir')
                                    PsiElement())(')')
                                    BLOCK
                                      PsiElement({)('{')
                                      PsiElement(})('}')
                        PsiElement(})('}')
          PsiElement(})('}')
    COMPILER_ANNOTATIONS
      <empty list>
    DECLARATION
      ANNOTATIONS
        ANNOTATION
          ANNOTATION_NAME
            PsiElement(LIDENTIFIER)('shared')
          ANNOTATION_ARGUMENTS
            LITERAL_ARGUMENTS
              <empty list>
        ANNOTATION
          ANNOTATION_NAME
            PsiElement(LIDENTIFIER)('abstract')
          ANNOTATION_ARGUMENTS
            LITERAL_ARGUMENTS
              <empty list>
      CLASS_DECLARATION
        PsiElement(class)('class')
        TYPE_NAME_DECLARATION
          TYPE_NAME
            PsiElement(UIDENTIFIER)('Status')
        TYPE_PARAMETERS
          PsiElement(<)('<')
          TYPE_PARAMETER
            VARIANCE
              PsiElement(out)('out')
            TYPE_NAME_DECLARATION
              TYPE_NAME
                PsiElement(UIDENTIFIER)('Failure')
          PsiElement(>)('>')
        PARAMETERS
          PsiElement(()('(')
          PsiElement())(')')
        CASE_TYPES
          PsiElement(of)('of')
          CASE_TYPE
            QUALIFIED_TYPE
              TYPE_NAME_WITH_ARGUMENTS
                TYPE_NAME
                  PsiElement(UIDENTIFIER)('Failed')
                TYPE_ARGUMENTS
                  PsiElement(<)('<')
                  TYPE_ARGUMENT
                    TYPE
                      UNION_TYPE
                        INTERSECTION_TYPE
                          ENTRY_TYPE
                            ABBREVIATED_TYPE
                              QUALIFIED_TYPE
                                TYPE_NAME_WITH_ARGUMENTS
                                  TYPE_NAME
                                    PsiElement(UIDENTIFIER)('Failure')
                  PsiElement(>)('>')
          PsiElement(|)('|')
          CASE_TYPE
            QUALIFIED_TYPE
              TYPE_NAME_WITH_ARGUMENTS
                TYPE_NAME
                  PsiElement(UIDENTIFIER)('Succeeded')
                TYPE_ARGUMENTS
                  PsiElement(<)('<')
                  TYPE_ARGUMENT
                    TYPE
                      UNION_TYPE
                        INTERSECTION_TYPE
                          ENTRY_TYPE
                            ABBREVIATED_TYPE
                              QUALIFIED_TYPE
                                TYPE_NAME_WITH_ARGUMENTS
                                  TYPE_NAME
                                    PsiElement(UIDENTIFIER)('Failure')
                  PsiElement(>)('>')
        CLASS_BODY
          PsiElement({)('{')
          PsiElement(})('}')
    COMPILER_ANNOTATIONS
      <empty list>
    DECLARATION
      ANNOTATIONS
        ANNOTATION
          ANNOTATION_NAME
            PsiElement(LIDENTIFIER)('shared')
          ANNOTATION_ARGUMENTS
            LITERAL_ARGUMENTS
              <empty list>
      CLASS_DECLARATION
        PsiElement(class)('class')
        TYPE_NAME_DECLARATION
          TYPE_NAME
            PsiElement(UIDENTIFIER)('Failed')
        TYPE_PARAMETERS
          PsiElement(<)('<')
          TYPE_PARAMETER
            VARIANCE
              PsiElement(out)('out')
            TYPE_NAME_DECLARATION
              TYPE_NAME
                PsiElement(UIDENTIFIER)('Failure')
          PsiElement(>)('>')
        PARAMETERS
          PsiElement(()('(')
          PsiElement())(')')
        EXTENDED_TYPE
          PsiElement(extends)('extends')
          QUALIFIED_TYPE
            TYPE_NAME_WITH_ARGUMENTS
              TYPE_NAME
                PsiElement(UIDENTIFIER)('Status')
              TYPE_ARGUMENTS
                PsiElement(<)('<')
                TYPE_ARGUMENT
                  TYPE
                    UNION_TYPE
                      INTERSECTION_TYPE
                        ENTRY_TYPE
                          ABBREVIATED_TYPE
                            QUALIFIED_TYPE
                              TYPE_NAME_WITH_ARGUMENTS
                                TYPE_NAME
                                  PsiElement(UIDENTIFIER)('Failure')
                PsiElement(>)('>')
          POSITIONAL_ARGUMENTS
            PsiElement(()('(')
            PsiElement())(')')
        CLASS_BODY
          PsiElement({)('{')
          PsiElement(})('}')
    COMPILER_ANNOTATIONS
      <empty list>
    DECLARATION
      ANNOTATIONS
        ANNOTATION
          ANNOTATION_NAME
            PsiElement(LIDENTIFIER)('shared')
          ANNOTATION_ARGUMENTS
            LITERAL_ARGUMENTS
              <empty list>
      CLASS_DECLARATION
        PsiElement(class)('class')
        TYPE_NAME_DECLARATION
          TYPE_NAME
            PsiElement(UIDENTIFIER)('Succeeded')
        TYPE_PARAMETERS
          PsiElement(<)('<')
          TYPE_PARAMETER
            VARIANCE
              PsiElement(out)('out')
            TYPE_NAME_DECLARATION
              TYPE_NAME
                PsiElement(UIDENTIFIER)('Failure')
          PsiElement(>)('>')
        PARAMETERS
          PsiElement(()('(')
          PsiElement())(')')
        EXTENDED_TYPE
          PsiElement(extends)('extends')
          QUALIFIED_TYPE
            TYPE_NAME_WITH_ARGUMENTS
              TYPE_NAME
                PsiElement(UIDENTIFIER)('Status')
              TYPE_ARGUMENTS
                PsiElement(<)('<')
                TYPE_ARGUMENT
                  TYPE
                    UNION_TYPE
                      INTERSECTION_TYPE
                        ENTRY_TYPE
                          ABBREVIATED_TYPE
                            QUALIFIED_TYPE
                              TYPE_NAME_WITH_ARGUMENTS
                                TYPE_NAME
                                  PsiElement(UIDENTIFIER)('Failure')
                PsiElement(>)('>')
          POSITIONAL_ARGUMENTS
            PsiElement(()('(')
            PsiElement())(')')
        CLASS_BODY
          PsiElement({)('{')
          PsiElement(})('}')
    COMPILER_ANNOTATIONS
      <empty list>
    DECLARATION
      ANNOTATIONS
        ANNOTATION
          ANNOTATION_NAME
            PsiElement(LIDENTIFIER)('shared')
          ANNOTATION_ARGUMENTS
            LITERAL_ARGUMENTS
              <empty list>
      VOID_OR_INFERRED_METHOD_DECLARATION
        PsiElement(void)('void')
        MEMBER_NAME_DECLARATION
          MEMBER_NAME
            PsiElement(LIDENTIFIER)('case2')
        PARAMETERS
          PsiElement(()('(')
          PARAMETER_DECLARATION
            COMPILER_ANNOTATIONS
              <empty list>
            ANNOTATIONS
              <empty list>
            PARAMETER
              PARAMETER_TYPE
                TYPE
                  UNION_TYPE
                    INTERSECTION_TYPE
                      ENTRY_TYPE
                        ABBREVIATED_TYPE
                          QUALIFIED_TYPE
                            TYPE_NAME_WITH_ARGUMENTS
                              TYPE_NAME
                                PsiElement(UIDENTIFIER)('Status')
                              TYPE_ARGUMENTS
                                PsiElement(<)('<')
                                TYPE_ARGUMENT
                                  TYPE
                                    UNION_TYPE
                                      INTERSECTION_TYPE
                                        ENTRY_TYPE
                                          ABBREVIATED_TYPE
                                            QUALIFIED_TYPE
                                              TYPE_NAME_WITH_ARGUMENTS
                                                TYPE_NAME
                                                  PsiElement(UIDENTIFIER)('String')
                                PsiElement(>)('>')
              MEMBER_NAME
                PsiElement(LIDENTIFIER)('arg')
          PsiElement())(')')
        BLOCK
          PsiElement({)('{')
          DECLARATION_OR_STATEMENT
            COMPILER_ANNOTATIONS
              <empty list>
            STATEMENT
              CONTROL_STATEMENT
                SWITCH_CASE_ELSE
                  SWITCH_HEADER
                    PsiElement(switch)('switch')
                    PsiElement(()('(')
                    EXPRESSION
                      ASSIGNMENT_EXPRESSION
                        THEN_ELSE_EXPRESSION
                          DISJUNCTION_EXPRESSION
                            CONJUNCTION_EXPRESSION
                              LOGICAL_NEGATION_EXPRESSION
                                EQUALITY_EXPRESSION
                                  COMPARISON_EXPRESSION
                                    EXISTENCE_EMPTINESS_EXPRESSION
                                      RANGE_INTERVAL_ENTRY_EXPRESSION
                                        ADDITIVE_EXPRESSION
                                          MULTIPLICATIVE_EXPRESSION
                                            DEFAULT_EXPRESSION
                                              NEGATION_COMPLEMENT_EXPRESSION
                                                EXPONENTIATION_EXPRESSION
                                                  INCREMENT_DECREMENT_EXPRESSION
                                                    POSTFIX_INCREMENT_DECREMENT_EXPRESSION
                                                      PRIMARY
                                                        BASE
                                                          BASE_REFERENCE
                                                            MEMBER_REFERENCE
                                                              MEMBER_NAME
                                                                PsiElement(LIDENTIFIER)('arg')
                    PsiElement())(')')
                  CASES
                    CASE_BLOCK
                      PsiElement(case)('case')
                      PsiElement(()('(')
                      CASE_ITEM
                        IS_CASE_CONDITION
                          PsiElement(is)('is')
                          TYPE
                            UNION_TYPE
                              INTERSECTION_TYPE
                                ENTRY_TYPE
                                  ABBREVIATED_TYPE
                                    QUALIFIED_TYPE
                                      TYPE_NAME_WITH_ARGUMENTS
                                        TYPE_NAME
                                          PsiElement(UIDENTIFIER)('Failed')
                                        TYPE_ARGUMENTS
                                          PsiElement(<)('<')
                                          TYPE_ARGUMENT
                                            TYPE
                                              UNION_TYPE
                                                INTERSECTION_TYPE
                                                  ENTRY_TYPE
                                                    ABBREVIATED_TYPE
                                                      QUALIFIED_TYPE
                                                        TYPE_NAME_WITH_ARGUMENTS
                                                          TYPE_NAME
                                                            PsiElement(UIDENTIFIER)('Void')
                                          PsiElement(>)('>')
                      PsiElement())(')')
                      BLOCK
                        PsiElement({)('{')
                        PsiElement(})('}')
                    CASE_BLOCK
                      PsiElement(case)('case')
                      PsiElement(()('(')
                      CASE_ITEM
                        IS_CASE_CONDITION
                          PsiElement(is)('is')
                          TYPE
                            UNION_TYPE
                              INTERSECTION_TYPE
                                ENTRY_TYPE
                                  ABBREVIATED_TYPE
                                    QUALIFIED_TYPE
                                      TYPE_NAME_WITH_ARGUMENTS
                                        TYPE_NAME
                                          PsiElement(UIDENTIFIER)('Succeeded')
                                        TYPE_ARGUMENTS
                                          PsiElement(<)('<')
                                          TYPE_ARGUMENT
                                            TYPE
                                              UNION_TYPE
                                                INTERSECTION_TYPE
                                                  ENTRY_TYPE
                                                    ABBREVIATED_TYPE
                                                      QUALIFIED_TYPE
                                                        TYPE_NAME_WITH_ARGUMENTS
                                                          TYPE_NAME
                                                            PsiElement(UIDENTIFIER)('Void')
                                          PsiElement(>)('>')
                      PsiElement())(')')
                      BLOCK
                        PsiElement({)('{')
                        PsiElement(})('}')
          PsiElement(})('}')